{
    "sysc5105-project/netdata-master/tree/master/collectors/proc.plugin/proc_softirqs.c": {
        "clones": [
            {
                "file": "sysc5105-project/netdata-master/tree/master/collectors/proc.plugin/proc_interrupts.c",
                "SLOC": "202",
                "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include \"plugin_proc.h\"\n\n#define PLUGIN_PROC_MODULE_INTERRUPTS_NAME \"/proc/interrupts\"\n#define CONFIG_SECTION_PLUGIN_PROC_INTERRUPTS \"plugin:\" PLUGIN_PROC_CONFIG_NAME \":\" PLUGIN_PROC_MODULE_INTERRUPTS_NAME\n\n#define MAX_INTERRUPT_NAME 50\n\nstruct cpu_interrupt {\n    unsigned long long value;\n    RRDDIM *rd;\n};\n\nstruct interrupt {\n    int used;\n    char *id;\n    char name[MAX_INTERRUPT_NAME + 1];\n    RRDDIM *rd;\n    unsigned long long total;\n    struct cpu_interrupt cpu[];\n};\n\n// since each interrupt is variable in size\n// we use this to calculate its record size\n#define recordsize(cpus) (sizeof(struct interrupt) + ((cpus) * sizeof(struct cpu_interrupt)))\n\n// given a base, get a pointer to each record\n#define irrindex(base, line, cpus) ((struct interrupt *)&((char *)(base))[(line) * recordsize(cpus)])\n\nstatic inline struct interrupt *get_interrupts_array(size_t lines, int cpus) {\n    static struct interrupt *irrs = NULL;\n    static size_t allocated = 0;\n\n    if(unlikely(lines != allocated)) {\n        size_t l;\n        int c;\n\n        irrs = (struct interrupt *)reallocz(irrs, lines * recordsize(cpus));\n\n        // reset all interrupt RRDDIM pointers as any line could have shifted\n        for(l = 0; l < lines ;l++) {\n            struct interrupt *irr = irrindex(irrs, l, cpus);\n            irr->rd = NULL;\n            irr->name[0] = '\\0';\n            for(c = 0; c < cpus ;c++)\n                irr->cpu[c].rd = NULL;\n        }\n\n        allocated = lines;\n    }\n\n    return irrs;\n}\n\nint do_proc_interrupts(int update_every, usec_t dt) {\n    (void)dt;\n    static procfile *ff = NULL;\n    static int cpus = -1, do_per_core = CONFIG_BOOLEAN_INVALID;\n    struct interrupt *irrs = NULL;\n\n    if(unlikely(do_per_core == CONFIG_BOOLEAN_INVALID))\n        do_per_core = config_get_boolean_ondemand(CONFIG_SECTION_PLUGIN_PROC_INTERRUPTS, \"interrupts per core\", CONFIG_BOOLEAN_AUTO);\n\n    if(unlikely(!ff)) {\n        char filename[FILENAME_MAX + 1];\n        snprintfz(filename, FILENAME_MAX, \"%s%s\", netdata_configured_host_prefix, \"/proc/interrupts\");\n        ff = procfile_open(config_get(CONFIG_SECTION_PLUGIN_PROC_INTERRUPTS, \"filename to monitor\", filename), \" \\t\", PROCFILE_FLAG_DEFAULT);\n    }\n    if(unlikely(!ff))\n        return 1;\n\n    ff = procfile_readall(ff);\n    if(unlikely(!ff))\n        return 0; // we return 0, so that we will retry to open it next time\n\n    size_t lines = procfile_lines(ff), l;\n    size_t words = procfile_linewords(ff, 0);\n\n    if(unlikely(!lines)) {\n        error(\"Cannot read /proc/interrupts, zero lines reported.\");\n        return 1;\n    }\n\n    // find how many CPUs are there\n    if(unlikely(cpus == -1)) {\n        uint32_t w;\n        cpus = 0;\n        for(w = 0; w < words ; w++) {\n            if(likely(strncmp(procfile_lineword(ff, 0, w), \"CPU\", 3) == 0))\n                cpus++;\n        }\n    }\n\n    if(unlikely(!cpus)) {\n        error(\"PLUGIN: PROC_INTERRUPTS: Cannot find the number of CPUs in /proc/interrupts\");\n        return 1;\n    }\n\n    // allocate the size we need;\n    irrs = get_interrupts_array(lines, cpus);\n    irrs[0].used = 0;\n\n    // loop through all lines\n    for(l = 1; l < lines ;l++) {\n        struct interrupt *irr = irrindex(irrs, l, cpus);\n        irr->used = 0;\n        irr->total = 0;\n\n        words = procfile_linewords(ff, l);\n        if(unlikely(!words)) continue;\n\n        irr->id = procfile_lineword(ff, l, 0);\n        if(unlikely(!irr->id || !irr->id[0])) continue;\n\n        size_t idlen = strlen(irr->id);\n        if(irr->id[idlen - 1] == ':')\n            irr->id[--idlen] = '\\0';\n\n        int c;\n        for(c = 0; c < cpus ;c++) {\n            if(likely((c + 1) < (int)words))\n                irr->cpu[c].value = str2ull(procfile_lineword(ff, l, (uint32_t)(c + 1)));\n            else\n                irr->cpu[c].value = 0;\n\n            irr->total += irr->cpu[c].value;\n        }\n\n        if(unlikely(isdigit(irr->id[0]) && (uint32_t)(cpus + 2) < words)) {\n            strncpyz(irr->name, procfile_lineword(ff, l, words - 1), MAX_INTERRUPT_NAME);\n            size_t nlen = strlen(irr->name);\n            if(likely(nlen + 1 + idlen <= MAX_INTERRUPT_NAME)) {\n                irr->name[nlen] = '_';\n                strncpyz(&irr->name[nlen + 1], irr->id, MAX_INTERRUPT_NAME - nlen - 1);\n            }\n            else {\n                irr->name[MAX_INTERRUPT_NAME - idlen - 1] = '_';\n                strncpyz(&irr->name[MAX_INTERRUPT_NAME - idlen], irr->id, idlen);\n            }\n        }\n        else {\n            strncpyz(irr->name, irr->id, MAX_INTERRUPT_NAME);\n        }\n\n        irr->used = 1;\n    }\n\n    // --------------------------------------------------------------------\n\n    static RRDSET *st_system_interrupts = NULL;\n    if(unlikely(!st_system_interrupts))\n        st_system_interrupts = rrdset_create_localhost(\n                \"system\"\n                , \"interrupts\"\n                , NULL\n                , \"interrupts\"\n                , NULL\n                , \"System interrupts\"\n                , \"interrupts/s\"\n                , PLUGIN_PROC_NAME\n                , PLUGIN_PROC_MODULE_INTERRUPTS_NAME\n                , NETDATA_CHART_PRIO_SYSTEM_INTERRUPTS\n                , update_every\n                , RRDSET_TYPE_STACKED\n        );\n    else\n        rrdset_next(st_system_interrupts);\n\n    for(l = 0; l < lines ;l++) {\n        struct interrupt *irr = irrindex(irrs, l, cpus);\n        if(irr->used && irr->total) {\n            // some interrupt may have changed without changing the total number of lines\n            // if the same number of interrupts have been added and removed between two\n            // calls of this function.\n            if(unlikely(!irr->rd || strncmp(irr->rd->name, irr->name, MAX_INTERRUPT_NAME) != 0)) {\n                irr->rd = rrddim_add(st_system_interrupts, irr->id, irr->name, 1, 1, RRD_ALGORITHM_INCREMENTAL);\n                rrddim_set_name(st_system_interrupts, irr->rd, irr->name);\n\n                // also reset per cpu RRDDIMs to avoid repeating strncmp() in the per core loop\n                if(likely(do_per_core != CONFIG_BOOLEAN_NO)) {\n                    int c;\n                    for(c = 0; c < cpus; c++) irr->cpu[c].rd = NULL;\n                }\n            }\n\n            rrddim_set_by_pointer(st_system_interrupts, irr->rd, irr->total);\n        }\n    }\n\n    rrdset_done(st_system_interrupts);\n\n    // --------------------------------------------------------------------\n\n    if(likely(do_per_core != CONFIG_BOOLEAN_NO)) {\n        static RRDSET **core_st = NULL;\n        static int old_cpus = 0;\n\n        if(old_cpus < cpus) {\n            core_st = reallocz(core_st, sizeof(RRDSET *) * cpus);\n            memset(&core_st[old_cpus], 0, sizeof(RRDSET *) * (cpus - old_cpus));\n            old_cpus = cpus;\n        }\n\n        int c;\n\n        for(c = 0; c < cpus ;c++) {\n            if(unlikely(!core_st[c])) {\n                char id[50+1];\n                snprintfz(id, 50, \"cpu%d_interrupts\", c);\n\n                char title[100+1];\n                snprintfz(title, 100, \"CPU%d Interrupts\", c);\n                core_st[c] = rrdset_create_localhost(\n                        \"cpu\"\n                        , id\n                        , NULL\n                        , \"interrupts\"\n                        , \"cpu.interrupts\"\n                        , title\n                        , \"interrupts/s\"\n                        , PLUGIN_PROC_NAME\n                        , PLUGIN_PROC_MODULE_INTERRUPTS_NAME\n                        , NETDATA_CHART_PRIO_INTERRUPTS_PER_CORE + c\n                        , update_every\n                        , RRDSET_TYPE_STACKED\n                );\n            }\n            else rrdset_next(core_st[c]);\n\n            for(l = 0; l < lines ;l++) {\n                struct interrupt *irr = irrindex(irrs, l, cpus);\n                if(irr->used && (do_per_core == CONFIG_BOOLEAN_YES || irr->cpu[c].value)) {\n                    if(unlikely(!irr->cpu[c].rd)) {\n                        irr->cpu[c].rd = rrddim_add(core_st[c], irr->id, irr->name, 1, 1, RRD_ALGORITHM_INCREMENTAL);\n                        rrddim_set_name(core_st[c], irr->cpu[c].rd, irr->name);\n                    }\n\n                    rrddim_set_by_pointer(core_st[c], irr->cpu[c].rd, irr->cpu[c].value);\n                }\n            }\n\n            rrdset_done(core_st[c]);\n        }\n    }\n\n    return 0;\n}\n"
            }
        ],
        "SLOC": "191",
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include \"plugin_proc.h\"\n\n#define PLUGIN_PROC_MODULE_SOFTIRQS_NAME \"/proc/softirqs\"\n\n#define MAX_INTERRUPT_NAME 50\n\nstruct cpu_interrupt {\n    unsigned long long value;\n    RRDDIM *rd;\n};\n\nstruct interrupt {\n    int used;\n    char *id;\n    char name[MAX_INTERRUPT_NAME + 1];\n    RRDDIM *rd;\n    unsigned long long total;\n    struct cpu_interrupt cpu[];\n};\n\n// since each interrupt is variable in size\n// we use this to calculate its record size\n#define recordsize(cpus) (sizeof(struct interrupt) + ((cpus) * sizeof(struct cpu_interrupt)))\n\n// given a base, get a pointer to each record\n#define irrindex(base, line, cpus) ((struct interrupt *)&((char *)(base))[(line) * recordsize(cpus)])\n\nstatic inline struct interrupt *get_interrupts_array(size_t lines, int cpus) {\n    static struct interrupt *irrs = NULL;\n    static size_t allocated = 0;\n\n    if(unlikely(lines != allocated)) {\n        uint32_t l;\n        int c;\n\n        irrs = (struct interrupt *)reallocz(irrs, lines * recordsize(cpus));\n\n        // reset all interrupt RRDDIM pointers as any line could have shifted\n        for(l = 0; l < lines ;l++) {\n            struct interrupt *irr = irrindex(irrs, l, cpus);\n            irr->rd = NULL;\n            irr->name[0] = '\\0';\n            for(c = 0; c < cpus ;c++)\n                irr->cpu[c].rd = NULL;\n        }\n\n        allocated = lines;\n    }\n\n    return irrs;\n}\n\nint do_proc_softirqs(int update_every, usec_t dt) {\n    (void)dt;\n    static procfile *ff = NULL;\n    static int cpus = -1, do_per_core = CONFIG_BOOLEAN_INVALID;\n    struct interrupt *irrs = NULL;\n\n    if(unlikely(do_per_core == CONFIG_BOOLEAN_INVALID))\n        do_per_core = config_get_boolean_ondemand(\"plugin:proc:/proc/softirqs\", \"interrupts per core\", CONFIG_BOOLEAN_AUTO);\n\n    if(unlikely(!ff)) {\n        char filename[FILENAME_MAX + 1];\n        snprintfz(filename, FILENAME_MAX, \"%s%s\", netdata_configured_host_prefix, \"/proc/softirqs\");\n        ff = procfile_open(config_get(\"plugin:proc:/proc/softirqs\", \"filename to monitor\", filename), \" \\t:\", PROCFILE_FLAG_DEFAULT);\n        if(unlikely(!ff)) return 1;\n    }\n\n    ff = procfile_readall(ff);\n    if(unlikely(!ff)) return 0; // we return 0, so that we will retry to open it next time\n\n    size_t lines = procfile_lines(ff), l;\n    size_t words = procfile_linewords(ff, 0);\n\n    if(unlikely(!lines)) {\n        error(\"Cannot read /proc/softirqs, zero lines reported.\");\n        return 1;\n    }\n\n    // find how many CPUs are there\n    if(unlikely(cpus == -1)) {\n        uint32_t w;\n        cpus = 0;\n        for(w = 0; w < words ; w++) {\n            if(likely(strncmp(procfile_lineword(ff, 0, w), \"CPU\", 3) == 0))\n                cpus++;\n        }\n    }\n\n    if(unlikely(!cpus)) {\n        error(\"PLUGIN: PROC_SOFTIRQS: Cannot find the number of CPUs in /proc/softirqs\");\n        return 1;\n    }\n\n    // allocate the size we need;\n    irrs = get_interrupts_array(lines, cpus);\n    irrs[0].used = 0;\n\n    // loop through all lines\n    for(l = 1; l < lines ;l++) {\n        struct interrupt *irr = irrindex(irrs, l, cpus);\n        irr->used = 0;\n        irr->total = 0;\n\n        words = procfile_linewords(ff, l);\n        if(unlikely(!words)) continue;\n\n        irr->id = procfile_lineword(ff, l, 0);\n        if(unlikely(!irr->id || !irr->id[0])) continue;\n\n        int c;\n        for(c = 0; c < cpus ;c++) {\n            if(likely((c + 1) < (int)words))\n                irr->cpu[c].value = str2ull(procfile_lineword(ff, l, (uint32_t)(c + 1)));\n            else\n                irr->cpu[c].value = 0;\n\n            irr->total += irr->cpu[c].value;\n        }\n\n        strncpyz(irr->name, irr->id, MAX_INTERRUPT_NAME);\n\n        irr->used = 1;\n    }\n\n    // --------------------------------------------------------------------\n\n    static RRDSET *st_system_softirqs = NULL;\n    if(unlikely(!st_system_softirqs))\n        st_system_softirqs = rrdset_create_localhost(\n                \"system\"\n                , \"softirqs\"\n                , NULL\n                , \"softirqs\"\n                , NULL\n                , \"System softirqs\"\n                , \"softirqs/s\"\n                , PLUGIN_PROC_NAME\n                , PLUGIN_PROC_MODULE_SOFTIRQS_NAME\n                , NETDATA_CHART_PRIO_SYSTEM_SOFTIRQS\n                , update_every\n                , RRDSET_TYPE_STACKED\n        );\n    else\n        rrdset_next(st_system_softirqs);\n\n    for(l = 0; l < lines ;l++) {\n        struct interrupt *irr = irrindex(irrs, l, cpus);\n\n        if(irr->used && irr->total) {\n            // some interrupt may have changed without changing the total number of lines\n            // if the same number of interrupts have been added and removed between two\n            // calls of this function.\n            if(unlikely(!irr->rd || strncmp(irr->name, irr->rd->name, MAX_INTERRUPT_NAME) != 0)) {\n                irr->rd = rrddim_add(st_system_softirqs, irr->id, irr->name, 1, 1, RRD_ALGORITHM_INCREMENTAL);\n                rrddim_set_name(st_system_softirqs, irr->rd, irr->name);\n\n                // also reset per cpu RRDDIMs to avoid repeating strncmp() in the per core loop\n                if(likely(do_per_core != CONFIG_BOOLEAN_NO)) {\n                    int c;\n                    for(c = 0; c < cpus; c++) irr->cpu[c].rd = NULL;\n                }\n            }\n\n            rrddim_set_by_pointer(st_system_softirqs, irr->rd, irr->total);\n        }\n    }\n\n    rrdset_done(st_system_softirqs);\n\n    // --------------------------------------------------------------------\n\n    if(do_per_core != CONFIG_BOOLEAN_NO) {\n        static RRDSET **core_st = NULL;\n        static int old_cpus = 0;\n\n        if(old_cpus < cpus) {\n            core_st = reallocz(core_st, sizeof(RRDSET *) * cpus);\n            memset(&core_st[old_cpus], 0, sizeof(RRDSET *) * (cpus - old_cpus));\n            old_cpus = cpus;\n        }\n\n        int c;\n\n        for(c = 0; c < cpus ; c++) {\n            if(unlikely(!core_st[c])) {\n                // find if everything is just zero\n                unsigned long long core_sum = 0;\n\n                for (l = 0; l < lines; l++) {\n                    struct interrupt *irr = irrindex(irrs, l, cpus);\n                    if (unlikely(!irr->used)) continue;\n                    core_sum += irr->cpu[c].value;\n                }\n\n                if (unlikely(core_sum == 0)) continue; // try next core\n\n                char id[50 + 1];\n                snprintfz(id, 50, \"cpu%d_softirqs\", c);\n\n                char title[100 + 1];\n                snprintfz(title, 100, \"CPU%d softirqs\", c);\n\n                core_st[c] = rrdset_create_localhost(\n                        \"cpu\"\n                        , id\n                        , NULL\n                        , \"softirqs\"\n                        , \"cpu.softirqs\"\n                        , title\n                        , \"softirqs/s\"\n                        , PLUGIN_PROC_NAME\n                        , PLUGIN_PROC_MODULE_SOFTIRQS_NAME\n                        , NETDATA_CHART_PRIO_SOFTIRQS_PER_CORE + c\n                        , update_every\n                        , RRDSET_TYPE_STACKED\n                );\n            }\n            else\n                rrdset_next(core_st[c]);\n\n            for(l = 0; l < lines ;l++) {\n                struct interrupt *irr = irrindex(irrs, l, cpus);\n\n                if(irr->used && (do_per_core == CONFIG_BOOLEAN_YES || irr->cpu[c].value)) {\n                    if(unlikely(!irr->cpu[c].rd)) {\n                        irr->cpu[c].rd = rrddim_add(core_st[c], irr->id, irr->name, 1, 1, RRD_ALGORITHM_INCREMENTAL);\n                        rrddim_set_name(core_st[c], irr->cpu[c].rd, irr->name);\n                    }\n\n                    rrddim_set_by_pointer(core_st[c], irr->cpu[c].rd, irr->cpu[c].value);\n                }\n            }\n\n            rrdset_done(core_st[c]);\n        }\n    }\n\n    return 0;\n}\n"
    },
    "sysc5105-project/netdata-master/tree/master/exporting/prometheus/remote_write/remote_write_request.cc": {
        "clones": [
            {
                "file": "sysc5105-project/netdata-master/tree/master/backends/prometheus/remote_write/remote_write.cc",
                "SLOC": "91",
                "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include <snappy.h>\n#include \"remote_write.pb.h\"\n#include \"remote_write.h\"\n\nusing namespace prometheus;\n\nstatic google::protobuf::Arena arena;\nstatic WriteRequest *write_request;\n\nvoid backends_init_write_request() {\n    GOOGLE_PROTOBUF_VERIFY_VERSION;\n    write_request = google::protobuf::Arena::CreateMessage<WriteRequest>(&arena);\n}\n\nvoid backends_clear_write_request() {\n    write_request->clear_timeseries();\n}\n\nvoid backends_add_host_info(const char *name, const char *instance, const char *application, const char *version, const int64_t timestamp) {\n    TimeSeries *timeseries;\n    Sample *sample;\n    Label *label;\n\n    timeseries = write_request->add_timeseries();\n\n    label = timeseries->add_labels();\n    label->set_name(\"__name__\");\n    label->set_value(name);\n\n    label = timeseries->add_labels();\n    label->set_name(\"instance\");\n    label->set_value(instance);\n\n    if(application) {\n        label = timeseries->add_labels();\n        label->set_name(\"application\");\n        label->set_value(application);\n    }\n\n    if(version) {\n        label = timeseries->add_labels();\n        label->set_name(\"version\");\n        label->set_value(version);\n    }\n\n    sample = timeseries->add_samples();\n    sample->set_value(1);\n    sample->set_timestamp(timestamp);\n}\n\n// adds tag to the last created timeseries\nvoid backends_add_tag(char *tag, char *value) {\n    TimeSeries *timeseries;\n    Label *label;\n\n    timeseries = write_request->mutable_timeseries(write_request->timeseries_size() - 1);\n\n    label = timeseries->add_labels();\n    label->set_name(tag);\n    label->set_value(value);\n}\n\nvoid backends_add_metric(const char *name, const char *chart, const char *family, const char *dimension, const char *instance, const double value, const int64_t timestamp) {\n    TimeSeries *timeseries;\n    Sample *sample;\n    Label *label;\n\n    timeseries = write_request->add_timeseries();\n\n    label = timeseries->add_labels();\n    label->set_name(\"__name__\");\n    label->set_value(name);\n\n    label = timeseries->add_labels();\n    label->set_name(\"chart\");\n    label->set_value(chart);\n\n    label = timeseries->add_labels();\n    label->set_name(\"family\");\n    label->set_value(family);\n\n    if(dimension) {\n        label = timeseries->add_labels();\n        label->set_name(\"dimension\");\n        label->set_value(dimension);\n    }\n\n    label = timeseries->add_labels();\n    label->set_name(\"instance\");\n    label->set_value(instance);\n\n    sample = timeseries->add_samples();\n    sample->set_value(value);\n    sample->set_timestamp(timestamp);\n}\n\nsize_t backends_get_write_request_size(){\n#if GOOGLE_PROTOBUF_VERSION < 3001000\n    size_t size = (size_t)snappy::MaxCompressedLength(write_request->ByteSize());\n#else\n    size_t size = (size_t)snappy::MaxCompressedLength(write_request->ByteSizeLong());\n#endif\n\n    return (size < INT_MAX)?size:0;\n}\n\nint backends_pack_write_request(char *buffer, size_t *size) {\n    std::string uncompressed_write_request;\n    if(write_request->SerializeToString(&uncompressed_write_request) == false) return 1;\n\n    snappy::RawCompress(uncompressed_write_request.data(), uncompressed_write_request.size(), buffer, size);\n\n    return 0;\n}\n\nvoid backends_protocol_buffers_shutdown() {\n    google::protobuf::ShutdownProtobufLibrary();\n}\n"
            }
        ],
        "SLOC": "157",
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include <snappy.h>\n#include \"remote_write.pb.h\"\n#include \"remote_write_request.h\"\n\nusing namespace prometheus;\n\ngoogle::protobuf::Arena arena;\n\n/**\n * Initialize a write request\n *\n * @return Returns a new write request\n */\nvoid *init_write_request()\n{\n    GOOGLE_PROTOBUF_VERIFY_VERSION;\n    WriteRequest *write_request = google::protobuf::Arena::CreateMessage<WriteRequest>(&arena);\n    return (void *)write_request;\n}\n\n/**\n * Adds information about a host to a write request\n *\n * @param write_request_p the write request\n * @param name the name of a metric which is used for providing the host information\n * @param instance the name of the host itself\n * @param application the name of a program which sends the information\n * @param version the version of the program\n * @param timestamp the timestamp for the metric in milliseconds\n */\nvoid add_host_info(\n    void *write_request_p,\n    const char *name, const char *instance, const char *application, const char *version, const int64_t timestamp)\n{\n    WriteRequest *write_request = (WriteRequest *)write_request_p;\n    TimeSeries *timeseries;\n    Sample *sample;\n    Label *label;\n\n    timeseries = write_request->add_timeseries();\n\n    label = timeseries->add_labels();\n    label->set_name(\"__name__\");\n    label->set_value(name);\n\n    label = timeseries->add_labels();\n    label->set_name(\"instance\");\n    label->set_value(instance);\n\n    if (application) {\n        label = timeseries->add_labels();\n        label->set_name(\"application\");\n        label->set_value(application);\n    }\n\n    if (version) {\n        label = timeseries->add_labels();\n        label->set_name(\"version\");\n        label->set_value(version);\n    }\n\n    sample = timeseries->add_samples();\n    sample->set_value(1);\n    sample->set_timestamp(timestamp);\n}\n\n/**\n * Adds a label to the last created timeseries\n *\n * @param write_request_p the write request with the timeseries\n * @param key the key of the label\n * @param value the value of the label\n */\nvoid add_label(void *write_request_p, char *key, char *value)\n{\n    WriteRequest *write_request = (WriteRequest *)write_request_p;\n    TimeSeries *timeseries;\n    Label *label;\n\n    timeseries = write_request->mutable_timeseries(write_request->timeseries_size() - 1);\n\n    label = timeseries->add_labels();\n    label->set_name(key);\n    label->set_value(value);\n}\n\n/**\n * Adds a metric to a write request\n *\n * @param write_request_p the write request\n * @param name the name of the metric\n * @param chart the chart, the metric belongs to\n * @param family the family, the metric belongs to\n * @param dimension the dimension, the metric belongs to\n * @param instance the name of the host, the metric belongs to\n * @param value the value of the metric\n * @param timestamp the timestamp for the metric in milliseconds\n */\nvoid add_metric(\n    void *write_request_p,\n    const char *name, const char *chart, const char *family, const char *dimension, const char *instance,\n    const double value, const int64_t timestamp)\n{\n    WriteRequest *write_request = (WriteRequest *)write_request_p;\n    TimeSeries *timeseries;\n    Sample *sample;\n    Label *label;\n\n    timeseries = write_request->add_timeseries();\n\n    label = timeseries->add_labels();\n    label->set_name(\"__name__\");\n    label->set_value(name);\n\n    label = timeseries->add_labels();\n    label->set_name(\"chart\");\n    label->set_value(chart);\n\n    label = timeseries->add_labels();\n    label->set_name(\"family\");\n    label->set_value(family);\n\n    if (dimension) {\n        label = timeseries->add_labels();\n        label->set_name(\"dimension\");\n        label->set_value(dimension);\n    }\n\n    label = timeseries->add_labels();\n    label->set_name(\"instance\");\n    label->set_value(instance);\n\n    sample = timeseries->add_samples();\n    sample->set_value(value);\n    sample->set_timestamp(timestamp);\n}\n\n/**\n * Gets the size of a write request\n *\n * @param write_request_p the write request\n * @return Returns the size of the write request\n */\nsize_t get_write_request_size(void *write_request_p)\n{\n    WriteRequest *write_request = (WriteRequest *)write_request_p;\n\n#if GOOGLE_PROTOBUF_VERSION < 3001000\n    size_t size = (size_t)snappy::MaxCompressedLength(write_request->ByteSize());\n#else\n    size_t size = (size_t)snappy::MaxCompressedLength(write_request->ByteSizeLong());\n#endif\n\n    return (size < INT_MAX) ? size : 0;\n}\n\n/**\n * Packs a write request into a buffer and clears the request\n *\n * @param write_request_p the write request\n * @param buffer a buffer, where compressed data is written\n * @param size gets the size of the write request, returns the size of the compressed data\n * @return Returns 0 on success, 1 on failure\n */\nint pack_and_clear_write_request(void *write_request_p, char *buffer, size_t *size)\n{\n    WriteRequest *write_request = (WriteRequest *)write_request_p;\n    std::string uncompressed_write_request;\n\n    if (write_request->SerializeToString(&uncompressed_write_request) == false)\n        return 1;\n    write_request->clear_timeseries();\n    snappy::RawCompress(uncompressed_write_request.data(), uncompressed_write_request.size(), buffer, size);\n\n    return 0;\n}\n\n/**\n * Shuts down the Protobuf library\n */\nvoid protocol_buffers_shutdown()\n{\n    google::protobuf::ShutdownProtobufLibrary();\n}\n"
    },
    "sysc5105-project/netdata-master/tree/master/web/api/queries/min/min.c": {
        "clones": [
            {
                "file": "sysc5105-project/netdata-master/tree/master/web/api/queries/max/max.c",
                "SLOC": "46",
                "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include \"max.h\"\n\n// ----------------------------------------------------------------------------\n// max\n\nstruct grouping_max {\n    calculated_number max;\n    size_t count;\n};\n\nvoid *grouping_create_max(RRDR *r) {\n    (void)r;\n    return callocz(1, sizeof(struct grouping_max));\n}\n\n// resets when switches dimensions\n// so, clear everything to restart\nvoid grouping_reset_max(RRDR *r) {\n    struct grouping_max *g = (struct grouping_max *)r->internal.grouping_data;\n    g->max = 0;\n    g->count = 0;\n}\n\nvoid grouping_free_max(RRDR *r) {\n    freez(r->internal.grouping_data);\n    r->internal.grouping_data = NULL;\n}\n\nvoid grouping_add_max(RRDR *r, calculated_number value) {\n    if(!isnan(value)) {\n        struct grouping_max *g = (struct grouping_max *)r->internal.grouping_data;\n\n        if(!g->count || calculated_number_fabs(value) > calculated_number_fabs(g->max)) {\n            g->max = value;\n            g->count++;\n        }\n    }\n}\n\ncalculated_number grouping_flush_max(RRDR *r, RRDR_VALUE_FLAGS *rrdr_value_options_ptr) {\n    struct grouping_max *g = (struct grouping_max *)r->internal.grouping_data;\n\n    calculated_number value;\n\n    if(unlikely(!g->count)) {\n        value = 0.0;\n        *rrdr_value_options_ptr |= RRDR_VALUE_EMPTY;\n    }\n    else {\n        value = g->max;\n    }\n\n    g->max = 0.0;\n    g->count = 0;\n\n    return value;\n}\n\n"
            }
        ],
        "SLOC": "46",
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\n#include \"min.h\"\n\n// ----------------------------------------------------------------------------\n// min\n\nstruct grouping_min {\n    calculated_number min;\n    size_t count;\n};\n\nvoid *grouping_create_min(RRDR *r) {\n    (void)r;\n    return callocz(1, sizeof(struct grouping_min));\n}\n\n// resets when switches dimensions\n// so, clear everything to restart\nvoid grouping_reset_min(RRDR *r) {\n    struct grouping_min *g = (struct grouping_min *)r->internal.grouping_data;\n    g->min = 0;\n    g->count = 0;\n}\n\nvoid grouping_free_min(RRDR *r) {\n    freez(r->internal.grouping_data);\n    r->internal.grouping_data = NULL;\n}\n\nvoid grouping_add_min(RRDR *r, calculated_number value) {\n    if(!isnan(value)) {\n        struct grouping_min *g = (struct grouping_min *)r->internal.grouping_data;\n\n        if(!g->count || calculated_number_fabs(value) < calculated_number_fabs(g->min)) {\n            g->min = value;\n            g->count++;\n        }\n    }\n}\n\ncalculated_number grouping_flush_min(RRDR *r, RRDR_VALUE_FLAGS *rrdr_value_options_ptr) {\n    struct grouping_min *g = (struct grouping_min *)r->internal.grouping_data;\n\n    calculated_number value;\n\n    if(unlikely(!g->count)) {\n        value = 0.0;\n        *rrdr_value_options_ptr |= RRDR_VALUE_EMPTY;\n    }\n    else {\n        value = g->min;\n    }\n\n    g->min = 0.0;\n    g->count = 0;\n\n    return value;\n}\n\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "46",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIndexError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyArgumentError.java",
                "SLOC": "51",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ArgumentError;\n\n/**\n * The Java representation of a Ruby ArgumentError.\n *\n * @see ArgumentError\n */\n@JRubyClass(name=\"ArgumentError\", parent=\"StandardError\")\npublic class RubyArgumentError extends RubyStandardError {\n    protected RubyArgumentError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    protected RubyArgumentError(Ruby runtime, RubyClass exceptionClass, String message) {\n        super(runtime, exceptionClass, message);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass argumentErrorClass = runtime.defineClass(\"ArgumentError\", exceptionClass, (r, klass) -> new RubyArgumentError(runtime, klass));\n\n        return argumentErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new ArgumentError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "51",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.IndexError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby IndexError.\n *\n * @see IndexError\n */\n@JRubyClass(name=\"IndexError\", parent=\"StandardError\")\npublic class RubyIndexError extends RubyStandardError {\n    protected RubyIndexError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    protected RubyIndexError(Ruby runtime, RubyClass exceptionClass, String message) {\n        super(runtime, exceptionClass, message);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass IndexErrorClass = runtime.defineClass(\"IndexError\", exceptionClass, (r, klass) -> new RubyIndexError(runtime, klass));\n\n        return IndexErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new IndexError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFatal.java",
                "SLOC": "49",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.Fatal;\n\n/**\n * The Java representation of a Ruby Fatal.\n *\n * @see Fatal\n */\n@JRubyClass(name=\"Fatal\", parent=\"Exception\")\npublic class RubyFatal extends RubyException {\n    protected RubyFatal(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass fatalClass = runtime.defineClass(\"Fatal\", exceptionClass, (r, klass) -> new RubyFatal(runtime, klass));\n\n        // Remove the constant so it's not accessible (jruby/jruby#5648)\n        runtime.getObject().deleteConstant(\"Fatal\");\n\n        return fatalClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new Fatal(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "48",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "48",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRuntimeError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "48",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RuntimeError;\nimport org.jruby.exceptions.StandardError;\n\n/**\n * The Java representation of a Ruby RuntimeError.\n *\n * @see RuntimeError\n */\n@JRubyClass(name=\"RuntimeError\", parent=\"StandardError\")\npublic class RubyRuntimeError extends RubyStandardError {\n    protected RubyRuntimeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass runtimeErrorClass = runtime.defineClass(\"RuntimeError\", exceptionClass, (r, klass) -> new RubyRuntimeError(runtime, klass));\n\n        return runtimeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RuntimeError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFatal.java",
                "SLOC": "49",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.Fatal;\n\n/**\n * The Java representation of a Ruby Fatal.\n *\n * @see Fatal\n */\n@JRubyClass(name=\"Fatal\", parent=\"Exception\")\npublic class RubyFatal extends RubyException {\n    protected RubyFatal(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass fatalClass = runtime.defineClass(\"Fatal\", exceptionClass, (r, klass) -> new RubyFatal(runtime, klass));\n\n        // Remove the constant so it's not accessible (jruby/jruby#5648)\n        runtime.getObject().deleteConstant(\"Fatal\");\n\n        return fatalClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new Fatal(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "48",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFatal.java",
                "SLOC": "49",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.Fatal;\n\n/**\n * The Java representation of a Ruby Fatal.\n *\n * @see Fatal\n */\n@JRubyClass(name=\"Fatal\", parent=\"Exception\")\npublic class RubyFatal extends RubyException {\n    protected RubyFatal(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass fatalClass = runtime.defineClass(\"Fatal\", exceptionClass, (r, klass) -> new RubyFatal(runtime, klass));\n\n        // Remove the constant so it's not accessible (jruby/jruby#5648)\n        runtime.getObject().deleteConstant(\"Fatal\");\n\n        return fatalClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new Fatal(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyStandardError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIndexError.java",
                "SLOC": "51",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.IndexError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby IndexError.\n *\n * @see IndexError\n */\n@JRubyClass(name=\"IndexError\", parent=\"StandardError\")\npublic class RubyIndexError extends RubyStandardError {\n    protected RubyIndexError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    protected RubyIndexError(Ruby runtime, RubyClass exceptionClass, String message) {\n        super(runtime, exceptionClass, message);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass IndexErrorClass = runtime.defineClass(\"IndexError\", exceptionClass, (r, klass) -> new RubyIndexError(runtime, klass));\n\n        return IndexErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new IndexError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyArgumentError.java",
                "SLOC": "51",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ArgumentError;\n\n/**\n * The Java representation of a Ruby ArgumentError.\n *\n * @see ArgumentError\n */\n@JRubyClass(name=\"ArgumentError\", parent=\"StandardError\")\npublic class RubyArgumentError extends RubyStandardError {\n    protected RubyArgumentError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    protected RubyArgumentError(Ruby runtime, RubyClass exceptionClass, String message) {\n        super(runtime, exceptionClass, message);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass argumentErrorClass = runtime.defineClass(\"ArgumentError\", exceptionClass, (r, klass) -> new RubyArgumentError(runtime, klass));\n\n        return argumentErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new ArgumentError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "51",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.StandardError;\n\n/**\n * The Java representation of a Ruby StandardError.\n *\n * @see StandardError\n */\n@JRubyClass(name=\"StandardError\", parent=\"Exception\")\npublic class RubyStandardError extends RubyException {\n    protected RubyStandardError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    protected RubyStandardError(Ruby runtime, RubyClass exceptionClass, String message) {\n        super(runtime, exceptionClass, message);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass standardErrorClass = runtime.defineClass(\"StandardError\", exceptionClass, (r, klass) -> new RubyStandardError(runtime, klass));\n\n        return standardErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new StandardError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySyntaxError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "48",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SyntaxError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SyntaxError.\n *\n * @see SyntaxError\n */\n@JRubyClass(name=\"SyntaxError\", parent=\"ScriptError\")\npublic class RubySyntaxError extends RubyScriptError {\n    protected RubySyntaxError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SyntaxErrorClass = runtime.defineClass(\"SyntaxError\", exceptionClass, (r, klass) -> new RubySyntaxError(runtime, klass));\n\n        return SyntaxErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SyntaxError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySystemStackError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFatal.java",
                "SLOC": "49",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.Fatal;\n\n/**\n * The Java representation of a Ruby Fatal.\n *\n * @see Fatal\n */\n@JRubyClass(name=\"Fatal\", parent=\"Exception\")\npublic class RubyFatal extends RubyException {\n    protected RubyFatal(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass fatalClass = runtime.defineClass(\"Fatal\", exceptionClass, (r, klass) -> new RubyFatal(runtime, klass));\n\n        // Remove the constant so it's not accessible (jruby/jruby#5648)\n        runtime.getObject().deleteConstant(\"Fatal\");\n\n        return fatalClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new Fatal(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySyntaxError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SyntaxError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SyntaxError.\n *\n * @see SyntaxError\n */\n@JRubyClass(name=\"SyntaxError\", parent=\"ScriptError\")\npublic class RubySyntaxError extends RubyScriptError {\n    protected RubySyntaxError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SyntaxErrorClass = runtime.defineClass(\"SyntaxError\", exceptionClass, (r, klass) -> new RubySyntaxError(runtime, klass));\n\n        return SyntaxErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SyntaxError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.SystemStackError;\n\n/**\n * The Java representation of a Ruby SystemStackError.\n *\n * @see SystemStackError\n */\n@JRubyClass(name=\"SystemStackError\", parent=\"Exception\")\npublic class RubySystemStackError extends RubyException {\n    protected RubySystemStackError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass systemStackErrorClass = runtime.defineClass(\"SystemStackError\", exceptionClass, (r, klass) -> new RubySystemStackError(runtime, klass));\n\n        return systemStackErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new SystemStackError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyThreadError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRuntimeError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RuntimeError;\nimport org.jruby.exceptions.StandardError;\n\n/**\n * The Java representation of a Ruby RuntimeError.\n *\n * @see RuntimeError\n */\n@JRubyClass(name=\"RuntimeError\", parent=\"StandardError\")\npublic class RubyRuntimeError extends RubyStandardError {\n    protected RubyRuntimeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass runtimeErrorClass = runtime.defineClass(\"RuntimeError\", exceptionClass, (r, klass) -> new RubyRuntimeError(runtime, klass));\n\n        return runtimeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RuntimeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySyntaxError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SyntaxError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SyntaxError.\n *\n * @see SyntaxError\n */\n@JRubyClass(name=\"SyntaxError\", parent=\"ScriptError\")\npublic class RubySyntaxError extends RubyScriptError {\n    protected RubySyntaxError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SyntaxErrorClass = runtime.defineClass(\"SyntaxError\", exceptionClass, (r, klass) -> new RubySyntaxError(runtime, klass));\n\n        return SyntaxErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SyntaxError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySystemStackError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.SystemStackError;\n\n/**\n * The Java representation of a Ruby SystemStackError.\n *\n * @see SystemStackError\n */\n@JRubyClass(name=\"SystemStackError\", parent=\"Exception\")\npublic class RubySystemStackError extends RubyException {\n    protected RubySystemStackError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass systemStackErrorClass = runtime.defineClass(\"SystemStackError\", exceptionClass, (r, klass) -> new RubySystemStackError(runtime, klass));\n\n        return systemStackErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new SystemStackError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ThreadError;\n\n/**\n * The Java representation of a Ruby ThreadError.\n *\n * @see ThreadError\n */\n@JRubyClass(name=\"ThreadError\", parent=\"StandardError\")\npublic class RubyThreadError extends RubyStandardError {\n    protected RubyThreadError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass threadErrorClass = runtime.defineClass(\"ThreadError\", exceptionClass, (r, klass) -> new RubyThreadError(runtime, klass));\n\n        return threadErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ThreadError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyTypeError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyThreadError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ThreadError;\n\n/**\n * The Java representation of a Ruby ThreadError.\n *\n * @see ThreadError\n */\n@JRubyClass(name=\"ThreadError\", parent=\"StandardError\")\npublic class RubyThreadError extends RubyStandardError {\n    protected RubyThreadError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass threadErrorClass = runtime.defineClass(\"ThreadError\", exceptionClass, (r, klass) -> new RubyThreadError(runtime, klass));\n\n        return threadErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ThreadError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySyntaxError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SyntaxError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SyntaxError.\n *\n * @see SyntaxError\n */\n@JRubyClass(name=\"SyntaxError\", parent=\"ScriptError\")\npublic class RubySyntaxError extends RubyScriptError {\n    protected RubySyntaxError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SyntaxErrorClass = runtime.defineClass(\"SyntaxError\", exceptionClass, (r, klass) -> new RubySyntaxError(runtime, klass));\n\n        return SyntaxErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SyntaxError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySystemStackError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.SystemStackError;\n\n/**\n * The Java representation of a Ruby SystemStackError.\n *\n * @see SystemStackError\n */\n@JRubyClass(name=\"SystemStackError\", parent=\"Exception\")\npublic class RubySystemStackError extends RubyException {\n    protected RubySystemStackError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass systemStackErrorClass = runtime.defineClass(\"SystemStackError\", exceptionClass, (r, klass) -> new RubySystemStackError(runtime, klass));\n\n        return systemStackErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new SystemStackError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRuntimeError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RuntimeError;\nimport org.jruby.exceptions.StandardError;\n\n/**\n * The Java representation of a Ruby RuntimeError.\n *\n * @see RuntimeError\n */\n@JRubyClass(name=\"RuntimeError\", parent=\"StandardError\")\npublic class RubyRuntimeError extends RubyStandardError {\n    protected RubyRuntimeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass runtimeErrorClass = runtime.defineClass(\"RuntimeError\", exceptionClass, (r, klass) -> new RubyRuntimeError(runtime, klass));\n\n        return runtimeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RuntimeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.TypeError;\n\n/**\n * The Java representation of a Ruby TypeError.\n *\n * @see TypeError\n */\n@JRubyClass(name=\"TypeError\", parent=\"StandardError\")\npublic class RubyTypeError extends RubyStandardError {\n    protected RubyTypeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass typeErrorClass = runtime.defineClass(\"TypeError\", exceptionClass, (r, klass) -> new RubyTypeError(runtime, klass));\n\n        return typeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new TypeError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyZeroDivisionError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyTypeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.TypeError;\n\n/**\n * The Java representation of a Ruby TypeError.\n *\n * @see TypeError\n */\n@JRubyClass(name=\"TypeError\", parent=\"StandardError\")\npublic class RubyTypeError extends RubyStandardError {\n    protected RubyTypeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass typeErrorClass = runtime.defineClass(\"TypeError\", exceptionClass, (r, klass) -> new RubyTypeError(runtime, klass));\n\n        return typeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new TypeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyThreadError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ThreadError;\n\n/**\n * The Java representation of a Ruby ThreadError.\n *\n * @see ThreadError\n */\n@JRubyClass(name=\"ThreadError\", parent=\"StandardError\")\npublic class RubyThreadError extends RubyStandardError {\n    protected RubyThreadError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass threadErrorClass = runtime.defineClass(\"ThreadError\", exceptionClass, (r, klass) -> new RubyThreadError(runtime, klass));\n\n        return threadErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ThreadError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyConcurrencyError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ConcurrencyError;\n\n/**\n * The Java representation of a Ruby ConcurrencyError.\n *\n * @see ConcurrencyError\n */\n@JRubyClass(name=\"ConcurrencyError\", parent=\"ThreadError\")\npublic class RubyConcurrencyError extends RubyThreadError {\n    protected RubyConcurrencyError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass concurrencyErrorClass = runtime.defineClass(\"ConcurrencyError\", exceptionClass, (r, klass) -> new RubyConcurrencyError(runtime, klass));\n\n        return concurrencyErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ConcurrencyError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyEOFError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.EOFError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby EOFError.\n *\n * @see EOFError\n */\n@JRubyClass(name=\"EOFError\", parent=\"IOError\")\npublic class RubyEOFError extends RubyIOError {\n    protected RubyEOFError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass eofErrorClass = runtime.defineClass(\"EOFError\", exceptionClass, (r, klass) -> new RubyEOFError(runtime, klass));\n\n        return eofErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new EOFError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFloatDomainError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FloatDomainError;\n\n/**\n * The Java representation of a Ruby FloatDomainError.\n *\n * @see FloatDomainError\n */\n@JRubyClass(name=\"FloatDomainError\", parent=\"RangeError\")\npublic class RubyFloatDomainError extends RubyRangeError {\n    protected RubyFloatDomainError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass floatDomainErrorClass = runtime.defineClass(\"FloatDomainError\", exceptionClass, (r, klass) -> new RubyFloatDomainError(runtime, klass));\n\n        return floatDomainErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FloatDomainError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFiberError.java",
                "SLOC": "46",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FiberError;\n\n/**\n * The Java representation of a Ruby FiberError.\n *\n * @see FiberError\n */\n@JRubyClass(name=\"FiberError\", parent=\"StandardError\")\npublic class RubyFiberError extends RubyStandardError {\n    protected RubyFiberError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        return runtime.defineClass(\"FiberError\", exceptionClass, (r, klass) -> new RubyFiberError(runtime, klass));\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FiberError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyFrozenError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v10.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.FrozenError;\n\n/**\n * The Java representation of a Ruby FrozenError.\n *\n * @see FrozenError\n */\n@JRubyClass(name=\"FrozenError\", parent=\"RuntimeError\")\npublic class RubyFrozenError extends RubyRuntimeError {\n    protected RubyFrozenError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass frozenErrorClass = runtime.defineClass(\"FrozenError\", exceptionClass, (r, klass) -> new RubyFrozenError(runtime, klass));\n\n        return frozenErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new FrozenError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyInterruptedRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.InterruptedRegexpError;\n\n/**\n * The Java representation of a Ruby InterruptedRegexpError.\n *\n * @see InterruptedRegexpError\n */\n@JRubyClass(name=\"InterruptedRegexpError\", parent=\"RegexpError\")\npublic class RubyInterruptedRegexpError extends RubyRegexpError {\n    protected RubyInterruptedRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass interruptedRegexpErrorClass = runtime.defineClass(\"InterruptedRegexpError\", exceptionClass, (r, klass) -> new RubyInterruptedRegexpError(runtime, klass));\n\n        return interruptedRegexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new InterruptedRegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNoMemoryError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.NoMemoryError;\n\n/**\n * The Java representation of a Ruby NoMemoryError.\n *\n * @see NoMemoryError\n */\n@JRubyClass(name=\"NoMemoryError\", parent=\"Exception\")\npublic class RubyNoMemoryError extends RubyException {\n    protected RubyNoMemoryError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NoMemoryErrorClass = runtime.defineClass(\"NoMemoryError\", exceptionClass, (r, klass) -> new RubyNoMemoryError(runtime, klass));\n\n        return NoMemoryErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NoMemoryError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRuntimeError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RuntimeError;\nimport org.jruby.exceptions.StandardError;\n\n/**\n * The Java representation of a Ruby RuntimeError.\n *\n * @see RuntimeError\n */\n@JRubyClass(name=\"RuntimeError\", parent=\"StandardError\")\npublic class RubyRuntimeError extends RubyStandardError {\n    protected RubyRuntimeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass runtimeErrorClass = runtime.defineClass(\"RuntimeError\", exceptionClass, (r, klass) -> new RubyRuntimeError(runtime, klass));\n\n        return runtimeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RuntimeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySystemStackError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.SystemStackError;\n\n/**\n * The Java representation of a Ruby SystemStackError.\n *\n * @see SystemStackError\n */\n@JRubyClass(name=\"SystemStackError\", parent=\"Exception\")\npublic class RubySystemStackError extends RubyException {\n    protected RubySystemStackError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass systemStackErrorClass = runtime.defineClass(\"SystemStackError\", exceptionClass, (r, klass) -> new RubySystemStackError(runtime, klass));\n\n        return systemStackErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new SystemStackError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySyntaxError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SyntaxError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SyntaxError.\n *\n * @see SyntaxError\n */\n@JRubyClass(name=\"SyntaxError\", parent=\"ScriptError\")\npublic class RubySyntaxError extends RubyScriptError {\n    protected RubySyntaxError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SyntaxErrorClass = runtime.defineClass(\"SyntaxError\", exceptionClass, (r, klass) -> new RubySyntaxError(runtime, klass));\n\n        return SyntaxErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SyntaxError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyNotImplementedError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.NotImplementedError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby NotImplementedError.\n *\n * @see NotImplementedError\n */\n@JRubyClass(name=\"NotImplementedError\", parent=\"ScriptError\")\npublic class RubyNotImplementedError extends RubyScriptError {\n    protected RubyNotImplementedError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass NotImplementedErrorClass = runtime.defineClass(\"NotImplementedError\", exceptionClass, (r, klass) -> new RubyNotImplementedError(runtime, klass));\n\n        return NotImplementedErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new NotImplementedError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyScriptError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ScriptError;\n\n/**\n * The Java representation of a Ruby ScriptError.\n *\n * @see ScriptError\n */\n@JRubyClass(name=\"ScriptError\", parent=\"Exception\")\npublic class RubyScriptError extends RubyException {\n    protected RubyScriptError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass scriptErrorClass = runtime.defineClass(\"ScriptError\", exceptionClass, (r, klass) -> new RubyScriptError(runtime, klass));\n\n        return scriptErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ScriptError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyIOError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.IOError;\n\n/**\n * The Java representation of a Ruby IOError.\n *\n * @see IOError\n */\n@JRubyClass(name=\"IOError\", parent=\"StandardError\")\npublic class RubyIOError extends RubyStandardError {\n    protected RubyIOError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass iOErrorClass = runtime.defineClass(\"IOError\", exceptionClass, (r, klass) -> new RubyIOError(runtime, klass));\n\n        return iOErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new IOError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRangeError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RangeError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby RangeError.\n *\n * @see RangeError\n */\n@JRubyClass(name=\"RangeError\", parent=\"StandardError\")\npublic class RubyRangeError extends RubyStandardError {\n    protected RubyRangeError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass rangeErrorClass = runtime.defineClass(\"RangeError\", exceptionClass, (r, klass) -> new RubyRangeError(runtime, klass));\n\n        return rangeErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RangeError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubyRegexpError.java",
                "SLOC": "47",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.RegexpError;\n\n/**\n * The Java representation of a Ruby RegexpError.\n *\n * @see RegexpError\n */\n@JRubyClass(name=\"RegexpError\", parent=\"StandardError\")\npublic class RubyRegexpError extends RubyStandardError {\n    protected RubyRegexpError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass regexpErrorClass = runtime.defineClass(\"RegexpError\", exceptionClass, (r, klass) -> new RubyRegexpError(runtime, klass));\n\n        return regexpErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new RegexpError(message, this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/RubySecurityError.java",
                "SLOC": "48",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.SecurityError;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * The Java representation of a Ruby SecurityError.\n *\n * @see SecurityError\n */\n@JRubyClass(name=\"SecurityError\", parent=\"Exception\")\npublic class RubySecurityError extends RubyException {\n    protected RubySecurityError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass SecurityErrorClass = runtime.defineClass(\"SecurityError\", exceptionClass, (r, klass) -> new RubySecurityError(runtime, klass));\n\n        return SecurityErrorClass;\n    }\n\n    @Override\n    protected RaiseException constructThrowable(String message) {\n        return new SecurityError(message, this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby;\n\nimport org.jruby.anno.JRubyClass;\nimport org.jruby.exceptions.RaiseException;\nimport org.jruby.exceptions.ZeroDivisionError;\n\n/**\n * The Java representation of a Ruby ZeroDivisionError.\n *\n * @see ZeroDivisionError\n */\n@JRubyClass(name=\"ZeroDivisionError\", parent=\"StandardError\")\npublic class RubyZeroDivisionError extends RubyStandardError {\n    protected RubyZeroDivisionError(Ruby runtime, RubyClass exceptionClass) {\n        super(runtime, exceptionClass);\n    }\n\n    static RubyClass define(Ruby runtime, RubyClass exceptionClass) {\n        RubyClass zeroDivisionErrorClass = runtime.defineClass(\"ZeroDivisionError\", exceptionClass, (r, klass) -> new RubyZeroDivisionError(runtime, klass));\n\n        return zeroDivisionErrorClass;\n    }\n\n    protected RaiseException constructThrowable(String message) {\n        return new ZeroDivisionError(message, this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgsPushNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/AndNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a && (and) operator.\n */\npublic class AndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public AndNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"AndNode.first == null\";\n        assert secondNode != null : \"AndNode.second == null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ANDNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitAndNode(this);\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgsCatNode.java",
                "SLOC": "61",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class ArgsCatNode extends Node {\n\tprivate final Node firstNode;\n    private final Node secondNode;\n\n    public ArgsCatNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n\n        assert firstNode != null : \"ArgsCatNode.first == null\";\n        assert secondNode != null : \"ArgsCatNode.second == null\";\n\n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGSCATNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgsCatNode(this);\n    }\n\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            }
        ],
        "SLOC": "59",
        "content": "/*\r\n ***** BEGIN LICENSE BLOCK *****\r\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\r\n *\r\n * The contents of this file are subject to the Eclipse Public\r\n * License Version 2.0 (the \"License\"); you may not use this file\r\n * except in compliance with the License. You may obtain a copy of\r\n * the License at http://www.eclipse.org/legal/epl-v20.html\r\n *\r\n * Software distributed under the License is distributed on an \"AS\r\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\r\n * implied. See the License for the specific language governing\r\n * rights and limitations under the License.\r\n *\r\n * Copyright (C) 2006-2007 Thomas E Enebo <enebo@acm.org>\r\n *\r\n * Alternatively, the contents of this file may be used under the terms of\r\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\r\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\r\n * in which case the provisions of the GPL or the LGPL are applicable instead\r\n * of those above. If you wish to allow use of your version of this file only\r\n * under the terms of either the GPL or the LGPL, and not to allow others to\r\n * use your version of this file under the terms of the EPL, indicate your\r\n * decision by deleting the provisions above and replace them with the notice\r\n * and other provisions required by the GPL or the LGPL. If you do not delete\r\n * the provisions above, a recipient may use your version of this file under\r\n * the terms of any one of the EPL, the GPL or the LGPL.\r\n ***** END LICENSE BLOCK *****/\r\n\r\npackage org.jruby.ast;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport org.jruby.ast.visitor.NodeVisitor;\r\nimport org.jruby.lexer.yacc.ISourcePosition;\r\n\r\npublic class ArgsPushNode extends Node {\r\n    private Node firstNode;\r\n    private Node secondNode;\r\n\r\n    public ArgsPushNode(ISourcePosition position, Node firstNode, Node secondNode) {\r\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\r\n\r\n        assert firstNode != null : \"ArgsPushNode.first == null\";\r\n        assert secondNode != null : \"ArgsPushNode.second == null\";\r\n\r\n        this.firstNode = firstNode;\r\n        this.secondNode = secondNode;\r\n    }\r\n\r\n    public NodeType getNodeType() {\r\n        return NodeType.ARGSPUSHNODE;\r\n    }\r\n\r\n    public <T> T accept(NodeVisitor<T> visitor) {\r\n        return visitor.visitArgsPushNode(this);\r\n    }\r\n\r\n    public Node getFirstNode() {\r\n        return firstNode;\r\n    }\r\n\r\n    public Node getSecondNode() {\r\n        return secondNode;\r\n    }\r\n\r\n    public List<Node> childNodes() {\r\n        return Arrays.asList(firstNode, secondNode);\r\n    }\r\n}\r\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgsCatNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/AndNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a && (and) operator.\n */\npublic class AndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public AndNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"AndNode.first == null\";\n        assert secondNode != null : \"AndNode.second == null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ANDNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitAndNode(this);\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            }
        ],
        "SLOC": "61",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class ArgsCatNode extends Node {\n\tprivate final Node firstNode;\n    private final Node secondNode;\n\n    public ArgsCatNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n\n        assert firstNode != null : \"ArgsCatNode.first == null\";\n        assert secondNode != null : \"ArgsCatNode.second == null\";\n\n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGSCATNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgsCatNode(this);\n    }\n\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarDeclNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "73",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable declaration.\n */\n@Deprecated\npublic class ClassVarDeclNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public ClassVarDeclNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARDECLNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarDeclNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "67",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "71",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java",
                "SLOC": "71",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "67",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DVarNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgumentNode.java",
                "SLOC": "78",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2005 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Simple Node for named entities.  Things like the name of a method will make a node\n * for the name.  Also local variables will make a ArgumentNode. In the case of a local\n * variable we will also keep a list of it's location.\n */\npublic class ArgumentNode extends Node implements INameNode {\n    private RubySymbol identifier;\n    private int location;\n\n    public ArgumentNode(ISourcePosition position, RubySymbol identifier, int location) {\n        super(position, false);\n\n        this.identifier = identifier;\n        this.location = location; // All variables should be depth 0 in this case\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGUMENTNODE;\n    }\n\n    @Override\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgumentNode(this);\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     *\n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n\n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     *\n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    public RubySymbol getName() {\n        return identifier;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DAsgnNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a dynamic variable (e.g. block scope local variable).\n */\npublic class DAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDAsgnNode(this);\n    }\n    \n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "93",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access a dynamic variable (e.g. block scope local variable).\n */\npublic class DVarNode extends Node implements INameNode, IScopedNode, SideEffectFree {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DVarNode(ISourcePosition position, int location, RubySymbol name) {\n        super(position, false);\n        this.location = location;\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDVarNode(this);\n    }\n    \n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DAsgnNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgumentNode.java",
                "SLOC": "78",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2005 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Simple Node for named entities.  Things like the name of a method will make a node\n * for the name.  Also local variables will make a ArgumentNode. In the case of a local\n * variable we will also keep a list of it's location.\n */\npublic class ArgumentNode extends Node implements INameNode {\n    private RubySymbol identifier;\n    private int location;\n\n    public ArgumentNode(ISourcePosition position, RubySymbol identifier, int location) {\n        super(position, false);\n\n        this.identifier = identifier;\n        this.location = location; // All variables should be depth 0 in this case\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGUMENTNODE;\n    }\n\n    @Override\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgumentNode(this);\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     *\n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n\n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     *\n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    public RubySymbol getName() {\n        return identifier;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "93",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a dynamic variable (e.g. block scope local variable).\n */\npublic class DAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDAsgnNode(this);\n    }\n    \n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DefinedNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BeginNode.java",
                "SLOC": "66",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Begin/End block.  A Begin ... End block without rescue.\n */\npublic class BeginNode extends Node {\n    private final Node bodyNode;\n\n    public BeginNode(ISourcePosition position, Node bodyNode) {\n        super(position, bodyNode.containsVariableAssignment());\n        \n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.bodyNode = bodyNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BEGINNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBeginNode(this);\n    }\n\n    /**\n     * Gets the bodyNode.\n     * @return Returns a INode\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(bodyNode);\n    }\n}\n"
            }
        ],
        "SLOC": "67",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001 Chad Fowler <chadfowler@chadfowler.com>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * a defined statement.\n */\npublic class DefinedNode extends Node {\n    private final Node expressionNode;\n\n    public DefinedNode(ISourcePosition position, Node expressionNode) {\n        super(position, expressionNode.containsVariableAssignment());\n        \n        assert expressionNode != null : \"expressionNode is not null\";\n        \n        this.expressionNode = expressionNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DEFINEDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDefinedNode(this);\n    }\n\n    /**\n     * Gets the expressionNode.\n     * @return Returns a Node\n     */\n    public Node getExpressionNode() {\n        return expressionNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(expressionNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/FlipNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DotNode.java",
                "SLOC": "99",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001 Alan Moore <alan_moore@gmx.net>\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a range literal.\n */\npublic class DotNode extends Node {\n    private final Node beginNode;\n    private final Node endNode;\n    private final boolean exclusive;\n    private final boolean isLiteral;\n\n    public DotNode(ISourcePosition position, Node beginNode, Node endNode, boolean exclusive, \n            boolean isLiteral) {\n        super(position, beginNode.containsVariableAssignment() || endNode.containsVariableAssignment());\n        \n        assert beginNode != null : \"beginNode is not null\";\n        assert endNode != null : \"endNode is not null\";\n        \n        this.beginNode = beginNode;\n        this.endNode = endNode;\n        this.exclusive = exclusive;\n        this.isLiteral = isLiteral;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DOTNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDotNode(this);\n    }\n\n    /**\n     * Gets the beginNode.\n     * @return Returns a Node\n     */\n    public Node getBeginNode() {\n        return beginNode;\n    }\n\n    /**\n     * Gets the endNode.\n     * @return Returns a Node\n     */\n    public Node getEndNode() {\n        return endNode;\n    }\n\n    /**\n     * Gets the exclusive.\n     * @return Returns a boolean\n     */\n    public boolean isExclusive() {\n        return exclusive;\n    }\n    \n    /**\n     * Is this a literal node.  MRI has a literal node type and we currently don't.\n     * We provide this attribute so we can detect that this should be a literal to\n     * match MRI semantics of literal DOT nodes.\n     * \n     * @return true is literal\n     */\n    public boolean isLiteral() {\n        return isLiteral;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(beginNode, endNode);\n    }\n}\n"
            }
        ],
        "SLOC": "110",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * A Range in a boolean expression (named after a FlipFlop component in electronic?).\n */\npublic class FlipNode extends Node {\n    private final Node beginNode;\n    private final Node endNode;\n    private final boolean exclusive;\n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private final int location;\n    \n    public FlipNode(ISourcePosition position, Node beginNode, Node endNode, boolean exclusive, int location) {\n        super(position, beginNode.containsVariableAssignment() || endNode.containsVariableAssignment());\n        \n        assert beginNode != null : \"beginNode is not null\";\n        assert endNode != null : \"endNode is not null\";\n        \n        this.beginNode = beginNode;\n        this.endNode = endNode;\n        this.exclusive = exclusive;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.FLIPNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitFlipNode(this);\n    }\n\n    /**\n     * Gets the beginNode.\n\t * beginNode will set the FlipFlop the first time it is true\n     * @return Returns a Node\n     */\n    public Node getBeginNode() {\n        return beginNode;\n    }\n\n    /**\n     * Gets the endNode.\n\t * endNode will reset the FlipFlop when it is true while the FlipFlop is set.\n     * @return Returns a Node\n     */\n    public Node getEndNode() {\n        return endNode;\n    }\n\n    /**\n     * Gets the exclusive.\n\t * if the range is a 2 dot range it is false if it is a three dot it is true\n     * @return Returns a boolean\n     */\n    public boolean isExclusive() {\n        return exclusive;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(beginNode, endNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/FixnumNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BignumNode.java",
                "SLOC": "70",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.math.BigInteger;\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a big integer literal.\n */\npublic class BignumNode extends NumericNode implements SideEffectFree {\n    private BigInteger value;\n\n    public BignumNode(ISourcePosition position, BigInteger value) {\n        super(position);\n        this.value = value;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BIGNUMNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBignumNode(this);\n    }\n\n    @Override\n    public NumericNode negate() {\n        return new BignumNode(getPosition(), value.negate());\n    }\n\n    /**\n     * Gets the value.\n     * @return Returns a BigInteger\n     */\n    public BigInteger getValue() {\n        return value;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    public void setValue(BigInteger value) {\n        this.value = value;\n    }\n}\n"
            }
        ],
        "SLOC": "69",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.types.ILiteralNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an integer literal.\n */\npublic class FixnumNode extends NumericNode implements ILiteralNode, SideEffectFree {\n    private long value;\n\n    public FixnumNode(ISourcePosition position, long value) {\n        super(position);\n        this.value = value;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitFixnumNode(this);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.FIXNUMNODE;\n    }\n\n    @Override\n    public NumericNode negate() {\n        return new FixnumNode(getPosition(), -value);\n    }\n\n    /**\n     * Gets the value.\n     * @return Returns a long\n     */\n    public long getValue() {\n        return value;\n    }\n\n    public void setValue(long value) {\n        this.value = value;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/FloatNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/FixnumNode.java",
                "SLOC": "69",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.types.ILiteralNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an integer literal.\n */\npublic class FixnumNode extends NumericNode implements ILiteralNode, SideEffectFree {\n    private long value;\n\n    public FixnumNode(ISourcePosition position, long value) {\n        super(position);\n        this.value = value;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitFixnumNode(this);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.FIXNUMNODE;\n    }\n\n    @Override\n    public NumericNode negate() {\n        return new FixnumNode(getPosition(), -value);\n    }\n\n    /**\n     * Gets the value.\n     * @return Returns a long\n     */\n    public long getValue() {\n        return value;\n    }\n\n    public void setValue(long value) {\n        this.value = value;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BignumNode.java",
                "SLOC": "70",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.math.BigInteger;\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a big integer literal.\n */\npublic class BignumNode extends NumericNode implements SideEffectFree {\n    private BigInteger value;\n\n    public BignumNode(ISourcePosition position, BigInteger value) {\n        super(position);\n        this.value = value;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BIGNUMNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBignumNode(this);\n    }\n\n    @Override\n    public NumericNode negate() {\n        return new BignumNode(getPosition(), value.negate());\n    }\n\n    /**\n     * Gets the value.\n     * @return Returns a BigInteger\n     */\n    public BigInteger getValue() {\n        return value;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    public void setValue(BigInteger value) {\n        this.value = value;\n    }\n}\n"
            }
        ],
        "SLOC": "73",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.types.ILiteralNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a float literal.\n */\npublic class FloatNode extends NumericNode implements ILiteralNode, SideEffectFree {\n    private double value;\n\n    public FloatNode(ISourcePosition position, double value) {\n        super(position);\n        this.value = value;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.FLOATNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitFloatNode(this);\n    }\n\n    @Override\n    public NumericNode negate() {\n        return new FloatNode(getPosition(), -value);\n    }\n\n    /**\n     * Gets the value.\n     * @return Returns a double\n     */\n    public double getValue() {\n        return value;\n    }\n    \n    /**\n     * Sets the value\n     * @param value to set\n     */\n    public void setValue(double value) {\n        this.value = value;\n    }\n\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/InstAsgnNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarDeclNode.java",
                "SLOC": "73",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable declaration.\n */\n@Deprecated\npublic class ClassVarDeclNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public ClassVarDeclNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARDECLNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarDeclNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalAsgnNode.java",
                "SLOC": "74",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents an assignment to a global variable.\n */\npublic class GlobalAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public GlobalAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALASGNNODE;\n    }\n    \n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor \n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalAsgnNode(this);\n    }\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n *\taccess to a global variable.\n */\npublic class GlobalVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public GlobalVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "72",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an instance variable assignment.\n */\npublic class InstAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name the name of the instance variable\n     * @param valueNode the value of the variable\n     **/\n    public InstAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.INSTASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitInstAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalVarNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java",
                "SLOC": "71",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalAsgnNode.java",
                "SLOC": "74",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents an assignment to a global variable.\n */\npublic class GlobalAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public GlobalAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALASGNNODE;\n    }\n    \n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor \n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalAsgnNode(this);\n    }\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "67",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n *\taccess to a global variable.\n */\npublic class GlobalVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public GlobalVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalAsgnNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarDeclNode.java",
                "SLOC": "73",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable declaration.\n */\n@Deprecated\npublic class ClassVarDeclNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public ClassVarDeclNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARDECLNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarDeclNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java",
                "SLOC": "71",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "74",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents an assignment to a global variable.\n */\npublic class GlobalAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public GlobalAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALASGNNODE;\n    }\n    \n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor \n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalAsgnNode(this);\n    }\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/InstVarNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java",
                "SLOC": "71",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalAsgnNode.java",
                "SLOC": "74",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents an assignment to a global variable.\n */\npublic class GlobalAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public GlobalAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALASGNNODE;\n    }\n    \n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor \n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalAsgnNode(this);\n    }\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/InstAsgnNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an instance variable assignment.\n */\npublic class InstAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name the name of the instance variable\n     * @param valueNode the value of the variable\n     **/\n    public InstAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.INSTASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitInstAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n *\taccess to a global variable.\n */\npublic class GlobalVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public GlobalVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            }
        ],
        "SLOC": "68",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2006 Lukas Felber <lfelber@hsr.ch>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an instance variable accessor.\n */\npublic class InstVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public InstVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.INSTVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitInstVarNode(this);\n    }\n\t\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/LocalVarNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DAsgnNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a dynamic variable (e.g. block scope local variable).\n */\npublic class DAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDAsgnNode(this);\n    }\n    \n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DVarNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access a dynamic variable (e.g. block scope local variable).\n */\npublic class DVarNode extends Node implements INameNode, IScopedNode, SideEffectFree {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DVarNode(ISourcePosition position, int location, RubySymbol name) {\n        super(position, false);\n        this.location = location;\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDVarNode(this);\n    }\n    \n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgumentNode.java",
                "SLOC": "78",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2005 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Simple Node for named entities.  Things like the name of a method will make a node\n * for the name.  Also local variables will make a ArgumentNode. In the case of a local\n * variable we will also keep a list of it's location.\n */\npublic class ArgumentNode extends Node implements INameNode {\n    private RubySymbol identifier;\n    private int location;\n\n    public ArgumentNode(ISourcePosition position, RubySymbol identifier, int location) {\n        super(position, false);\n\n        this.identifier = identifier;\n        this.location = location; // All variables should be depth 0 in this case\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGUMENTNODE;\n    }\n\n    @Override\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgumentNode(this);\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     *\n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n\n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     *\n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    public RubySymbol getName() {\n        return identifier;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/LocalAsgnNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a local variable.\n */\npublic class LocalAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private final int location;\n\n    public LocalAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.LOCALASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitLocalAsgnNode(this);\n    }\n    \n    /**\n     * Name of the local assignment.\n     **/\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "94",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access a local variable \n */\npublic class LocalVarNode extends Node implements INameNode, IScopedNode, SideEffectFree {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private final int location;\n\n    public LocalVarNode(ISourcePosition position, int location, RubySymbol name) {\n        super(position, false);\n        this.location = location;\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.LOCALVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitLocalVarNode(this);\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    /**\n     * What is the name of this variable\n     * \n     * @return the name of the variable\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/LocalAsgnNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DAsgnNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a dynamic variable (e.g. block scope local variable).\n */\npublic class DAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDAsgnNode(this);\n    }\n    \n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DVarNode.java",
                "SLOC": "93",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access a dynamic variable (e.g. block scope local variable).\n */\npublic class DVarNode extends Node implements INameNode, IScopedNode, SideEffectFree {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private int location;\n\n    public DVarNode(ISourcePosition position, int location, RubySymbol name) {\n        super(position, false);\n        this.location = location;\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDVarNode(this);\n    }\n    \n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "93",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * An assignment to a local variable.\n */\npublic class LocalAsgnNode extends AssignableNode implements INameNode, IScopedNode {\n    // The name of the variable\n    private RubySymbol name;\n    \n    // A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits\n    // is what index in the right scope to set the value.\n    private final int location;\n\n    public LocalAsgnNode(ISourcePosition position, RubySymbol name, int location, Node valueNode) {\n        super(position, valueNode, true);\n        this.name = name;\n        this.location = location;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.LOCALASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitLocalAsgnNode(this);\n    }\n    \n    /**\n     * Name of the local assignment.\n     **/\n    public RubySymbol getName() {\n        return name;\n    }\n\n    /**\n     * How many scopes should we burrow down to until we need to set the block variable value.\n     * \n     * @return 0 for current scope, 1 for one down, ...\n     */\n    public int getDepth() {\n        return location >> 16;\n    }\n    \n    /**\n     * Gets the index within the scope construct that actually holds the eval'd value\n     * of this local variable\n     * \n     * @return Returns an int offset into storage structure\n     */\n    public int getIndex() {\n        return location & 0xffff;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Match3Node.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Match2Node.java",
                "SLOC": "77",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class Match2Node extends Node {\n    private final Node receiverNode;\n    private final Node valueNode;\n\n    public Match2Node(ISourcePosition position, Node receiverNode, Node valueNode) {\n        super(position, receiverNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert receiverNode != null : \"receiverNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n\n        this.receiverNode = receiverNode;\n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.MATCH2NODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitMatch2Node(this);\n    }\n\n    /**\n     * Gets the receiverNode.\n     * @return Returns a Node\n     */\n    public Node getReceiverNode() {\n        return receiverNode;\n    }\n\n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(receiverNode, valueNode);\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "80",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Used when a Regexp literal is the RHS of a match call.  E.g., \"abc\" =~ /.+/\n */\npublic class Match3Node extends Node {\n    private final Node receiverNode;\n    private final Node valueNode;\n\n    public Match3Node(ISourcePosition position, Node receiverNode, Node valueNode) {\n        super(position, receiverNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert receiverNode != null : \"receiverNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n\n        this.receiverNode = receiverNode;\n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.MATCH3NODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitMatch3Node(this);\n    }\n\n    /**\n     * Gets the receiverNode.\n     * @return Returns a Node\n     */\n    public Node getReceiverNode() {\n        return receiverNode;\n    }\n\n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(receiverNode, valueNode);\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ModuleNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassNode.java",
                "SLOC": "109",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\nimport org.jruby.parser.StaticScope;\n\n/**\n * A class statement (name, superClass, body). Classes bodies also define their own scope. \n */\npublic class ClassNode extends Node implements IScopingNode {\n    private final Colon3Node cpath;\n    private final StaticScope scope;\n    private final Node bodyNode;\n    private final Node superNode;\n    private final int endLine;\n    \n    public ClassNode(ISourcePosition position, Colon3Node cpath, StaticScope scope, Node bodyNode, Node superNode, int endLine) {\n        super(position, cpath.containsVariableAssignment() || bodyNode.containsVariableAssignment() || superNode != null && superNode.containsVariableAssignment());\n\n        assert scope != null : \"scope is not null\";\n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.cpath = cpath;\n        this.scope = scope;\n        this.bodyNode = bodyNode;\n        this.superNode = superNode;\n        this.endLine = endLine;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassNode(this);\n    }\n    \n    /**\n     * Gets the body of this class.\n     * \n     * @return the contents\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n\n    /**\n     * Gets line where the 'end' was for this module.\n     */\n    public int getEndLine() {\n        return endLine;\n    }\n    \n    /**\n     * Get the static scoping information.\n     * \n     * @return the scoping info\n     */\n    public StaticScope getScope() {\n        return scope;\n    }\n\n    /**\n     * Gets the className.\n     * @return Returns representation of class path+name\n     */\n    public Colon3Node getCPath() {\n        return cpath;\n    }\n\n    /**\n     * Gets the superNode.\n     * @return Returns a Node\n     */\n    public Node getSuperNode() {\n        return superNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(cpath, bodyNode, superNode);\n    }\n\n    @Override\n    public boolean executesOnce() {\n        return true;\n    }\n}\n"
            }
        ],
        "SLOC": "100",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\nimport org.jruby.parser.StaticScope;\n\n/** \n * Represents a module definition.\n */\npublic class ModuleNode extends Node implements IScopingNode {\n    private final Colon3Node cpath;\n    private final StaticScope scope;\n    private final Node bodyNode;\n    private final int endLine;\n\n    public ModuleNode(ISourcePosition position, Colon3Node cpath, StaticScope scope, Node bodyNode, int endLine) {\n        super(position, cpath.containsVariableAssignment() || bodyNode.containsVariableAssignment());\n\n        assert scope != null : \"scope is not null\";\n        assert bodyNode != null : \"bodyNode is not null\";\n\n        this.cpath = cpath;\n        this.scope = scope;\n        this.bodyNode = bodyNode;\n        this.endLine = endLine;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.MODULENODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitModuleNode(this);\n    }\n\n    /**\n     * Gets the body of this class.\n     * \n     * @return the contents\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n\n    /**\n     * Gets line where the 'end' was for this module.\n     */\n    public int getEndLine() {\n        return endLine;\n    }\n\n    /**\n     * Get the static scoping information.\n     * \n     * @return the scoping info\n     */\n    public StaticScope getScope() {\n        return scope;\n    }\n\n    /**\n     * Gets the name.\n     * @return Representation of the module path+name\n     */\n    public Colon3Node getCPath() {\n        return cpath;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(cpath, bodyNode);\n    }\n\n    @Override\n    public boolean executesOnce() {\n        return true;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/MatchNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BeginNode.java",
                "SLOC": "66",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Begin/End block.  A Begin ... End block without rescue.\n */\npublic class BeginNode extends Node {\n    private final Node bodyNode;\n\n    public BeginNode(ISourcePosition position, Node bodyNode) {\n        super(position, bodyNode.containsVariableAssignment());\n        \n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.bodyNode = bodyNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BEGINNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBeginNode(this);\n    }\n\n    /**\n     * Gets the bodyNode.\n     * @return Returns a INode\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(bodyNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DefinedNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001 Chad Fowler <chadfowler@chadfowler.com>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * a defined statement.\n */\npublic class DefinedNode extends Node {\n    private final Node expressionNode;\n\n    public DefinedNode(ISourcePosition position, Node expressionNode) {\n        super(position, expressionNode.containsVariableAssignment());\n        \n        assert expressionNode != null : \"expressionNode is not null\";\n        \n        this.expressionNode = expressionNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DEFINEDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDefinedNode(this);\n    }\n\n    /**\n     * Gets the expressionNode.\n     * @return Returns a Node\n     */\n    public Node getExpressionNode() {\n        return expressionNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(expressionNode);\n    }\n}\n"
            }
        ],
        "SLOC": "63",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class MatchNode extends Node {\n    private final Node regexpNode;\n\n    public MatchNode(ISourcePosition position, Node regexpNode) {\n        super(position, regexpNode.containsVariableAssignment());\n        \n        assert regexpNode != null : \"regexpNode is not null\";\n        \n        this.regexpNode = regexpNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.MATCHNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitMatchNode(this);\n    }\n\n    /**\n     * Gets the regexpNode.\n     * @return Returns a Node\n     */\n    public Node getRegexpNode() {\n        return regexpNode;\n    }\n\n    public List<Node> childNodes() {\n        return createList(regexpNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/NewlineNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BeginNode.java",
                "SLOC": "66",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Begin/End block.  A Begin ... End block without rescue.\n */\npublic class BeginNode extends Node {\n    private final Node bodyNode;\n\n    public BeginNode(ISourcePosition position, Node bodyNode) {\n        super(position, bodyNode.containsVariableAssignment());\n        \n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.bodyNode = bodyNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BEGINNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBeginNode(this);\n    }\n\n    /**\n     * Gets the bodyNode.\n     * @return Returns a INode\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(bodyNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/DefinedNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001 Chad Fowler <chadfowler@chadfowler.com>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * a defined statement.\n */\npublic class DefinedNode extends Node {\n    private final Node expressionNode;\n\n    public DefinedNode(ISourcePosition position, Node expressionNode) {\n        super(position, expressionNode.containsVariableAssignment());\n        \n        assert expressionNode != null : \"expressionNode is not null\";\n        \n        this.expressionNode = expressionNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.DEFINEDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitDefinedNode(this);\n    }\n\n    /**\n     * Gets the expressionNode.\n     * @return Returns a Node\n     */\n    public Node getExpressionNode() {\n        return expressionNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(expressionNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/MatchNode.java",
                "SLOC": "63",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class MatchNode extends Node {\n    private final Node regexpNode;\n\n    public MatchNode(ISourcePosition position, Node regexpNode) {\n        super(position, regexpNode.containsVariableAssignment());\n        \n        assert regexpNode != null : \"regexpNode is not null\";\n        \n        this.regexpNode = regexpNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.MATCHNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitMatchNode(this);\n    }\n\n    /**\n     * Gets the regexpNode.\n     * @return Returns a Node\n     */\n    public Node getRegexpNode() {\n        return regexpNode;\n    }\n\n    public List<Node> childNodes() {\n        return createList(regexpNode);\n    }\n}\n"
            }
        ],
        "SLOC": "78",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Note: This is a dead class but we leave it because people write against Visitor\n * and we do not want those consumers to break.\n * A new (logical) source code line.\n * This is used to change the value of the ruby interpreter source and line values.\n * There is one such node for each logical line.  Logical line differs\n * from physical line in that a ';' can be used to make several logical\n * line out of a physical line and a physical line if it is in a comment\n * or in a string does not necessarily correspond to a physical line.\n * This is normally a wrapper around another more significant node.\n * The parser generates such a node around each separate statement.  \n */\npublic class NewlineNode extends Node {\n    private final Node nextNode;\n\n    @Deprecated\n    public NewlineNode(ISourcePosition position, Node nextNode) {\n        super(position, nextNode.containsVariableAssignment());\n\n        assert nextNode != null : \"nextNode is not null\";\n        \n        this.nextNode = nextNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.NEWLINENODE;\n    }\n\n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor\n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitNewlineNode(this);\n    }\n\n    /**\n     * Gets the nextNode.\n     * @return Returns a Node\n     */\n    public Node getNextNode() {\n        return nextNode;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(nextNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OpAsgnAndNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/AndNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a && (and) operator.\n */\npublic class AndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public AndNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"AndNode.first == null\";\n        assert secondNode != null : \"AndNode.second == null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ANDNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitAndNode(this);\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            }
        ],
        "SLOC": "73",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class OpAsgnAndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OpAsgnAndNode(ISourcePosition position, Node headNode, Node valueNode) {\n        super(position, headNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert headNode != null : \"headNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n        \n        firstNode = headNode;\n        secondNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.OPASGNANDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOpAsgnAndNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/NextNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BreakNode.java",
                "SLOC": "69",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents a 'break' statement.\n */\npublic class BreakNode extends Node implements NonLocalControlFlowNode {\n    private final Node valueNode;\n    \n    public BreakNode(ISourcePosition position, Node valueNode) {\n        super(position, valueNode != null && valueNode.containsVariableAssignment());\n        \n        assert valueNode != null : \"valueNode is not null\";\n        \n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BREAKNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBreakNode(this);\n    }\n    \n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n\n    public boolean hasValue() {\n        return valueNode != NilImplicitNode.NIL;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(valueNode);\n    }\n}\n"
            }
        ],
        "SLOC": "69",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a 'next' statement.\n */\npublic class NextNode extends Node implements NonLocalControlFlowNode {\n    private final Node valueNode;\n\n    public NextNode(ISourcePosition position, Node valueNode) {\n        super(position, valueNode.containsVariableAssignment());\n        \n        assert valueNode != null : \"valueNode is not null\";\n        \n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.NEXTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitNextNode(this);\n    }\n    \n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n\n    public boolean hasValue() {\n        return valueNode != NilImplicitNode.NIL;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(valueNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OpAsgnOrNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OpAsgnAndNode.java",
                "SLOC": "73",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class OpAsgnAndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OpAsgnAndNode(ISourcePosition position, Node headNode, Node valueNode) {\n        super(position, headNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert headNode != null : \"headNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n        \n        firstNode = headNode;\n        secondNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.OPASGNANDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOpAsgnAndNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/AndNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a && (and) operator.\n */\npublic class AndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public AndNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"AndNode.first == null\";\n        assert secondNode != null : \"AndNode.second == null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ANDNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitAndNode(this);\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            }
        ],
        "SLOC": "73",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class OpAsgnOrNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OpAsgnOrNode(ISourcePosition position, Node headNode, Node valueNode) {\n        super(position, headNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert headNode != null : \"headNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n        \n        firstNode = headNode;\n        secondNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.OPASGNORNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOpAsgnOrNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OrNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OpAsgnAndNode.java",
                "SLOC": "73",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class OpAsgnAndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OpAsgnAndNode(ISourcePosition position, Node headNode, Node valueNode) {\n        super(position, headNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert headNode != null : \"headNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n        \n        firstNode = headNode;\n        secondNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.OPASGNANDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOpAsgnAndNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/AndNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a && (and) operator.\n */\npublic class AndNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public AndNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"AndNode.first == null\";\n        assert secondNode != null : \"AndNode.second == null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ANDNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitAndNode(this);\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgsCatNode.java",
                "SLOC": "61",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class ArgsCatNode extends Node {\n\tprivate final Node firstNode;\n    private final Node secondNode;\n\n    public ArgsCatNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n\n        assert firstNode != null : \"ArgsCatNode.first == null\";\n        assert secondNode != null : \"ArgsCatNode.second == null\";\n\n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ARGSCATNODE;\n    }\n\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitArgsCatNode(this);\n    }\n\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ArgsPushNode.java",
                "SLOC": "59",
                "content": "/*\r\n ***** BEGIN LICENSE BLOCK *****\r\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\r\n *\r\n * The contents of this file are subject to the Eclipse Public\r\n * License Version 2.0 (the \"License\"); you may not use this file\r\n * except in compliance with the License. You may obtain a copy of\r\n * the License at http://www.eclipse.org/legal/epl-v20.html\r\n *\r\n * Software distributed under the License is distributed on an \"AS\r\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\r\n * implied. See the License for the specific language governing\r\n * rights and limitations under the License.\r\n *\r\n * Copyright (C) 2006-2007 Thomas E Enebo <enebo@acm.org>\r\n *\r\n * Alternatively, the contents of this file may be used under the terms of\r\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\r\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\r\n * in which case the provisions of the GPL or the LGPL are applicable instead\r\n * of those above. If you wish to allow use of your version of this file only\r\n * under the terms of either the GPL or the LGPL, and not to allow others to\r\n * use your version of this file under the terms of the EPL, indicate your\r\n * decision by deleting the provisions above and replace them with the notice\r\n * and other provisions required by the GPL or the LGPL. If you do not delete\r\n * the provisions above, a recipient may use your version of this file under\r\n * the terms of any one of the EPL, the GPL or the LGPL.\r\n ***** END LICENSE BLOCK *****/\r\n\r\npackage org.jruby.ast;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport org.jruby.ast.visitor.NodeVisitor;\r\nimport org.jruby.lexer.yacc.ISourcePosition;\r\n\r\npublic class ArgsPushNode extends Node {\r\n    private Node firstNode;\r\n    private Node secondNode;\r\n\r\n    public ArgsPushNode(ISourcePosition position, Node firstNode, Node secondNode) {\r\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\r\n\r\n        assert firstNode != null : \"ArgsPushNode.first == null\";\r\n        assert secondNode != null : \"ArgsPushNode.second == null\";\r\n\r\n        this.firstNode = firstNode;\r\n        this.secondNode = secondNode;\r\n    }\r\n\r\n    public NodeType getNodeType() {\r\n        return NodeType.ARGSPUSHNODE;\r\n    }\r\n\r\n    public <T> T accept(NodeVisitor<T> visitor) {\r\n        return visitor.visitArgsPushNode(this);\r\n    }\r\n\r\n    public Node getFirstNode() {\r\n        return firstNode;\r\n    }\r\n\r\n    public Node getSecondNode() {\r\n        return secondNode;\r\n    }\r\n\r\n    public List<Node> childNodes() {\r\n        return Arrays.asList(firstNode, secondNode);\r\n    }\r\n}\r\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/OpAsgnOrNode.java",
                "SLOC": "73",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class OpAsgnOrNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OpAsgnOrNode(ISourcePosition position, Node headNode, Node valueNode) {\n        super(position, headNode.containsVariableAssignment() || valueNode.containsVariableAssignment());\n        \n        assert headNode != null : \"headNode is not null\";\n        assert valueNode != null : \"valueNode is not null\";\n        \n        firstNode = headNode;\n        secondNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.OPASGNORNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOpAsgnOrNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n    \n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
            }
        ],
        "SLOC": "76",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * represents '||' (or) statements\n */\npublic class OrNode extends Node implements BinaryOperatorNode {\n    private final Node firstNode;\n    private final Node secondNode;\n\n    public OrNode(ISourcePosition position, Node firstNode, Node secondNode) {\n        super(position, firstNode.containsVariableAssignment() || secondNode.containsVariableAssignment());\n        \n        assert firstNode != null : \"firstNode is not null\";\n        assert secondNode != null : \"secondNode is not null\";\n        \n        this.firstNode = firstNode;\n        this.secondNode = secondNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.ORNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitOrNode(this);\n    }\n\n    /**\n     * Gets the firstNode.\n     * @return Returns a Node\n     */\n    public Node getFirstNode() {\n        return firstNode;\n    }\n\n    /**\n     * Gets the secondNode.\n     * @return Returns a Node\n     */\n    public Node getSecondNode() {\n        return secondNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(firstNode, secondNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/RedoNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/NilNode.java",
                "SLOC": "63",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * represents 'nil'\n */\npublic class NilNode extends Node implements SideEffectFree {\n\n    public NilNode(ISourcePosition position) {\n        super(position, false);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.NILNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitNilNode(this);\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    public boolean isNil() {\n        return true;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "62",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents a 'redo'\n */\npublic class RedoNode extends Node implements NonLocalControlFlowNode {\n    public RedoNode(ISourcePosition position) {\n        super(position, false);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.REDONODE;\n    }\n\n    public Node getValueNode() {\n        return null; // Needed for non local control flow node marker\n    }\n\n    public boolean hasValue() {\n        return false; // Redo never allows a value\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitRedoNode(this);\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/SplatNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/SValueNode.java",
                "SLOC": "56",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class SValueNode extends Node {\n    protected final Node node;\n\n    public SValueNode(ISourcePosition position, Node node) {\n        super(position, node.containsVariableAssignment());\n\n        assert node != null : \"node is not null\";\n\n        this.node = node;\n    }\n\n    @Override\n    public NodeType getNodeType() {\n        return NodeType.SVALUENODE;\n    }\n\n    @Override\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitSValueNode(this);\n    }\n\n    public Node getValue() {\n        return node;\n    }\n\n    @Override\n    public List<Node> childNodes() {\n        return createList(node);\n    }\n}\n"
            }
        ],
        "SLOC": "56",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\npublic class SplatNode extends Node {\n    protected final Node node;\n\n    public SplatNode(ISourcePosition position, Node node) {\n        super(position, node.containsVariableAssignment());\n\n        assert node != null : \"node is not null\";\n\n        this.node = node;\n    }\n\n    @Override\n    public NodeType getNodeType() {\n        return NodeType.SPLATNODE;\n    }\n\n    @Override\n    public <T> T accept(NodeVisitor<T> visitor) {\n        return visitor.visitSplatNode(this);\n    }\n\n    public Node getValue() {\n        return node;\n    }\n\n    @Override\n    public List<Node> childNodes() {\n        return createList(node);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ReturnNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/BreakNode.java",
                "SLOC": "69",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents a 'break' statement.\n */\npublic class BreakNode extends Node implements NonLocalControlFlowNode {\n    private final Node valueNode;\n    \n    public BreakNode(ISourcePosition position, Node valueNode) {\n        super(position, valueNode != null && valueNode.containsVariableAssignment());\n        \n        assert valueNode != null : \"valueNode is not null\";\n        \n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.BREAKNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitBreakNode(this);\n    }\n    \n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n\n    public boolean hasValue() {\n        return valueNode != NilImplicitNode.NIL;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(valueNode);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/NextNode.java",
                "SLOC": "69",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a 'next' statement.\n */\npublic class NextNode extends Node implements NonLocalControlFlowNode {\n    private final Node valueNode;\n\n    public NextNode(ISourcePosition position, Node valueNode) {\n        super(position, valueNode.containsVariableAssignment());\n        \n        assert valueNode != null : \"valueNode is not null\";\n        \n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.NEXTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitNextNode(this);\n    }\n    \n    /**\n     * Gets the valueNode.\n     * @return Returns a Node\n     */\n    public Node getValueNode() {\n        return valueNode;\n    }\n\n    public boolean hasValue() {\n        return valueNode != NilImplicitNode.NIL;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(valueNode);\n    }\n}\n"
            }
        ],
        "SLOC": "65",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2001-2004 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a return statement.\n */\npublic class ReturnNode extends Node implements NonLocalControlFlowNode {\n    private final Node valueNode;\n\n    public ReturnNode(ISourcePosition position, Node valueNode) {\n        super(position, valueNode.containsVariableAssignment());\n        \n        assert valueNode != null : \"valueNode is not null\";\n        \n        this.valueNode = valueNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.RETURNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitReturnNode(this);\n    }\n\n    public Node getValueNode() {\n        return valueNode;\n    }\n\n    public boolean hasValue() {\n        return valueNode != NilImplicitNode.NIL;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(valueNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/RetryNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/RedoNode.java",
                "SLOC": "62",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents a 'redo'\n */\npublic class RedoNode extends Node implements NonLocalControlFlowNode {\n    public RedoNode(ISourcePosition position) {\n        super(position, false);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.REDONODE;\n    }\n\n    public Node getValueNode() {\n        return null; // Needed for non local control flow node marker\n    }\n\n    public boolean hasValue() {\n        return false; // Redo never allows a value\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitRedoNode(this);\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/NilNode.java",
                "SLOC": "63",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * represents 'nil'\n */\npublic class NilNode extends Node implements SideEffectFree {\n\n    public NilNode(ISourcePosition position) {\n        super(position, false);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.NILNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitNilNode(this);\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n\n    public boolean isNil() {\n        return true;\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            }
        ],
        "SLOC": "61",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a 'retry' statement.\n */\npublic class RetryNode extends Node implements NonLocalControlFlowNode {\n    public RetryNode(ISourcePosition position) {\n        super(position, false);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.RETRYNODE;\n    }\n\n    public Node getValueNode() {\n        return null; // Needed for non local control flow node marker\n    }\n\n    public boolean hasValue() {\n        return false; // Retry never allows a value\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitRetryNode(this);\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/WhileNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/UntilNode.java",
                "SLOC": "88",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an until statement.\n */\npublic class UntilNode extends Node {\n    private final Node conditionNode;\n    private final Node bodyNode;\n    private final boolean evaluateAtStart;\n\n    public UntilNode(ISourcePosition position, Node conditionNode, Node bodyNode) {\n        this(position, conditionNode, bodyNode, true);\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.UNTILNODE;\n    }\n\n    public UntilNode(ISourcePosition position, Node conditionNode, Node bodyNode, boolean evaluateAtStart) {\n        super(position, conditionNode.containsVariableAssignment() || bodyNode.containsVariableAssignment());\n        \n        assert conditionNode != null : \"conditionNode is not null\";\n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.conditionNode = conditionNode;\n        this.bodyNode = bodyNode;\n        this.evaluateAtStart = evaluateAtStart;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitUntilNode(this);\n    }\n\n    /**\n     * Gets the bodyNode.\n     * @return Returns a Node\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n\n    /**\n     * Gets the conditionNode.\n     * @return Returns a Node\n     */\n    public Node getConditionNode() {\n        return conditionNode;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(conditionNode, bodyNode);\n    }\n    \n    /**\n     * Determine whether this is while or do while\n     * @return true if you are a while, false if do while\n     */\n    public boolean evaluateAtStart() {\n        return evaluateAtStart;\n    }\n}\n"
            }
        ],
        "SLOC": "97",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a while statement. This could be the both versions:\n * \n * while &lt;condition&gt;\n *    &lt;body&gt;\n * end\n * \n * and\n * \n * &lt;body&gt; 'while' &lt;condition&gt;\n */\npublic class WhileNode extends Node {\n    private final Node conditionNode;\n    private final Node bodyNode;\n    private final boolean evaluateAtStart;\n    \n    public WhileNode(ISourcePosition position, Node conditionNode, Node bodyNode) {\n        this(position, conditionNode, bodyNode, true);\n    }\n\n    public WhileNode(ISourcePosition position, Node conditionNode, Node bodyNode,\n            boolean evalAtStart) {\n        super(position, conditionNode.containsVariableAssignment() || bodyNode.containsVariableAssignment());\n        \n        assert conditionNode != null : \"conditionNode is not null\";\n        assert bodyNode != null : \"bodyNode is not null\";\n        \n        this.conditionNode = conditionNode;\n        this.bodyNode = bodyNode;\n        this.evaluateAtStart = evalAtStart;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.WHILENODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitWhileNode(this);\n    }\n    \n    /**\n     * Gets the bodyNode.\n     * @return Returns a Node\n     */\n    public Node getBodyNode() {\n        return bodyNode;\n    }\n\n    /**\n     * Gets the conditionNode.\n     * @return Returns a Node\n     */\n    public Node getConditionNode() {\n        return conditionNode;\n    }\n    \n    /**\n     * Determine whether this is while or do while\n     * @return true if you are a while, false if do while\n     */\n    public boolean evaluateAtStart() {\n        return evaluateAtStart;\n    }\n\n    public List<Node> childNodes() {\n        return Node.createList(conditionNode, bodyNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/YieldNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/EvStrNode.java",
                "SLOC": "69",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** Represents an #{} expression in a string. This Node is always a subnode\n * of a DStrNode, DXStrNode or a DRegexpNode.\n * \n * Before this Node is evaluated it contains the code as a String (value). After\n * the first evaluation this String is parsed into the evaluatedNode Node.\n */\npublic class EvStrNode extends Node {\n    private final Node body;\n\n    public EvStrNode(ISourcePosition position, Node body) {\n        super(position,  body != null && body.containsVariableAssignment());\n        this.body = body;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.EVSTRNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitEvStrNode(this);\n    }\n\n    /**\n     * Gets the evaluatedNode.\n     * @return Returns a Node\n     */\n    public Node getBody() {\n        return body;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(body);\n    }\n}\n"
            }
        ],
        "SLOC": "72",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents a yield statement.\n */\npublic class YieldNode extends Node {\n    private final Node argsNode;\n\n    /**\n     * Construct a new YieldNode.\n     *\n     * @param position position of the node in the source\n     * @param argsNode the arguments to the yield (null == no args)\n     */\n    public YieldNode(ISourcePosition position, Node argsNode) {\n        super(position, argsNode != null && argsNode.containsVariableAssignment());\n        \n        this.argsNode = argsNode;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.YIELDNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitYieldNode(this);\n    }\n\n    /**\n     * Gets the argsNode.\n     * @return Returns a Node\n     */\n    public Node getArgsNode() {\n        return argsNode;\n    }\n\n    @Override\n    public List<Node> childNodes() {\n        return createList(argsNode);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/VCallNode.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarAsgnNode.java",
                "SLOC": "75",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Class variable assignment node.\n */\npublic class ClassVarAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name id of the class variable to assign to\n     * @param valueNode  Node used to compute the new value when the assignment is evaled\n     */\n    public ClassVarAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARASGNNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ClassVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Access to a class variable.\n */\npublic class ClassVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public ClassVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CLASSVARNODE;\n    }\n\n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitClassVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/ConstNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * The access to a Constant.\n */\npublic class ConstNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public ConstNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.CONSTNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitConstNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalVarNode.java",
                "SLOC": "67",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n *\taccess to a global variable.\n */\npublic class GlobalVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public GlobalVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalVarNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/GlobalAsgnNode.java",
                "SLOC": "74",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Represents an assignment to a global variable.\n */\npublic class GlobalAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    public GlobalAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.GLOBALASGNNODE;\n    }\n    \n    /**\n     * RubyMethod used by visitors.\n     * accepts the visitor \n     * @param iVisitor the visitor to accept\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitGlobalAsgnNode(this);\n    }\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n\n    @Override\n    public boolean needsDefinitionCheck() {\n        return false;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/InstVarNode.java",
                "SLOC": "68",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2006 Lukas Felber <lfelber@hsr.ch>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an instance variable accessor.\n */\npublic class InstVarNode extends Node implements INameNode, SideEffectFree {\n    private RubySymbol name;\n\n    public InstVarNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.INSTVARNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitInstVarNode(this);\n    }\n\t\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n\n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/Colon3Node.java",
                "SLOC": "71",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004-2006 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * Global scope node (::FooBar).  This is used to gain access to the global scope (that of the \n * Object class) when referring to a constant or method.\n */\npublic class Colon3Node extends Node implements INameNode {\n    protected RubySymbol name;\n\n    public Colon3Node(ISourcePosition position, RubySymbol name) {\n        this(position, name, false);\n    }\n\n    protected Colon3Node(ISourcePosition position, RubySymbol name, boolean containsAssignment) {\n        super(position, containsAssignment);\n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.COLON3NODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitColon3Node(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ast/InstAsgnNode.java",
                "SLOC": "72",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2002-2004 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Stefan Matthias Aust <sma@3plus4.de>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/** \n * Represents an instance variable assignment.\n */\npublic class InstAsgnNode extends AssignableNode implements INameNode {\n    private RubySymbol name;\n\n    /**\n     * @param name the name of the instance variable\n     * @param valueNode the value of the variable\n     **/\n    public InstAsgnNode(ISourcePosition position, RubySymbol name, Node valueNode) {\n        super(position, valueNode, valueNode != null && valueNode.containsVariableAssignment());\n        \n        this.name = name;\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.INSTASGNNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitInstAsgnNode(this);\n    }\n\n    /**\n     * Gets the name.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return createList(getValueNode());\n    }\n}\n"
            }
        ],
        "SLOC": "70",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2001-2002 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2001-2002 Benoit Cerrina <b.cerrina@wanadoo.fr>\n * Copyright (C) 2002 Anders Bengtsson <ndrsbngtssn@yahoo.se>\n * Copyright (C) 2004 Thomas E Enebo <enebo@acm.org>\n * Copyright (C) 2004 Charles O Nutter <headius@headius.com>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ast;\n\nimport java.util.List;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ast.types.INameNode;\nimport org.jruby.ast.visitor.NodeVisitor;\nimport org.jruby.lexer.yacc.ISourcePosition;\n\n/**\n * RubyMethod call without any arguments\n *\n */\npublic class VCallNode extends Node implements INameNode {\n    private RubySymbol name;\n\n    public VCallNode(ISourcePosition position, RubySymbol name) {\n        super(position, false);\n\n        this.name = name;\n        setNewline();\n    }\n\n    public NodeType getNodeType() {\n        return NodeType.VCALLNODE;\n    }\n    \n    /**\n     * Accept for the visitor pattern.\n     * @param iVisitor the visitor\n     **/\n    public <T> T accept(NodeVisitor<T> iVisitor) {\n        return iVisitor.visitVCallNode(this);\n    }\n\n    /**\n     * Gets the methodName.\n     * @return Returns a String\n     */\n    public RubySymbol getName() {\n        return name;\n    }\n    \n    public List<Node> childNodes() {\n        return EMPTY_LIST;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/compiler/MethodJITClassGenerator.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/compiler/BlockJITClassGenerator.java",
                "SLOC": "59",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.compiler;\n\nimport org.jruby.Ruby;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.targets.JVMVisitor;\nimport org.jruby.ir.targets.JVMVisitorMethodContext;\nimport org.jruby.runtime.MixedModeIRBlockBody;\nimport org.jruby.util.cli.Options;\n\npublic class BlockJITClassGenerator extends JITClassGenerator {\n    public BlockJITClassGenerator(String className, String methodName, String key, Ruby ruby, MixedModeIRBlockBody body, JVMVisitor visitor) {\n        super(className, methodName, key, ruby, visitor);\n        this.body = body;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    protected void compile(JVMVisitorMethodContext context) {\n        if (bytecode != null) return;\n\n        // Time the compilation\n        long start = System.nanoTime();\n\n        InterpreterContext ic = body.ensureInstrsReady();\n\n        int insnCount = ic.getInstructions().length;\n        if (insnCount > Options.JIT_MAXSIZE.load()) {\n            // methods with more than our limit of basic blocks are likely too large to JIT, so bail out\n            throw new NotCompilableException(\"Could not compile \" + body + \"; instruction count \" + insnCount + \" exceeds threshold of \" + Options.JIT_MAXSIZE.load());\n        }\n\n        // This may not be ok since we'll end up running passes specific to JIT\n        // CON FIXME: Really should clone scope before passes in any case\n        bytecode = visitor.compileToBytecode(body.getIRScope(), context);\n\n        compileTime = System.nanoTime() - start;\n    }\n\n    @Override\n    public String toString() {\n        return \"{} at \" + body.getFile() + ':' + body.getLine();\n    }\n\n    private final MixedModeIRBlockBody body;\n\n}\n"
            }
        ],
        "SLOC": "70",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.compiler;\n\nimport org.jruby.Ruby;\nimport org.jruby.internal.runtime.AbstractIRMethod;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.targets.JVMVisitor;\nimport org.jruby.ir.targets.JVMVisitorMethodContext;\nimport org.jruby.util.cli.Options;\n\npublic class MethodJITClassGenerator extends JITClassGenerator {\n    public MethodJITClassGenerator(String className, String methodName, String key, Ruby ruby, AbstractIRMethod method, JVMVisitor visitor) {\n        super(className, methodName, key, ruby, visitor);\n        this.method = method;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    protected void compile(JVMVisitorMethodContext context) {\n        if (bytecode != null) return;\n\n        // Time the compilation\n        long start = System.nanoTime();\n\n        InterpreterContext ic = method.ensureInstrsReady();\n\n        int insnCount = ic.getInstructions().length;\n        if (insnCount > Options.JIT_MAXSIZE.load()) {\n            // methods with more than our limit of basic blocks are likely too large to JIT, so bail out\n            throw new NotCompilableException(\"Could not compile \" + method + \"; instruction count \" + insnCount + \" exceeds threshold of \" + Options.JIT_MAXSIZE.load());\n        }\n\n        // This may not be ok since we'll end up running passes specific to JIT\n        // CON FIXME: Really should clone scope before passes in any case\n        bytecode = visitor.compileToBytecode(method.getIRScope(), context);\n\n//            try {\n//                java.io.FileOutputStream fos = new java.io.FileOutputStream(className + '#' + methodName + \".class\");\n//                fos.write(bytecode);\n//                fos.close();\n//            } catch (Exception e) {\n//                e.printStackTrace();\n//            }\n\n        compileTime = System.nanoTime() - start;\n    }\n\n    // FIXME: Does anything call this?  If so we should document it.\n    public void generate() {\n        compile(new JVMVisitorMethodContext());\n    }\n\n    @Override\n    public String toString() {\n        return methodName + \"() at \" + method.getFile() + ':' + method.getLine();\n    }\n    private final AbstractIRMethod method;\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/embed/internal/ThreadSafeLocalContextProvider.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/embed/internal/ConcurrentLocalContextProvider.java",
                "SLOC": "110",
                "content": "/**\n * **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2011 Yoko Harada <yokolet@gmail.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n * **** END LICENSE BLOCK *****\n */\npackage org.jruby.embed.internal;\n\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.concurrent.atomic.AtomicReference;\nimport org.jruby.Ruby;\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.embed.LocalVariableBehavior;\n\n/**\n * Concurrent type local context provider.\n * Ruby runtime returned from the getRuntime() method is a classloader-global runtime.\n * While variables (except global variables) and constants are thread local.\n *\n * @author Yoko Harada <yokolet@gmail.com>\n */\npublic class ConcurrentLocalContextProvider extends AbstractLocalContextProvider {\n    private volatile ConcurrentLinkedQueue<AtomicReference<LocalContext>> contextRefs =\n        new ConcurrentLinkedQueue<AtomicReference<LocalContext>>();\n\n    private ThreadLocal<AtomicReference<LocalContext>> contextHolder =\n            new ThreadLocal<AtomicReference<LocalContext>>() {\n                @Override\n                public AtomicReference<LocalContext> initialValue() {\n                    AtomicReference<LocalContext> contextRef = null;\n\n                    try {\n                        contextRef = new AtomicReference<LocalContext>(getInstance());\n                        contextRefs.add(contextRef);\n                        return contextRef;\n                    } catch (NullPointerException npe) {\n                        if (contextRefs == null) {\n                            // contextRefs became null, we've been terminated\n                            if (contextRef != null) {\n                                contextRef.get().remove();\n                            }\n\n                            return null;\n                        } else {\n                            throw npe;\n                        }\n                    }\n                }\n            };\n\n    public ConcurrentLocalContextProvider(LocalVariableBehavior behavior) {\n        super( getGlobalRuntimeConfigOrNew(), behavior );\n    }\n\n    public ConcurrentLocalContextProvider(LocalVariableBehavior behavior, boolean lazy) {\n        super( getGlobalRuntimeConfigOrNew(), behavior );\n        this.lazy = lazy;\n    }\n\n    @Override\n    public Ruby getRuntime() {\n        return getGlobalRuntime(this);\n    }\n\n    @Override\n    public RubyInstanceConfig getRubyInstanceConfig() {\n        return getGlobalRuntimeConfig(this);\n    }\n\n    @Override\n    public BiVariableMap getVarMap() {\n        return contextHolder.get().get().getVarMap(this);\n    }\n\n    @Override\n    public Map getAttributeMap() {\n        return contextHolder.get().get().getAttributeMap();\n    }\n\n    @Override\n    public boolean isRuntimeInitialized() {\n        return Ruby.isGlobalRuntimeReady();\n    }\n\n    @Override\n    public void terminate() {\n        ConcurrentLinkedQueue<AtomicReference<LocalContext>> terminated = contextRefs;\n        contextRefs = null;\n\n        if (terminated != null) {\n            for (AtomicReference<LocalContext> contextRef : terminated) {\n                contextRef.get().remove();\n                contextRef.lazySet(null);\n            }\n\n            terminated.clear();\n        }\n\n        contextHolder.remove();\n        contextHolder.set(null);\n    }\n\n}\n"
            }
        ],
        "SLOC": "102",
        "content": "/**\n * **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2009-2011 Yoko Harada <yokolet@gmail.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n * **** END LICENSE BLOCK *****\n */\npackage org.jruby.embed.internal;\n\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.concurrent.atomic.AtomicReference;\nimport org.jruby.Ruby;\nimport org.jruby.embed.LocalVariableBehavior;\n\n/**\n *\n * @author Yoko Harada <yokolet@gmail.com>\n */\npublic class ThreadSafeLocalContextProvider extends AbstractLocalContextProvider {\n    private volatile ConcurrentLinkedQueue<AtomicReference<LocalContext>> contextRefs =\n        new ConcurrentLinkedQueue<AtomicReference<LocalContext>>();\n\n    private ThreadLocal<AtomicReference<LocalContext>> contextHolder =\n            new ThreadLocal<AtomicReference<LocalContext>>() {\n                @Override\n                public AtomicReference<LocalContext> initialValue() {\n                    AtomicReference<LocalContext> contextRef = null;\n\n                    try {\n                        contextRef = new AtomicReference<LocalContext>(getInstance());\n                        contextRefs.add(contextRef);\n                        return contextRef;\n                    } catch (NullPointerException npe) {\n                        if (contextRefs == null) {\n                            // contextRefs became null, we've been terminated\n                            if (contextRef != null) {\n                                contextRef.get().remove();\n                            }\n\n                            return null;\n                        } else {\n                            throw npe;\n                        }\n                    }\n                }\n            };\n\n    public ThreadSafeLocalContextProvider(LocalVariableBehavior behavior) {\n        super(behavior);\n    }\n\n    public ThreadSafeLocalContextProvider(LocalVariableBehavior behavior, boolean lazy) {\n        super(behavior);\n        this.lazy = lazy;\n    }\n\n    @Override\n    public Ruby getRuntime() {\n        return contextHolder.get().get().getRuntime();\n    }\n\n    @Override\n    public BiVariableMap getVarMap() {\n        return contextHolder.get().get().getVarMap(this);\n    }\n\n    @Override\n    public Map getAttributeMap() {\n        return contextHolder.get().get().getAttributeMap();\n    }\n\n    @Override\n    public boolean isRuntimeInitialized() {\n        return contextHolder.get().get().isInitialized();\n    }\n\n    @Override\n    public void terminate() {\n        ConcurrentLinkedQueue<AtomicReference<LocalContext>> terminated = contextRefs;\n        contextRefs = null;\n\n        if (terminated != null) {\n            for (AtomicReference<LocalContext> contextRef : terminated) {\n                contextRef.get().remove();\n                contextRef.lazySet(null);\n            }\n\n            terminated.clear();\n        }\n\n        contextHolder.remove();\n        contextHolder.set(null);\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/FastNumericMethodGenerator.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/FastIntMethodGenerator.java",
                "SLOC": "102",
                "content": "package org.jruby.ext.ffi.jffi;\n\n\nimport com.kenai.jffi.CallContext;\nimport com.kenai.jffi.CallingConvention;\nimport org.jruby.ext.ffi.NativeType;\nimport com.kenai.jffi.Platform;\n\n/**\n *\n */\nfinal class FastIntMethodGenerator extends AbstractNumericMethodGenerator {\n    private static final int MAX_PARAMETERS = getMaximumFastIntParameters();\n\n    private static final String[] signatures = buildSignatures(int.class, MAX_PARAMETERS);\n\n    private static final String[] methodNames = {\n        \"invokeI0\", \"invokeI1\", \"invokeI2\", \"invokeI3\", \"invokeI4\", \"invokeI5\", \"invokeI6\"\n    };\n\n    String getInvokerMethodName(JITSignature signature) {\n\n        final int parameterCount = signature.getParameterCount();\n\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= methodNames.length) {\n            return methodNames[parameterCount];\n\n        } else {\n            throw new IllegalArgumentException(\"invalid fast-int parameter count: \" + parameterCount);\n        }\n    }\n\n    String getInvokerSignature(int parameterCount) {\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= signatures.length) {\n            return signatures[parameterCount];\n        }\n        throw new IllegalArgumentException(\"invalid fast-int parameter count: \" + parameterCount);\n    }\n\n    final Class getInvokerIntType() {\n        return int.class;\n    }\n\n    public boolean isSupported(JITSignature signature) {\n        final int parameterCount = signature.getParameterCount();\n\n        if (!signature.getCallingConvention().equals(CallingConvention.DEFAULT) || parameterCount > MAX_PARAMETERS) {\n            return false;\n        }\n\n        final Platform platform = Platform.getPlatform();\n\n        if (platform.getOS().equals(Platform.OS.WINDOWS)) {\n            return false;\n        }\n\n        if (!platform.getCPU().equals(Platform.CPU.I386) && !platform.getCPU().equals(Platform.CPU.X86_64)) {\n            return false;\n        }\n\n        for (int i = 0; i < parameterCount; i++) {\n            if (!isFastIntParameter(platform, signature.getParameterType(i))) {\n                return false;\n            }\n        }\n\n        return isFastIntResult(platform, signature.getResultType());\n    }\n\n\n    final static int getMaximumFastIntParameters() {\n        try {\n            com.kenai.jffi.Invoker.class.getDeclaredMethod(\"invokeI6\", CallContext.class, long.class,\n                    int.class, int.class, int.class, int.class, int.class, int.class);\n            return 6;\n        } catch (Throwable t) {\n            return -1;\n        }\n    }\n\n\n    private static boolean isFastIntType(Platform platform, NativeType type) {\n        switch (type) {\n            case BOOL:\n            case CHAR:\n            case UCHAR:\n            case SHORT:\n            case USHORT:\n            case INT:\n            case UINT:\n                return true;\n                \n            case LONG:\n            case ULONG:\n                return platform.longSize() == 32;\n                \n            default:\n                return false;\n        }\n    }\n\n\n    static boolean isFastIntResult(Platform platform, NativeType type) {\n        switch (type) {\n            case VOID:\n                return true;\n\n            case POINTER:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 32;\n\n            default:\n                return isFastIntType(platform, type);\n        }\n    }\n\n    static boolean isFastIntParameter(Platform platform, NativeType type) {\n        switch (type) {\n            case POINTER:\n            case BUFFER_IN:\n            case BUFFER_OUT:\n            case BUFFER_INOUT:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 32;\n            default:\n                return isFastIntType(platform, type);\n        }\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/FastLongMethodGenerator.java",
                "SLOC": "105",
                "content": "package org.jruby.ext.ffi.jffi;\n\n\nimport com.kenai.jffi.CallContext;\nimport com.kenai.jffi.CallingConvention;\nimport com.kenai.jffi.Platform;\nimport org.jruby.ext.ffi.NativeType;\n\n/**\n *\n */\nfinal class FastLongMethodGenerator extends AbstractNumericMethodGenerator {\n    private static final int MAX_PARAMETERS = getMaximumFastLongParameters();\n\n    private static final String[] signatures = buildSignatures(long.class, MAX_PARAMETERS);\n\n    private static final String[] methodNames = {\n        \"invokeL0\", \"invokeL1\", \"invokeL2\", \"invokeL3\", \"invokeL4\", \"invokeL5\", \"invokeL6\"\n    };\n\n    String getInvokerMethodName(JITSignature signature) {\n\n        final int parameterCount = signature.getParameterCount();\n\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= methodNames.length) {\n            return methodNames[parameterCount];\n\n        } else {\n            throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n        }\n    }\n\n    String getInvokerSignature(int parameterCount) {\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= signatures.length) {\n            return signatures[parameterCount];\n        }\n        throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n    }\n\n    final Class getInvokerIntType() {\n        return long.class;\n    }\n\n    public boolean isSupported(JITSignature signature) {\n        final int parameterCount = signature.getParameterCount();\n\n        if (!signature.getCallingConvention().equals(CallingConvention.DEFAULT) || parameterCount > MAX_PARAMETERS) {\n            return false;\n        }\n\n        final Platform platform = Platform.getPlatform();\n\n        if (platform.getOS().equals(Platform.OS.WINDOWS)) {\n            return false;\n        }\n\n        // Only supported on amd64 arches\n        if (!platform.getCPU().equals(Platform.CPU.X86_64)) {\n            return false;\n        }\n\n        for (int i = 0; i < parameterCount; i++) {\n            if (!isFastLongParameter(platform, signature.getParameterType(i))) {\n                return false;\n            }\n        }\n\n        return isFastLongResult(platform, signature.getResultType());\n    }\n\n\n    final static int getMaximumFastLongParameters() {\n        try {\n            com.kenai.jffi.Invoker.class.getDeclaredMethod(\"invokeL6\", CallContext.class, long.class,\n                    long.class, long.class, long.class, long.class, long.class, long.class);\n            return 6;\n        } catch (Throwable t) {\n            return -1;\n        }\n    }\n\n\n    private static boolean isFastLongType(Platform platform, NativeType type) {\n        switch (type) {\n            case BOOL:\n            case CHAR:\n            case UCHAR:\n            case SHORT:\n            case USHORT:\n            case INT:\n            case UINT:\n            case LONG:\n            case ULONG:\n            case LONG_LONG:\n            case ULONG_LONG:\n            case POINTER:\n                return true;\n\n            default:\n                return false;\n        }\n    }\n\n\n    static boolean isFastLongResult(Platform platform, NativeType type) {\n        switch (type) {\n            case VOID:\n                return true;\n                \n            case POINTER:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 64;\n\n            default:\n                return isFastLongType(platform, type);\n        }\n    }\n\n    static boolean isFastLongParameter(Platform platform, NativeType type) {\n        switch (type) {\n            case POINTER:\n            case BUFFER_IN:\n            case BUFFER_OUT:\n            case BUFFER_INOUT:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 64;\n            \n            default:\n                return isFastLongType(platform, type);\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "105",
        "content": "package org.jruby.ext.ffi.jffi;\n\n\nimport com.kenai.jffi.CallContext;\nimport com.kenai.jffi.CallingConvention;\nimport com.kenai.jffi.Platform;\nimport org.jruby.ext.ffi.NativeType;\n\n/**\n *\n */\nfinal class FastNumericMethodGenerator extends AbstractNumericMethodGenerator {\n    private static final int MAX_PARAMETERS = getMaximumFastNumericParameters();\n\n    private static final String[] signatures = buildSignatures(long.class, MAX_PARAMETERS);\n\n    private static final String[] methodNames = {\n        \"invokeN0\", \"invokeN1\", \"invokeN2\", \"invokeN3\", \"invokeN4\", \"invokeN5\", \"invokeN6\"\n    };\n\n    String getInvokerMethodName(JITSignature signature) {\n\n        final int parameterCount = signature.getParameterCount();\n\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= methodNames.length) {\n            return methodNames[parameterCount];\n\n        } else {\n            throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n        }\n    }\n\n    String getInvokerSignature(int parameterCount) {\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= signatures.length) {\n            return signatures[parameterCount];\n        }\n        throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n    }\n\n    final Class getInvokerIntType() {\n        return long.class;\n    }\n\n    public boolean isSupported(JITSignature signature) {\n        final int parameterCount = signature.getParameterCount();\n\n        if (!signature.getCallingConvention().equals(CallingConvention.DEFAULT) || parameterCount > MAX_PARAMETERS) {\n            return false;\n        }\n\n        final Platform platform = Platform.getPlatform();\n\n        if (platform.getOS().equals(Platform.OS.WINDOWS)) {\n            return false;\n        }\n\n        // Only supported on amd64 arches\n        if (!platform.getCPU().equals(Platform.CPU.I386) && !platform.getCPU().equals(Platform.CPU.X86_64)) {\n            return false;\n        }\n\n        for (int i = 0; i < parameterCount; i++) {\n            if (!isFastNumericParameter(platform, signature.getParameterType(i))) {\n                return false;\n            }\n        }\n\n        return isFastNumericResult(platform, signature.getResultType());\n    }\n\n\n    final static int getMaximumFastNumericParameters() {\n        try {\n            com.kenai.jffi.Invoker.class.getDeclaredMethod(\"invokeN6\", CallContext.class, long.class,\n                    long.class, long.class, long.class, long.class, long.class, long.class);\n            return 6;\n        } catch (Throwable t) {\n            return -1;\n        }\n    }\n\n\n    private static boolean isFastNumericType(Platform platform, NativeType type) {\n        switch (type) {\n            case BOOL:\n            case CHAR:\n            case UCHAR:\n            case SHORT:\n            case USHORT:\n            case INT:\n            case UINT:\n            case LONG:\n            case ULONG:\n            case LONG_LONG:\n            case ULONG_LONG:\n            case FLOAT:\n            case DOUBLE:\n                return true;\n\n            default:\n                return false;\n        }\n    }\n\n\n    static boolean isFastNumericResult(Platform platform, NativeType type) {\n        switch (type) {\n            case VOID:\n            case POINTER:\n            case STRING:\n            case TRANSIENT_STRING:\n                return true;\n\n            default:\n                return isFastNumericType(platform, type);\n        }\n    }\n\n    static boolean isFastNumericParameter(Platform platform, NativeType type) {\n        switch (type) {\n            case POINTER:\n            case BUFFER_IN:\n            case BUFFER_OUT:\n            case BUFFER_INOUT:\n            case STRING:\n            case TRANSIENT_STRING:\n                return true;\n            \n            default:\n                return isFastNumericType(platform, type);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/FastLongMethodGenerator.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/FastIntMethodGenerator.java",
                "SLOC": "102",
                "content": "package org.jruby.ext.ffi.jffi;\n\n\nimport com.kenai.jffi.CallContext;\nimport com.kenai.jffi.CallingConvention;\nimport org.jruby.ext.ffi.NativeType;\nimport com.kenai.jffi.Platform;\n\n/**\n *\n */\nfinal class FastIntMethodGenerator extends AbstractNumericMethodGenerator {\n    private static final int MAX_PARAMETERS = getMaximumFastIntParameters();\n\n    private static final String[] signatures = buildSignatures(int.class, MAX_PARAMETERS);\n\n    private static final String[] methodNames = {\n        \"invokeI0\", \"invokeI1\", \"invokeI2\", \"invokeI3\", \"invokeI4\", \"invokeI5\", \"invokeI6\"\n    };\n\n    String getInvokerMethodName(JITSignature signature) {\n\n        final int parameterCount = signature.getParameterCount();\n\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= methodNames.length) {\n            return methodNames[parameterCount];\n\n        } else {\n            throw new IllegalArgumentException(\"invalid fast-int parameter count: \" + parameterCount);\n        }\n    }\n\n    String getInvokerSignature(int parameterCount) {\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= signatures.length) {\n            return signatures[parameterCount];\n        }\n        throw new IllegalArgumentException(\"invalid fast-int parameter count: \" + parameterCount);\n    }\n\n    final Class getInvokerIntType() {\n        return int.class;\n    }\n\n    public boolean isSupported(JITSignature signature) {\n        final int parameterCount = signature.getParameterCount();\n\n        if (!signature.getCallingConvention().equals(CallingConvention.DEFAULT) || parameterCount > MAX_PARAMETERS) {\n            return false;\n        }\n\n        final Platform platform = Platform.getPlatform();\n\n        if (platform.getOS().equals(Platform.OS.WINDOWS)) {\n            return false;\n        }\n\n        if (!platform.getCPU().equals(Platform.CPU.I386) && !platform.getCPU().equals(Platform.CPU.X86_64)) {\n            return false;\n        }\n\n        for (int i = 0; i < parameterCount; i++) {\n            if (!isFastIntParameter(platform, signature.getParameterType(i))) {\n                return false;\n            }\n        }\n\n        return isFastIntResult(platform, signature.getResultType());\n    }\n\n\n    final static int getMaximumFastIntParameters() {\n        try {\n            com.kenai.jffi.Invoker.class.getDeclaredMethod(\"invokeI6\", CallContext.class, long.class,\n                    int.class, int.class, int.class, int.class, int.class, int.class);\n            return 6;\n        } catch (Throwable t) {\n            return -1;\n        }\n    }\n\n\n    private static boolean isFastIntType(Platform platform, NativeType type) {\n        switch (type) {\n            case BOOL:\n            case CHAR:\n            case UCHAR:\n            case SHORT:\n            case USHORT:\n            case INT:\n            case UINT:\n                return true;\n                \n            case LONG:\n            case ULONG:\n                return platform.longSize() == 32;\n                \n            default:\n                return false;\n        }\n    }\n\n\n    static boolean isFastIntResult(Platform platform, NativeType type) {\n        switch (type) {\n            case VOID:\n                return true;\n\n            case POINTER:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 32;\n\n            default:\n                return isFastIntType(platform, type);\n        }\n    }\n\n    static boolean isFastIntParameter(Platform platform, NativeType type) {\n        switch (type) {\n            case POINTER:\n            case BUFFER_IN:\n            case BUFFER_OUT:\n            case BUFFER_INOUT:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 32;\n            default:\n                return isFastIntType(platform, type);\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "105",
        "content": "package org.jruby.ext.ffi.jffi;\n\n\nimport com.kenai.jffi.CallContext;\nimport com.kenai.jffi.CallingConvention;\nimport com.kenai.jffi.Platform;\nimport org.jruby.ext.ffi.NativeType;\n\n/**\n *\n */\nfinal class FastLongMethodGenerator extends AbstractNumericMethodGenerator {\n    private static final int MAX_PARAMETERS = getMaximumFastLongParameters();\n\n    private static final String[] signatures = buildSignatures(long.class, MAX_PARAMETERS);\n\n    private static final String[] methodNames = {\n        \"invokeL0\", \"invokeL1\", \"invokeL2\", \"invokeL3\", \"invokeL4\", \"invokeL5\", \"invokeL6\"\n    };\n\n    String getInvokerMethodName(JITSignature signature) {\n\n        final int parameterCount = signature.getParameterCount();\n\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= methodNames.length) {\n            return methodNames[parameterCount];\n\n        } else {\n            throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n        }\n    }\n\n    String getInvokerSignature(int parameterCount) {\n        if (parameterCount <= MAX_PARAMETERS && parameterCount <= signatures.length) {\n            return signatures[parameterCount];\n        }\n        throw new IllegalArgumentException(\"invalid fast-long parameter count: \" + parameterCount);\n    }\n\n    final Class getInvokerIntType() {\n        return long.class;\n    }\n\n    public boolean isSupported(JITSignature signature) {\n        final int parameterCount = signature.getParameterCount();\n\n        if (!signature.getCallingConvention().equals(CallingConvention.DEFAULT) || parameterCount > MAX_PARAMETERS) {\n            return false;\n        }\n\n        final Platform platform = Platform.getPlatform();\n\n        if (platform.getOS().equals(Platform.OS.WINDOWS)) {\n            return false;\n        }\n\n        // Only supported on amd64 arches\n        if (!platform.getCPU().equals(Platform.CPU.X86_64)) {\n            return false;\n        }\n\n        for (int i = 0; i < parameterCount; i++) {\n            if (!isFastLongParameter(platform, signature.getParameterType(i))) {\n                return false;\n            }\n        }\n\n        return isFastLongResult(platform, signature.getResultType());\n    }\n\n\n    final static int getMaximumFastLongParameters() {\n        try {\n            com.kenai.jffi.Invoker.class.getDeclaredMethod(\"invokeL6\", CallContext.class, long.class,\n                    long.class, long.class, long.class, long.class, long.class, long.class);\n            return 6;\n        } catch (Throwable t) {\n            return -1;\n        }\n    }\n\n\n    private static boolean isFastLongType(Platform platform, NativeType type) {\n        switch (type) {\n            case BOOL:\n            case CHAR:\n            case UCHAR:\n            case SHORT:\n            case USHORT:\n            case INT:\n            case UINT:\n            case LONG:\n            case ULONG:\n            case LONG_LONG:\n            case ULONG_LONG:\n            case POINTER:\n                return true;\n\n            default:\n                return false;\n        }\n    }\n\n\n    static boolean isFastLongResult(Platform platform, NativeType type) {\n        switch (type) {\n            case VOID:\n                return true;\n                \n            case POINTER:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 64;\n\n            default:\n                return isFastLongType(platform, type);\n        }\n    }\n\n    static boolean isFastLongParameter(Platform platform, NativeType type) {\n        switch (type) {\n            case POINTER:\n            case BUFFER_IN:\n            case BUFFER_OUT:\n            case BUFFER_INOUT:\n            case STRING:\n            case TRANSIENT_STRING:\n                return platform.addressSize() == 64;\n            \n            default:\n                return isFastLongType(platform, type);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/jffi/NilPointerParameterStrategy.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ffi/InvalidMemoryIO.java",
                "SLOC": "158",
                "content": "\n\npackage org.jruby.ext.ffi;\n\nimport java.nio.ByteOrder;\nimport org.jruby.Ruby;\nimport org.jruby.RubyClass;\nimport org.jruby.exceptions.RaiseException;\n\n/**\n * An implementation of MemoryIO that throws an exception on any access.\n */\npublic abstract class InvalidMemoryIO extends MemoryIO {\n    protected final Ruby runtime;\n    private final String message;\n    \n    public InvalidMemoryIO(Ruby runtime, boolean isDirect, long address, String message) {\n        super(isDirect, address);\n        this.runtime = runtime;\n        this.message = message;\n    }\n\n    protected RubyClass getErrorClass(Ruby runtime) {\n        return runtime.getRuntimeError();\n    }\n\n    protected RaiseException ex() {\n        return RaiseException.from(runtime, getErrorClass(runtime), message);\n    }\n\n    public ByteOrder order() {\n        return ByteOrder.nativeOrder();\n    }\n    \n    public MemoryIO slice(long offset) {\n        return this;\n    }\n\n    public MemoryIO slice(long offset, long size) {\n        return this;\n    }\n    \n    public MemoryIO dup() {\n        return this;\n    }\n\n    public java.nio.ByteBuffer asByteBuffer() {\n        throw ex();\n    }\n\n    public final byte getByte(long offset) {\n        throw ex();\n    }\n\n    public final short getShort(long offset) {\n        throw ex();\n    }\n\n    public final int getInt(long offset) {\n        throw ex();\n    }\n\n    public final long getLong(long offset) {\n        throw ex();\n    }\n\n    public final long getNativeLong(long offset) {\n        throw ex();\n    }\n\n    public final float getFloat(long offset) {\n        throw ex();\n    }\n\n    public final double getDouble(long offset) {\n        throw ex();\n    }\n\n    public final MemoryIO getMemoryIO(long offset) {\n        throw ex();\n    }\n\n    public final long getAddress(long offset) {\n        throw ex();\n    }\n\n    public final void putByte(long offset, byte value) {\n        throw ex();\n    }\n\n    public final void putShort(long offset, short value) {\n        throw ex();\n    }\n\n    public final void putInt(long offset, int value) {\n        throw ex();\n    }\n\n    public final void putLong(long offset, long value) {\n        throw ex();\n    }\n\n    public final void putNativeLong(long offset, long value) {\n        throw ex();\n    }\n\n    public final void putFloat(long offset, float value) {\n        throw ex();\n    }\n\n    public final void putDouble(long offset, double value) {\n        throw ex();\n    }\n\n    public final void putMemoryIO(long offset, MemoryIO value) {\n        throw ex();\n    }\n    public final void putAddress(long offset, long value) {\n        throw ex();\n    }\n    public final void get(long offset, byte[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, byte[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final void get(long offset, short[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, short[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final void get(long offset, int[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, int[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final void get(long offset, long[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, long[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final void get(long offset, float[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, float[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final void get(long offset, double[] dst, int off, int len) {\n        throw ex();\n    }\n\n    public final void put(long offset, double[] src, int off, int len) {\n        throw ex();\n    }\n\n    public final int indexOf(long offset, byte value) {\n        throw ex();\n    }\n\n    public final int indexOf(long offset, byte value, int maxlen) {\n        throw ex();\n    }\n\n    public final void setMemory(long offset, long size, byte value) {\n        throw ex();\n    }\n\n    public final void clear() {\n        throw ex();\n    }\n\n    public byte[] getZeroTerminatedByteArray(long offset) {\n        throw ex();\n    }\n\n    public byte[] getZeroTerminatedByteArray(long offset, int maxlen) {\n        throw ex();\n    }\n\n    public void putZeroTerminatedByteArray(long offset, byte[] bytes, int off, int len) {\n        throw ex();\n    }\n\n    public Object array() {\n        throw ex();\n    }\n\n    public int arrayOffset() {\n        throw ex();\n    }\n\n    public int arrayLength() {\n        throw ex();\n    }\n}\n"
            }
        ],
        "SLOC": "156",
        "content": "package org.jruby.ext.ffi.jffi;\n\nimport org.jruby.ext.ffi.MemoryIO;\n\nimport java.nio.ByteBuffer;\nimport java.nio.ByteOrder;\n\n/**\n * \n */\nfinal class NilPointerParameterStrategy extends PointerParameterStrategy {\n    NilPointerParameterStrategy() {\n        super(true, false);\n    }\n\n    public final MemoryIO getMemoryIO(Object parameter) {\n        return NullMemoryIO.INSTANCE;\n    }\n\n    static final class NullMemoryIO extends MemoryIO {\n        static final MemoryIO INSTANCE = new NullMemoryIO();\n\n        private NullMemoryIO() {\n            super(true, 0L);\n        }\n\n        private static final RuntimeException ex() {\n            return new UnsupportedOperationException();\n        }\n\n        public Object array() {\n            throw ex();\n        }\n\n        public int arrayOffset() {\n            throw ex();\n        }\n\n        public int arrayLength() {\n            throw ex();\n        }\n\n        public ByteOrder order() {\n            throw ex();\n        }\n\n        public MemoryIO slice(long offset) {\n            throw ex();\n        }\n\n        public MemoryIO slice(long offset, long size) {\n            throw ex();\n        }\n\n        public MemoryIO dup() {\n            throw ex();\n        }\n\n        public ByteBuffer asByteBuffer() {\n            throw ex();\n        }\n\n        public byte getByte(long offset) {\n            throw ex();\n        }\n\n        public short getShort(long offset) {\n            throw ex();\n        }\n\n        public int getInt(long offset) {\n            throw ex();\n        }\n\n        public long getLong(long offset) {\n            throw ex();\n        }\n\n        public long getNativeLong(long offset) {\n            throw ex();\n        }\n\n        public float getFloat(long offset) {\n            throw ex();\n        }\n\n        public double getDouble(long offset) {\n            throw ex();\n        }\n\n        public long getAddress(long offset) {\n            throw ex();\n        }\n\n        public MemoryIO getMemoryIO(long offset) {\n            throw ex();\n        }\n\n        public void putByte(long offset, byte value) {\n            throw ex();\n        }\n\n        public void putShort(long offset, short value) {\n            throw ex();\n        }\n\n        public void putInt(long offset, int value) {\n            throw ex();\n        }\n\n        public void putLong(long offset, long value) {\n            throw ex();\n        }\n\n        public void putNativeLong(long offset, long value) {\n            throw ex();\n        }\n\n        public void putFloat(long offset, float value) {\n            throw ex();\n        }\n\n        public void putDouble(long offset, double value) {\n            throw ex();\n        }\n\n        public void putMemoryIO(long offset, MemoryIO value) {\n            throw ex();\n        }\n\n        public void putAddress(long offset, long value) {\n            throw ex();\n        }\n\n        public void get(long offset, byte[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, byte[] src, int off, int len) {\n            throw ex();\n        }\n\n        public void get(long offset, short[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, short[] src, int off, int len) {\n            throw ex();\n        }\n\n        public void get(long offset, int[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, int[] src, int off, int len) {\n            throw ex();\n        }\n\n        public void get(long offset, long[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, long[] src, int off, int len) {\n            throw ex();\n        }\n\n        public void get(long offset, float[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, float[] src, int off, int len) {\n            throw ex();\n        }\n\n        public void get(long offset, double[] dst, int off, int len) {\n            throw ex();\n        }\n\n        public void put(long offset, double[] src, int off, int len) {\n            throw ex();\n        }\n\n        public int indexOf(long offset, byte value) {\n            throw ex();\n        }\n\n        public int indexOf(long offset, byte value, int maxlen) {\n            throw ex();\n        }\n\n        public void setMemory(long offset, long size, byte value) {\n            throw ex();\n        }\n\n        public byte[] getZeroTerminatedByteArray(long offset) {\n            throw ex();\n        }\n\n        public byte[] getZeroTerminatedByteArray(long offset, int maxlen) {\n            throw ex();\n        }\n\n        public void putZeroTerminatedByteArray(long offset, byte[] bytes, int off, int len) {\n            throw ex();\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/internal/runtime/methods/AttrWriterMethod.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/internal/runtime/methods/AttrReaderMethod.java",
                "SLOC": "75",
                "content": "/*\n **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2011 Charles O Nutter <headius@headius.com>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.internal.runtime.methods;\n\nimport java.util.Arrays;\nimport org.jruby.RubyClass;\nimport org.jruby.RubyModule;\nimport org.jruby.runtime.ivars.VariableAccessor;\nimport org.jruby.internal.runtime.methods.JavaMethod.JavaMethodZero;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.ivars.MethodData;\n\n/**\n * A method type for attribute writers (as created by attr_writer or attr_accessor).\n */\npublic class AttrReaderMethod extends JavaMethodZero {\n    private MethodData methodData;\n    private VariableAccessor accessor = VariableAccessor.DUMMY_ACCESSOR;\n\n    public AttrReaderMethod(RubyModule implementationClass, Visibility visibility, String variableName) {\n        super(implementationClass, visibility, variableName);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        IRubyObject variable = (IRubyObject) verifyAccessor(self.getMetaClass().getRealClass()).get(self);\n        return variable == null ? context.nil : variable;\n    }\n    \n    public String getVariableName() {\n        return name;\n    }\n\n    private VariableAccessor verifyAccessor(RubyClass cls) {\n        VariableAccessor localAccessor = accessor;\n        if (localAccessor.getClassId() != cls.id) {\n            localAccessor = cls.getVariableAccessorForRead(name);\n            accessor = localAccessor;\n        }\n        return localAccessor;\n    }\n    \n    @Override\n    public MethodData getMethodData() {\n        if (methodData == null){\n            methodData = new MethodData(name, \"dummyfile\", Arrays.asList(name));\n        }\n        return methodData;\n    }\n\n    // Used by racc extension, needed for backward-compat with 1.7.\n    @Deprecated\n    public AttrReaderMethod(RubyModule implementationClass, Visibility visibility, CallConfiguration callConfiguration, String variableName) {\n        this(implementationClass, visibility, variableName);\n    }\n}\n"
            }
        ],
        "SLOC": "77",
        "content": "/*\n **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2011 Charles O Nutter <headius@headius.com>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.internal.runtime.methods;\n\nimport java.util.Arrays;\nimport org.jruby.RubyClass;\nimport org.jruby.RubyModule;\nimport org.jruby.runtime.ivars.VariableAccessor;\nimport org.jruby.internal.runtime.methods.JavaMethod.JavaMethodOne;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.ivars.MethodData;\n\n/**\n * A method type for attribute writers (as created by attr_writer or attr_accessor).\n */\npublic class AttrWriterMethod extends JavaMethodOne {\n    private MethodData methodData;\n    private final String variableName;\n    private VariableAccessor accessor = VariableAccessor.DUMMY_ACCESSOR;\n\n    public AttrWriterMethod(RubyModule implementationClass, Visibility visibility, String variableName) {\n        super(implementationClass, visibility, variableName + \"=\");\n        this.variableName = variableName;\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg1) {\n        verifyAccessor(self.getMetaClass().getRealClass()).set(self, arg1);\n        return arg1;\n    }\n    \n    public String getVariableName() {\n        return variableName;\n    }\n\n    private VariableAccessor verifyAccessor(RubyClass cls) {\n        VariableAccessor localAccessor = accessor;\n        if (localAccessor.getClassId() != cls.id) {\n            localAccessor = cls.getVariableAccessorForWrite(variableName);\n            accessor = localAccessor;\n        }\n        return localAccessor;\n    }\n    \n    @Override\n    public MethodData getMethodData() {\n        if (methodData == null){\n            methodData = new MethodData(name, \"dummyfile\", Arrays.asList(variableName));\n        }\n        return methodData;\n    }\n\n    // Used by racc extension, needed for backward-compat with 1.7.\n    @Deprecated\n    public AttrWriterMethod(RubyModule implementationClass, Visibility visibility, CallConfiguration callConfiguration, String variableName) {\n        this(implementationClass, visibility, variableName);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/internal/runtime/methods/MixedModeIRMethod.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/internal/runtime/methods/InterpretedIRMethod.java",
                "SLOC": "230",
                "content": "package org.jruby.internal.runtime.methods;\n\nimport java.io.ByteArrayOutputStream;\n\nimport org.jruby.RubyModule;\nimport org.jruby.compiler.Compilable;\nimport org.jruby.internal.runtime.AbstractIRMethod;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.persistence.IRDumper;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.log.Logger;\nimport org.jruby.util.log.LoggerFactory;\n\n/**\n * Method for -X-C (interpreted only execution).  See MixedModeIRMethod for inter/JIT method impl.\n */\npublic class InterpretedIRMethod extends AbstractIRMethod implements Compilable<InterpreterContext> {\n    private static final Logger LOG = LoggerFactory.getLogger(InterpretedIRMethod.class);\n\n    private boolean displayedCFG = false; // FIXME: Remove when we find nicer way of logging CFG\n\n    public InterpretedIRMethod(IRScope method, Visibility visibility, RubyModule implementationClass) {\n        super(method, visibility, implementationClass);\n\n        // -1 jit.threshold is way of having interpreter not promote full builds\n        // regardless of compile mode (even when OFF full-builds are promoted)\n        if (implementationClass.getRuntime().getInstanceConfig().getJitThreshold() == -1) setCallCount(-1);\n\n        // This is so profiled callsite can access the sites original method (callsites has IRScope in it).\n        method.compilable = this;\n    }\n\n    protected void post(InterpreterContext ic, ThreadContext context) {\n        // update call stacks (pop: ..)\n        context.popFrame();\n        if (ic.popDynScope()) {\n            context.popScope();\n        }\n    }\n\n    protected void pre(InterpreterContext ic, ThreadContext context, IRubyObject self, String name, Block block, RubyModule implClass) {\n        // update call stacks (push: frame, class, scope, etc.)\n        context.preMethodFrameOnly(implClass, name, self, block);\n        if (ic.pushNewDynScope()) {\n            context.pushScope(DynamicScope.newDynamicScope(ic.getStaticScope()));\n        }\n    }\n\n    @Override\n    protected void printMethodIR() {\n        ByteArrayOutputStream baos = IRDumper.printIR(method, false, true);\n        LOG.info(\"Printing simple IR for \" + method.getId() + \":\\n\" + new String(baos.toByteArray()));\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, args, block);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, args, Block.NULL_BLOCK);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                         IRubyObject self, String name, IRubyObject[] args, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, args, block);\n            } else {\n                try {\n                    pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, args, block);\n                } finally {\n                    post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, block);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, Block.NULL_BLOCK);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                         IRubyObject self, String name, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, block);\n            } else {\n                try {\n                    pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, block);\n                } finally {\n                    post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, block);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, Block.NULL_BLOCK);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                         IRubyObject self, String name, IRubyObject arg1, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, block);\n            } else {\n                try {\n                    pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, block);\n                } finally {\n                    post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, block);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, Block.NULL_BLOCK);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                         IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2,  Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, block);\n            } else {\n                try {\n                    pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, block);\n                } finally {\n                    post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, arg2, block);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        if (callCount >= 0) promoteToFullBuild(context);\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, arg2, Block.NULL_BLOCK);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                         IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, arg3, block);\n            } else {\n                try {\n                    pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, arg3, block);\n                } finally {\n                    post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n\n    }\n\n    protected void doDebug() {\n        // FIXME: This is printing out IRScope CFG but JIT may be active and it might not reflect\n        // currently executing.  Move into JIT and into interp since they will be getting CFG from\n        // different sources\n        // FIXME: This is only printing out CFG once.  If we keep applying more passes then we\n        // will want to print out after those new passes.\n        ensureInstrsReady();\n        LOG.info(\"Executing '\" + method.getId() + \"'\");\n        if (!displayedCFG) {\n            LOG.info(method.debugOutput());\n            displayedCFG = true;\n        }\n    }\n\n    public void completeBuild(InterpreterContext interpreterContext) {\n        this.interpreterContext = interpreterContext;\n        // Reset so that we can see the new instr dump again\n        this.displayedCFG = false;\n    }\n\n    // Unlike JIT in MixedMode this will always successfully build but if using executor pool it may take a while\n    // and replace interpreterContext asynchronously.\n    private void promoteToFullBuild(ThreadContext context) {\n        tryJit(context, this);\n\n        if (IRRuntimeHelpers.shouldPrintIR(context.runtime)) {\n            ByteArrayOutputStream baos = IRDumper.printIR(method, true, true);\n\n            LOG.info(\"Printing full IR for \" + method.getId() + \":\\n\" + new String(baos.toByteArray()));\n        }\n    }\n\n    public String getClassName(ThreadContext context) {\n        return null;\n    }\n}\n"
            }
        ],
        "SLOC": "221",
        "content": "package org.jruby.internal.runtime.methods;\n\nimport java.io.ByteArrayOutputStream;\n\nimport org.jruby.RubyModule;\nimport org.jruby.compiler.Compilable;\nimport org.jruby.internal.runtime.AbstractIRMethod;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.persistence.IRDumper;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.log.Logger;\nimport org.jruby.util.log.LoggerFactory;\n\npublic class MixedModeIRMethod extends AbstractIRMethod implements Compilable<DynamicMethod> {\n    private static final Logger LOG = LoggerFactory.getLogger(MixedModeIRMethod.class);\n\n    private boolean displayedCFG = false; // FIXME: Remove when we find nicer way of logging CFG\n\n    private volatile DynamicMethod actualMethod; // JIT-ed method\n\n    public MixedModeIRMethod(IRScope method, Visibility visibility, RubyModule implementationClass) {\n        super(method, visibility, implementationClass);\n\n        if (!implementationClass.getRuntime().getInstanceConfig().isJitEnabled()) setCallCount(-1);\n        // This is so profiled callsite can access the sites original method (callsites has IRScope in it).\n        method.compilable = this;\n    }\n\n    public DynamicMethod getActualMethod() {\n        return actualMethod;\n    }\n\n    protected void post(InterpreterContext ic, ThreadContext context) {\n        // update call stacks (pop: ..)\n        context.popFrame();\n        if (ic.popDynScope()) {\n            context.popScope();\n        }\n    }\n\n    protected void pre(InterpreterContext ic, ThreadContext context, IRubyObject self, String name, Block block, RubyModule implClass) {\n        // update call stacks (push: frame, class, scope, etc.)\n        context.preMethodFrameOnly(implClass, name, self, block);\n        if (ic.pushNewDynScope()) {\n            context.pushScope(DynamicScope.newDynamicScope(ic.getStaticScope()));\n        }\n    }\n\n    @Override\n    protected void printMethodIR() {\n        ByteArrayOutputStream baos = IRDumper.printIR(method, false);\n        LOG.info(\"Printing simple IR for \" + method.getId() + \":\\n\" + new String(baos.toByteArray()));\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        // try jit before checking actualMethod, so we use jitted version immediately if it's ready\n        if (callCount >= 0) tryJit(context, this);\n\n        DynamicMethod jittedMethod = actualMethod;\n        if (jittedMethod != null) {\n            return jittedMethod.call(context, self, clazz, name, args, block);\n        }\n\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, args, block);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                               IRubyObject self, String name, IRubyObject[] args, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, args, block);\n            } else {\n                try {\n                    this.pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, args, block);\n                } finally {\n                    this.post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        // try jit before checking actualMethod, so we use jitted version immediately if it's ready\n        if (callCount >= 0) tryJit(context, this);\n\n        DynamicMethod jittedMethod = actualMethod;\n        if (jittedMethod != null) {\n            return jittedMethod.call(context, self, clazz, name, block);\n        }\n\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, block);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                               IRubyObject self, String name, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, block);\n            } else {\n                try {\n                    this.pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, block);\n                } finally {\n                    this.post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        // try jit before checking actualMethod, so we use jitted version immediately if it's ready\n        if (callCount >= 0) tryJit(context, this);\n\n        DynamicMethod jittedMethod = actualMethod;\n        if (jittedMethod != null) {\n            return jittedMethod.call(context, self, clazz, name, arg0, block);\n        }\n\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, block);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                               IRubyObject self, String name, IRubyObject arg1, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, block);\n            } else {\n                try {\n                    this.pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, block);\n                } finally {\n                    this.post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        // try jit before checking actualMethod, so we use jitted version immediately if it's ready\n        if (callCount >= 0) tryJit(context, this);\n\n        DynamicMethod jittedMethod = actualMethod;\n        if (jittedMethod != null) {\n            return jittedMethod.call(context, self, clazz, name, arg0, arg1, block);\n        }\n\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, block);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                               IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2,  Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, block);\n            } else {\n                try {\n                    this.pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, block);\n                } finally {\n                    this.post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (IRRuntimeHelpers.isDebug()) doDebug();\n\n        // try jit before checking actualMethod, so we use jitted version immediately if it's ready\n        if (callCount >= 0) tryJit(context, this);\n\n        DynamicMethod jittedMethod = actualMethod;\n        if (jittedMethod != null) {\n            return jittedMethod.call(context, self, clazz, name, arg0, arg1, arg2, block);\n        }\n\n        return INTERPRET_METHOD(context, ensureInstrsReady(), clazz, self, name, arg0, arg1, arg2, block);\n    }\n\n    private IRubyObject INTERPRET_METHOD(ThreadContext context, InterpreterContext ic, RubyModule implClass,\n                                               IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        try {\n            ThreadContext.pushBacktrace(context, name, ic.getFileName(), context.getLine());\n\n            if (ic.hasExplicitCallProtocol()) {\n                return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, arg3, block);\n            } else {\n                try {\n                    this.pre(ic, context, self, name, block, implClass);\n                    return ic.getEngine().interpret(context, null, self, ic, implClass, name, arg1, arg2, arg3, block);\n                } finally {\n                    this.post(ic, context);\n                }\n            }\n        } finally {\n            ThreadContext.popBacktrace(context);\n        }\n\n    }\n\n    private void doDebug() {\n        // FIXME: This is printing out IRScope CFG but JIT may be active and it might not reflect\n        // currently executing.  Move into JIT and into interp since they will be getting CFG from\n        // different sources\n        // FIXME: This is only printing out CFG once.  If we keep applying more passes then we\n        // will want to print out after those new passes.\n        ensureInstrsReady();\n        LOG.info(\"Executing '\" + method.getId() + \"'\");\n        if (!displayedCFG) {\n            LOG.info(method.debugOutput());\n            displayedCFG = true;\n        }\n    }\n\n    @Override\n    public void completeBuild(DynamicMethod newMethod) {\n        setCallCount(-1);\n        newMethod.serialNumber = this.serialNumber;\n        actualMethod = newMethod;\n        getImplementationClass().invalidateCacheDescendants();\n    }\n\n    @Override\n    public DynamicMethod dup() {\n        MixedModeIRMethod x = (MixedModeIRMethod) super.dup();\n        x.callCount = callCount;\n        x.actualMethod = actualMethod;\n\n        return x;\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BNilInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BFalseInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BFalseInstr extends OneOperandBranchInstr implements FixedArityInstr {\n    public BFalseInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_FALSE, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BFalseInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BFalseInstr decode(IRReaderDecoder d) {\n        return new BFalseInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BFalseInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return !((IRubyObject)value1).isTrue() ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            }
        ],
        "SLOC": "32",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BNilInstr extends OneOperandBranchInstr  implements FixedArityInstr {\n    public BNilInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_NIL, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BNilInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BNilInstr decode(IRReaderDecoder d) {\n        return new BNilInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BNilInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return value1 == context.nil ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BTrueInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BNilInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BNilInstr extends OneOperandBranchInstr  implements FixedArityInstr {\n    public BNilInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_NIL, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BNilInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BNilInstr decode(IRReaderDecoder d) {\n        return new BNilInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BNilInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return value1 == context.nil ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BFalseInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BFalseInstr extends OneOperandBranchInstr implements FixedArityInstr {\n    public BFalseInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_FALSE, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BFalseInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BFalseInstr decode(IRReaderDecoder d) {\n        return new BFalseInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BFalseInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return !((IRubyObject)value1).isTrue() ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            }
        ],
        "SLOC": "32",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BTrueInstr extends OneOperandBranchInstr implements FixedArityInstr {\n    public BTrueInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_TRUE, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BTrueInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BTrueInstr decode(IRReaderDecoder d) {\n        return new BTrueInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BTrueInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return ((IRubyObject)value1).isTrue() ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BUndefInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BNilInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BNilInstr extends OneOperandBranchInstr  implements FixedArityInstr {\n    public BNilInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_NIL, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BNilInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BNilInstr decode(IRReaderDecoder d) {\n        return new BNilInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BNilInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return value1 == context.nil ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BTrueInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BTrueInstr extends OneOperandBranchInstr implements FixedArityInstr {\n    public BTrueInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_TRUE, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BTrueInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BTrueInstr decode(IRReaderDecoder d) {\n        return new BTrueInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BTrueInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return ((IRubyObject)value1).isTrue() ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BFalseInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BFalseInstr extends OneOperandBranchInstr implements FixedArityInstr {\n    public BFalseInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_FALSE, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BFalseInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BFalseInstr decode(IRReaderDecoder d) {\n        return new BFalseInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BFalseInstr(this);\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return !((IRubyObject)value1).isTrue() ? getJumpTarget().getTargetPC() : ipc;\n    }\n}\n"
            }
        ],
        "SLOC": "33",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.UndefinedValue;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class BUndefInstr extends OneOperandBranchInstr  implements FixedArityInstr {\n    public BUndefInstr(Label jmpTarget, Operand v) {\n        super(Operation.B_UNDEF, jmpTarget, v);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BUndefInstr(ii.getRenamedLabel(getJumpTarget()), getArg1().cloneForInlining(ii));\n    }\n\n    public static BUndefInstr decode(IRReaderDecoder d) {\n        return new BUndefInstr(d.decodeLabel(), d.decodeOperand());\n    }\n\n    @Override\n    public int interpretAndGetNewIPC(ThreadContext context, DynamicScope currDynScope, StaticScope currScope, IRubyObject self, Object[] temp, int ipc) {\n        Object value1 = getArg1().retrieve(context, self, currScope, currDynScope, temp);\n        return value1 == UndefinedValue.UNDEFINED ? getJumpTarget().getTargetPC() : ipc;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BUndefInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BuildSplatInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BlockGivenInstr.java",
                "SLOC": "47",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n/**\n * Represents a defined?(yield) check, which works like a call to block_given? without\n * requiring special access to the caller's frame.\n */\npublic class BlockGivenInstr extends OneOperandResultBaseInstr implements FixedArityInstr {\n    public BlockGivenInstr(Variable result, Operand block) {\n        super(Operation.BLOCK_GIVEN, result, block);\n\n        assert result != null: \"BlockGivenInstr result is null\";\n    }\n\n    public Operand getBlockArg() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BlockGivenInstr(ii.getRenamedVariable(result), getBlockArg().cloneForInlining(ii));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getBlockArg());\n    }\n\n    public static BlockGivenInstr decode(IRReaderDecoder d) {\n        return new BlockGivenInstr(d.decodeVariable(), d.decodeOperand());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        Object blk = getBlockArg().retrieve(context, self, currScope, currDynScope, temp);\n\n        return IRRuntimeHelpers.isBlockGiven(context, blk);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BlockGivenInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "50",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n// Represents a splat value in Ruby code: *array\npublic class BuildSplatInstr extends OneOperandResultBaseInstr {\n    // Should we dup the resulting splat or not?\n    private final boolean dup;\n\n    public BuildSplatInstr(Variable result, Operand array, boolean dup) {\n        super(Operation.BUILD_SPLAT, result, array);\n\n        this.dup = dup;\n    }\n\n    public boolean getDup() {\n        return dup;\n    }\n\n    public Operand getArray() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BuildSplatInstr(ii.getRenamedVariable(result), getArray().cloneForInlining(ii), getDup());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        return IRRuntimeHelpers.splatArray(context,\n                (IRubyObject) getArray().retrieve(context, self, currScope, currDynScope, temp), getDup());\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getArray());\n        e.encode(getDup());\n    }\n\n    public static BuildSplatInstr decode(IRReaderDecoder d) {\n        return new BuildSplatInstr(d.decodeVariable(), d.decodeOperand(), d.decodeBoolean());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BuildSplatInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/InstanceSuperInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ClassSuperInstr.java",
                "SLOC": "79",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRFlags;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.*;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.EnumSet;\n\npublic class ClassSuperInstr extends CallInstr {\n    // clone constructor\n    protected ClassSuperInstr(IRScope scope, Variable result, Operand receiver, RubySymbol name, Operand[] args,\n                              Operand closure, boolean potentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.CLASS_SUPER, CallType.SUPER, result, name, receiver, args, closure, potentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public ClassSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args, Operand closure,\n                           boolean isPotentiallyRefined) {\n        super(scope, Operation.CLASS_SUPER, CallType.SUPER, result, name, definingModule, args, closure, isPotentiallyRefined);\n    }\n\n    public Operand getDefiningModule() {\n        return getReceiver();\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        super.computeScopeFlags(scope, flags);\n        flags.add(IRFlags.REQUIRES_CLASS); // for current class and method name\n        flags.add(IRFlags.REQUIRES_METHODNAME); // for current class and method name\n        return true;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ClassSuperInstr(ii.getScope(), ii.getRenamedVariable(getResult()), getDefiningModule().cloneForInlining(ii),\n                name, cloneCallArgs(ii), getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static ClassSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super\");\n        int callTypeOrdinal = d.decodeInt();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, calltype(ord):  \"+ callTypeOrdinal);\n        RubySymbol name = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, methaddr:  \"+ name);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n\n        return new ClassSuperInstr(d.getCurrentScope(), d.decodeVariable(), receiver, name, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    /*\n    // We cannot convert this into a NoCallResultInstr\n    @Override\n    public Instr discardResult() {\n        return this;\n    }\n    */\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        return IRRuntimeHelpers.unresolvedSuper(context, self, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ClassSuperInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "78",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubyModule;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class InstanceSuperInstr extends CallInstr {\n    // clone constructor\n    protected InstanceSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args,\n                                 Operand closure, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.INSTANCE_SUPER, CallType.SUPER, result, name, definingModule, args, closure,\n                isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public InstanceSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args,\n                              Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.INSTANCE_SUPER, CallType.SUPER, result, name, definingModule, args, closure, isPotentiallyRefined);\n    }\n\n    public Operand getDefiningModule() {\n        return getReceiver();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new InstanceSuperInstr(ii.getScope(), ii.getRenamedVariable(getResult()),\n                getDefiningModule().cloneForInlining(ii), getName(), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static InstanceSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super\");\n        int callTypeOrdinal = d.decodeInt();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, calltype(ord):  \"+ callTypeOrdinal);\n        RubySymbol name = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, methaddr:  \"+ name);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n\n        return new InstanceSuperInstr(d.getCurrentScope(), d.decodeVariable(), receiver, name, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    /*\n    // We cannot convert this into a NoCallResultInstr\n    @Override\n    public Instr discardResult() {\n        return this;\n    }\n    */\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        RubyModule definingModule = ((RubyModule) getDefiningModule().retrieve(context, self, currScope, currDynScope, temp));\n\n        return IRRuntimeHelpers.instanceSuper(context, self, getId(), definingModule, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.InstanceSuperInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/JumpInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ExceptionRegionStartMarkerInstr.java",
                "SLOC": "31",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class ExceptionRegionStartMarkerInstr extends OneOperandInstr implements FixedArityInstr {\n    public ExceptionRegionStartMarkerInstr(Label firstRescueBlockLabel) {\n        super(Operation.EXC_REGION_START, firstRescueBlockLabel);\n    }\n\n    public Label getFirstRescueBlockLabel() {\n        return (Label) getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ExceptionRegionStartMarkerInstr(ii.getRenamedLabel(getFirstRescueBlockLabel()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getFirstRescueBlockLabel());\n    }\n\n    public static ExceptionRegionStartMarkerInstr decode(IRReaderDecoder d) {\n        return new ExceptionRegionStartMarkerInstr(d.decodeLabel());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ExceptionRegionStartMarkerInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "34",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class JumpInstr extends OneOperandInstr implements FixedArityInstr, JumpTargetInstr {\n    public JumpInstr(Label target) {\n        super(Operation.JUMP, target);\n    }\n\n    public Label getJumpTarget() {\n        return (Label) getOperand1();\n    }\n\n    public void setJumpTarget(Label target) {\n        setOperand1(target);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new JumpInstr(ii.getRenamedLabel(getJumpTarget()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getJumpTarget());\n    }\n\n    public static JumpInstr decode(IRReaderDecoder d) {\n        return new JumpInstr(d.decodeLabel());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.JumpInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/LabelInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ExceptionRegionStartMarkerInstr.java",
                "SLOC": "31",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class ExceptionRegionStartMarkerInstr extends OneOperandInstr implements FixedArityInstr {\n    public ExceptionRegionStartMarkerInstr(Label firstRescueBlockLabel) {\n        super(Operation.EXC_REGION_START, firstRescueBlockLabel);\n    }\n\n    public Label getFirstRescueBlockLabel() {\n        return (Label) getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ExceptionRegionStartMarkerInstr(ii.getRenamedLabel(getFirstRescueBlockLabel()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getFirstRescueBlockLabel());\n    }\n\n    public static ExceptionRegionStartMarkerInstr decode(IRReaderDecoder d) {\n        return new ExceptionRegionStartMarkerInstr(d.decodeLabel());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ExceptionRegionStartMarkerInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/JumpInstr.java",
                "SLOC": "34",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class JumpInstr extends OneOperandInstr implements FixedArityInstr, JumpTargetInstr {\n    public JumpInstr(Label target) {\n        super(Operation.JUMP, target);\n    }\n\n    public Label getJumpTarget() {\n        return (Label) getOperand1();\n    }\n\n    public void setJumpTarget(Label target) {\n        setOperand1(target);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new JumpInstr(ii.getRenamedLabel(getJumpTarget()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getJumpTarget());\n    }\n\n    public static JumpInstr decode(IRReaderDecoder d) {\n        return new JumpInstr(d.decodeLabel());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.JumpInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "31",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Label;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class LabelInstr extends OneOperandInstr implements FixedArityInstr {\n    public LabelInstr(Label label) {\n        super(Operation.LABEL, label);\n    }\n\n    public Label getLabel() {\n        return (Label) getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new LabelInstr(ii.getRenamedLabel(getLabel()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getLabel());\n    }\n\n    public static LabelInstr decode(IRReaderDecoder d) {\n        return new LabelInstr(d.decodeLabel());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.LabelInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/LexicalSearchConstInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/InheritanceSearchConstInstr.java",
                "SLOC": "84",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyModule;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.*;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.opto.ConstantCache;\nimport org.jruby.runtime.opto.Invalidator;\n\n// The runtime method call that GET_CONST is translated to in this case will call\n// a get_constant method on the scope meta-object which does the lookup of the constant table\n// on the meta-object.  In the case of method & closures, the runtime method will delegate\n// this call to the parent scope.\n\npublic class InheritanceSearchConstInstr extends OneOperandResultBaseInstr implements FixedArityInstr {\n    private RubySymbol constName;\n\n    // Constant caching\n    private volatile transient ConstantCache cache;\n\n    public InheritanceSearchConstInstr(Variable result, Operand currentModule, RubySymbol constName) {\n        super(Operation.INHERITANCE_SEARCH_CONST, result, currentModule);\n\n        assert result != null: \"InheritanceSearchConstInstr result is null\";\n\n        this.constName = constName;\n    }\n\n    public Operand getCurrentModule() {\n        return getOperand1();\n    }\n\n    public String getId() {\n        return constName.idString();\n    }\n\n    public RubySymbol getName() {\n        return constName;\n    }\n\n    @Deprecated\n    public boolean isNoPrivateConsts() {\n        return false;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new InheritanceSearchConstInstr(ii.getRenamedVariable(result), getCurrentModule().cloneForInlining(ii), getName());\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"name: \" + getName() };\n    }\n\n    private Object cache(Ruby runtime, RubyModule module) {\n        String id = getId();\n        Object constant = module.getConstantNoConstMissingSkipAutoload(id);\n        if (constant == null) {\n            constant = UndefinedValue.UNDEFINED;\n        } else {\n            // recache\n            Invalidator invalidator = runtime.getConstantInvalidator(id);\n            cache = new ConstantCache((IRubyObject)constant, invalidator.getData(), invalidator, module.hashCode());\n        }\n        return constant;\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getCurrentModule());\n        e.encode(getName());\n    }\n\n    public static InheritanceSearchConstInstr decode(IRReaderDecoder d) {\n        return new InheritanceSearchConstInstr(d.decodeVariable(), d.decodeOperand(), d.decodeSymbol());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        Object cmVal = getCurrentModule().retrieve(context, self, currScope, currDynScope, temp);\n\n        if (!(cmVal instanceof RubyModule)) throw context.runtime.newTypeError(cmVal + \" is not a type/class\");\n\n        RubyModule module = (RubyModule) cmVal;\n        ConstantCache cache = this.cache;\n\n        return !ConstantCache.isCachedFrom(module, cache) ? cache(context.runtime, module) : cache.value;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.InheritanceSearchConstInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "79",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.UndefinedValue;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.opto.ConstantCache;\nimport org.jruby.runtime.opto.Invalidator;\n\n// The runtime method call that GET_CONST is translated to in this case will call\n// a get_constant method on the scope meta-object which does the lookup of the constant table\n// on the meta-object.  In the case of method & closures, the runtime method will delegate\n// this call to the parent scope.\n\npublic class LexicalSearchConstInstr extends OneOperandResultBaseInstr implements FixedArityInstr {\n    private RubySymbol constantName;\n\n    // Constant caching\n    private volatile transient ConstantCache cache;\n\n    public LexicalSearchConstInstr(Variable result, Operand definingScope, RubySymbol constantName) {\n        super(Operation.LEXICAL_SEARCH_CONST, result, definingScope);\n\n        assert result != null: \"LexicalSearchConstInstr result is null\";\n\n        this.constantName = constantName;\n    }\n\n    public Operand getDefiningScope() {\n        return getOperand1();\n    }\n\n    public String getId() {\n        return constantName.idString();\n    }\n\n    public RubySymbol getName() {\n        return constantName;\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"name: \" + constantName};\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new LexicalSearchConstInstr(ii.getRenamedVariable(result), getDefiningScope().cloneForInlining(ii), constantName);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getDefiningScope());\n        e.encode(getName());\n    }\n\n    public static LexicalSearchConstInstr decode(IRReaderDecoder d) {\n        return new LexicalSearchConstInstr(d.decodeVariable(), d.decodeOperand(), d.decodeSymbol());\n    }\n\n    private Object cache(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        StaticScope staticScope = (StaticScope) getDefiningScope().retrieve(context, self, currScope, currDynScope, temp);\n        String id = getId();\n\n        IRubyObject constant = staticScope.getConstantDefined(id);\n\n        if (constant == null) {\n            constant = UndefinedValue.UNDEFINED;\n        } else {\n            // recache\n            Invalidator invalidator = context.runtime.getConstantInvalidator(id);\n            cache = new ConstantCache(constant, invalidator.getData(), invalidator);\n        }\n\n        return constant;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        ConstantCache cache = this.cache; // Store to temp so it does null out on us mid-stream\n        if (!ConstantCache.isCached(cache)) return cache(context, currScope, currDynScope, self, temp);\n\n        return cache.value;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.LexicalSearchConstInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/NOperandResultBaseInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/NOperandInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\n\n/**\n * For Instrs with an arbitrary number of Operands.\n */\npublic abstract class NOperandInstr extends Instr {\n    protected transient Operand[] operands;\n\n    public NOperandInstr(Operation operation, Operand[] operands) {\n        super(operation);\n\n        this.operands = operands;\n    }\n\n    public Operand[] getOperands() {\n        return operands;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        if (i < 0 || i >= operands.length) {\n            throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n\n        operands[i] = operand;\n    }\n\n}\n"
            }
        ],
        "SLOC": "23",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\n\n/**\n * Created by enebo on 7/28/15.\n */\npublic abstract class NOperandResultBaseInstr extends ResultBaseInstr {\n    private transient Operand[] operands;\n\n    public NOperandResultBaseInstr(Operation operation, Variable result, Operand[] operands) {\n        super(operation, result);\n\n        this.operands = operands;\n    }\n\n    public Operand[] getOperands() {\n        return operands;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        if (i < 0 || i >= operands.length) {\n            throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n\n        operands[i] = operand;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/NonlocalReturnInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/BreakInstr.java",
                "SLOC": "96",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRFlags;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.InlineCloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\nimport java.util.EnumSet;\n\n// NOTE: breaks that jump out of while/until loops would have\n// been transformed by the IR building into an ordinary jump.\n//\n// A break instruction is not just any old instruction.\n// Like a return instruction, it exits a scope and returns a value\n//\n// Ex: (1..5).collect { |n| break if n > 3; n } returns nil\n//\n// All break instructions like returns have an associated return value\n// In the absence of an explicit value to return, nil is returned\n//\n// Ex: (1..5).collect { |n| break \"Hurrah\" if n > 3; n } returns \"Hurrah\"\n//\n// But, whereas a return exits the innermost method it is in,\n// a break only exits out of the innermost non-method scope it is in.\n// So, an exposed/naked break inside a method throws an exception!\n//\n// def foo(n); break if n > 5; end; foo(100) will throw an exception\n//\npublic class BreakInstr extends OneOperandInstr implements FixedArityInstr {\n    private final String scopeId; // Primarily a debugging aid\n\n    public BreakInstr(Operand returnValue, String scopeId) {\n        super(Operation.BREAK, returnValue);\n        this.scopeId = scopeId;\n    }\n    public Operand getReturnValue() {\n        return getOperand1();\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        scope.setHasBreakInstructions();\n        flags.add(IRFlags.REQUIRES_DYNSCOPE);\n        return true;\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] {\"scope_name: \" + scopeId};\n    }\n\n    @Override\n    public Instr clone(CloneInfo info) {\n        if (info instanceof SimpleCloneInfo) return new BreakInstr(getReturnValue().cloneForInlining(info), scopeId);\n\n        InlineCloneInfo ii = (InlineCloneInfo) info;\n\n        if (ii.isClosure()) {\n            // SSS FIXME: This is buggy!\n            //\n            // If scopeIdToReturnTo is a closure, it could have\n            // been cloned as well!! This is only an issue if we\n            // inline in closures. But, if we always inline in methods,\n            // this will continue to work.\n            //\n            // Hmm ... we need to figure out the required inlining info here.\n            //\n            // if (ii.getHostScope().getScopeId() == scopeIdToReturnTo) {\n            //\n            if (false) {\n                // If the break got inlined into the scope we had to break to, replace the break\n                // with a COPY of the break-value into the call's result var.\n                // Ex: v = foo { ..; break n; ..}.  So, \"break n\" is replaced with \"v = n\"\n                // The CFG for the closure will be such that after break, control goes to the\n                // scope exit block.  So, we know that after the copy, we'll continue with the\n                // instruction after the call.\n                Variable v = ii.getCallResultVariable();\n                return (v == null) ? null : new CopyInstr(v, getReturnValue().cloneForInlining(ii));\n            }\n\n            return new BreakInstr(getReturnValue().cloneForInlining(ii), scopeId);\n        } else {\n            throw new UnsupportedOperationException(\"Break instructions shouldn't show up outside closures.\");\n        }\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getReturnValue());\n        e.encode(scopeId);\n    }\n\n    public static BreakInstr decode(IRReaderDecoder d) {\n        return new BreakInstr(d.decodeOperand(), d.decodeString());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BreakInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "59",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.*;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.InlineCloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\nimport java.util.EnumSet;\n\npublic class NonlocalReturnInstr extends ReturnBase implements FixedArityInstr {\n    public final String methodId; // Primarily a debugging aid\n\n    public NonlocalReturnInstr(Operand returnValue, String methodId) {\n        super(Operation.NONLOCAL_RETURN, returnValue);\n        this.methodId = methodId;\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"name: \" + methodId };\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        scope.setHasNonLocalReturns();\n        return true;\n    }\n\n    @Override\n    public Instr clone(CloneInfo info) {\n        if (info instanceof SimpleCloneInfo) return new NonlocalReturnInstr(getReturnValue().cloneForInlining(info), methodId);\n\n        InlineCloneInfo ii = (InlineCloneInfo) info;\n        if (ii.isClosure()) {\n            if (ii.getHostScope() instanceof IRMethod) {\n                // Lexically contained non-local returns can return directly if the live in the method they are inlining to.\n                if (((InlineCloneInfo) info).getScopeBeingInlined().isScopeContainedBy(ii.getHostScope())) {\n                    return new ReturnInstr(getReturnValue().cloneForInlining(ii));\n                }\n\n                // Treat like inlining of a regular method-return (note: a jump is added to exit so this copy\n                // actually ends up being the methods return value).\n                Variable v = ii.getCallResultVariable();\n                return v == null ? null : new CopyInstr(v, getReturnValue().cloneForInlining(ii));\n            }\n\n            return new NonlocalReturnInstr(getReturnValue().cloneForInlining(ii), methodId);\n        } else {\n            throw new UnsupportedOperationException(\"Nonlocal returns shouldn't show up outside closures.\");\n        }\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getReturnValue());\n        e.encode(methodId);\n    }\n\n    public static NonlocalReturnInstr decode(IRReaderDecoder d) {\n        return new NonlocalReturnInstr(d.decodeOperand(), d.decodeString());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.NonlocalReturnInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/OneOperandResultBaseInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/OneOperandInstr.java",
                "SLOC": "31",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\n\n/**\n * Created by enebo on 7/27/15.\n */\npublic abstract class OneOperandInstr extends Instr {\n    private transient Operand operand1;\n\n    public OneOperandInstr(Operation operation, Operand operand1) {\n        super(operation);\n\n        this.operand1 = operand1;\n    }\n\n    public Operand[] getOperands() {\n        return new Operand[] { operand1 };\n    }\n\n    public Operand getOperand1() {\n        return operand1;\n    }\n\n    public void setOperand1(Operand operand1) {\n        this.operand1 = operand1;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        switch (i) {\n            case 0:\n                operand1 = operand;\n                break;\n            default:\n                throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "32",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\n\n/**\n * Result Instr with one operand.\n */\npublic abstract class OneOperandResultBaseInstr extends ResultBaseInstr {\n    private transient Operand operand1;\n\n    public OneOperandResultBaseInstr(Operation operation, Variable result, Operand operand1) {\n        super(operation, result);\n\n        this.operand1 = operand1;\n    }\n\n    public Operand[] getOperands() {\n        return new Operand[] { operand1 };\n    }\n\n    public Operand getOperand1() {\n        return operand1;\n    }\n\n    public void setOperand1(Operand operand1) {\n        this.operand1 = operand1;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        switch (i) {\n            case 0:\n                operand1 = operand;\n                break;\n            default:\n                throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareFixedBlockArgsInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopMethodFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopMethodFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopMethodFrameInstr() {\n        super(Operation.POP_METHOD_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopMethodFrameInstr decode(IRReaderDecoder d) {\n        return new PopMethodFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopMethodFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareBlockArgsInstr extends NoOperandInstr implements FixedArityInstr {\n    public static final PrepareBlockArgsInstr INSTANCE = new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS);\n\n    protected PrepareBlockArgsInstr(Operation op) {\n        super(op);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS) : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "23",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareFixedBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareFixedBlockArgsInstr INSTANCE = new PrepareFixedBlockArgsInstr();\n\n    private PrepareFixedBlockArgsInstr() {\n        super(Operation.PREPARE_FIXED_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareFixedBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareFixedBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareFixedBlockArgsInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareBlockArgsInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "23",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareBlockArgsInstr extends NoOperandInstr implements FixedArityInstr {\n    public static final PrepareBlockArgsInstr INSTANCE = new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS);\n\n    protected PrepareBlockArgsInstr(Operation op) {\n        super(op);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS) : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareBlockArgsInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "22",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopMethodFrameInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "22",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopMethodFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopMethodFrameInstr() {\n        super(Operation.POP_METHOD_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopMethodFrameInstr decode(IRReaderDecoder d) {\n        return new PopMethodFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopMethodFrameInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareNoBlockArgsInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopMethodFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopMethodFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopMethodFrameInstr() {\n        super(Operation.POP_METHOD_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopMethodFrameInstr decode(IRReaderDecoder d) {\n        return new PopMethodFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopMethodFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareBlockArgsInstr extends NoOperandInstr implements FixedArityInstr {\n    public static final PrepareBlockArgsInstr INSTANCE = new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS);\n\n    protected PrepareBlockArgsInstr(Operation op) {\n        super(op);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS) : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareFixedBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareFixedBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareFixedBlockArgsInstr INSTANCE = new PrepareFixedBlockArgsInstr();\n\n    private PrepareFixedBlockArgsInstr() {\n        super(Operation.PREPARE_FIXED_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareFixedBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareFixedBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareFixedBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "23",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareNoBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareNoBlockArgsInstr INSTANCE = new PrepareNoBlockArgsInstr();\n\n    private PrepareNoBlockArgsInstr() {\n        super(Operation.PREPARE_NO_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareNoBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareNoBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareNoBlockArgsInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareSingleBlockArgInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopMethodFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopMethodFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopMethodFrameInstr() {\n        super(Operation.POP_METHOD_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopMethodFrameInstr decode(IRReaderDecoder d) {\n        return new PopMethodFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopMethodFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareBlockArgsInstr extends NoOperandInstr implements FixedArityInstr {\n    public static final PrepareBlockArgsInstr INSTANCE = new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS);\n\n    protected PrepareBlockArgsInstr(Operation op) {\n        super(op);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareBlockArgsInstr(Operation.PREPARE_BLOCK_ARGS) : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareFixedBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareFixedBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareFixedBlockArgsInstr INSTANCE = new PrepareFixedBlockArgsInstr();\n\n    private PrepareFixedBlockArgsInstr() {\n        super(Operation.PREPARE_FIXED_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareFixedBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareFixedBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareFixedBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareNoBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareNoBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareNoBlockArgsInstr INSTANCE = new PrepareNoBlockArgsInstr();\n\n    private PrepareNoBlockArgsInstr() {\n        super(Operation.PREPARE_NO_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareNoBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareNoBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareNoBlockArgsInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "23",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareSingleBlockArgInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareSingleBlockArgInstr INSTANCE = new PrepareSingleBlockArgInstr();\n\n    private PrepareSingleBlockArgInstr() {\n        super(Operation.PREPARE_SINGLE_BLOCK_ARG);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareSingleBlockArgInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareSingleBlockArgInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareSingleBlockArgInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PushBackrefFrameInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBindingInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBindingInstr() {\n        super(Operation.POP_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PopBindingInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBindingInstr decode(IRReaderDecoder d) {\n        return new PopBindingInstr();\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBindingInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBackrefFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopBackrefFrameInstr() {\n        super(Operation.POP_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PopBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBackrefFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopMethodFrameInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopMethodFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PopMethodFrameInstr() {\n        super(Operation.POP_METHOD_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PopMethodFrameInstr decode(IRReaderDecoder d) {\n        return new PopMethodFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopMethodFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareFixedBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareFixedBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareFixedBlockArgsInstr INSTANCE = new PrepareFixedBlockArgsInstr();\n\n    private PrepareFixedBlockArgsInstr() {\n        super(Operation.PREPARE_FIXED_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareFixedBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareFixedBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareFixedBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareNoBlockArgsInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareNoBlockArgsInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareNoBlockArgsInstr INSTANCE = new PrepareNoBlockArgsInstr();\n\n    private PrepareNoBlockArgsInstr() {\n        super(Operation.PREPARE_NO_BLOCK_ARGS);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareNoBlockArgsInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareNoBlockArgsInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareNoBlockArgsInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PrepareSingleBlockArgInstr.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PrepareSingleBlockArgInstr extends PrepareBlockArgsInstr  {\n    public static final PrepareSingleBlockArgInstr INSTANCE = new PrepareSingleBlockArgInstr();\n\n    private PrepareSingleBlockArgInstr() {\n        super(Operation.PREPARE_SINGLE_BLOCK_ARG);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? new PrepareSingleBlockArgInstr() : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    public static PrepareSingleBlockArgInstr decode(IRReaderDecoder d) {\n        return INSTANCE;\n    }\n    \n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PrepareSingleBlockArgInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "22",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PushBackrefFrameInstr extends NoOperandInstr implements FixedArityInstr {\n    public PushBackrefFrameInstr() {\n        super(Operation.PUSH_BACKREF_FRAME);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct?\n    }\n\n    public static PushBackrefFrameInstr decode(IRReaderDecoder d) {\n        return new PushBackrefFrameInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PushBackrefFrameInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PushMethodBindingInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PushBlockBindingInstr.java",
                "SLOC": "21",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class PushBlockBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PushBlockBindingInstr() {\n        super(Operation.PUSH_BLOCK_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return this; // FIXME: This has to be wrong if pop_binding is conditionally noop'ing on inline\n    }\n\n    public static PushBlockBindingInstr decode(IRReaderDecoder d) {\n        return new PushBlockBindingInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PushBlockBindingInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "21",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class PushMethodBindingInstr extends NoOperandInstr implements FixedArityInstr {\n    public PushMethodBindingInstr() {\n        super(Operation.PUSH_METHOD_BINDING);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return this; // FIXME: This has to be wrong if pop_binding is conditionally noop'ing on inline\n    }\n\n    public static PushMethodBindingInstr decode(IRReaderDecoder d) {\n        return new PushMethodBindingInstr();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PushMethodBindingInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PutConstInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PutClassVariableInstr.java",
                "SLOC": "43",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyModule;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.CurrentScope;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class PutClassVariableInstr extends PutInstr implements FixedArityInstr {\n    public PutClassVariableInstr(Operand scope, RubySymbol variableName, Operand value) {\n        super(Operation.PUT_CVAR, scope, variableName, value);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new PutClassVariableInstr(getTarget().cloneForInlining(ii), getName(), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        RubyModule module = (RubyModule) getTarget().retrieve(context, self, currScope, currDynScope, temp);\n        IRubyObject value = (IRubyObject) getValue().retrieve(context, self, currScope, currDynScope, temp);\n\n        assert module != null : \"MODULE should always be something\";\n\n        // SSS FIXME: What is this check again???\n        // Modules and classes set this constant as a side-effect\n        if (!(getValue() instanceof CurrentScope)) {\n            String id = getId();\n\n            IRRuntimeHelpers.putClassVariable(context, self, module, id, value);\n        }\n\n        return null;\n    }\n\n    public static PutClassVariableInstr decode(IRReaderDecoder d) {\n        return new PutClassVariableInstr(d.decodeOperand(), d.decodeSymbol(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PutClassVariableInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "38",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyModule;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class PutConstInstr extends PutInstr implements FixedArityInstr {\n    public PutConstInstr(Operand scopeOrObj, RubySymbol constantName, Operand val) {\n        super(Operation.PUT_CONST, scopeOrObj, constantName, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new PutConstInstr(getTarget().cloneForInlining(ii), getName(), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject value = (IRubyObject) getValue().retrieve(context, self, currScope, currDynScope, temp);\n        RubyModule module = (RubyModule) getTarget().retrieve(context, self, currScope, currDynScope, temp);\n\n        assert module != null : \"MODULE should always be something\";\n\n        String id = getId();\n\n        IRRuntimeHelpers.putConst(context, self, module, id, value);\n\n        return null;\n    }\n\n    public static PutConstInstr decode(IRReaderDecoder d) {\n        return new PutConstInstr(d.decodeOperand(), d.decodeSymbol(), d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PutConstInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/RaiseArgumentErrorInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/CheckArgsArrayArityInstr.java",
                "SLOC": "56",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyArray;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.Helpers;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class CheckArgsArrayArityInstr extends OneOperandInstr implements FixedArityInstr {\n    public final int required;\n    public final int opt;\n    public final boolean rest;\n\n    public CheckArgsArrayArityInstr(Operand argsArray, int required, int opt, boolean rest) {\n        super(Operation.CHECK_ARGS_ARRAY_ARITY, argsArray);\n\n        this.required = required;\n        this.opt = opt;\n        this.rest = rest;\n    }\n\n    public Operand getArgsArray() {\n        return getOperand1();\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] {\"req: \" + required, \"opt: \" + opt, \"*r: \" + rest};\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new CheckArgsArrayArityInstr(getArgsArray().cloneForInlining(ii), required, opt, rest);\n    }\n\n    public static CheckArgsArrayArityInstr decode(IRReaderDecoder d) {\n        return new CheckArgsArrayArityInstr(d.decodeOperand(), d.decodeInt(), d.decodeInt(), d.decodeBoolean());\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getArgsArray());\n        e.encode(required);\n        e.encode(opt);\n        e.encode(rest);\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        RubyArray args = (RubyArray) getArgsArray().retrieve(context, self, currScope, currDynScope, temp);\n        Helpers.irCheckArgsArrayArity(context, args, required, opt, rest);\n        return null;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.CheckArgsArrayArityInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "64",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Arity;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class RaiseArgumentErrorInstr extends NoOperandInstr implements FixedArityInstr {\n    private final int required;\n    private final int opt;\n    private final boolean rest;\n    private final int numArgs;\n\n    public RaiseArgumentErrorInstr(int required, int opt, boolean rest, int numArgs) {\n        super(Operation.RAISE_ARGUMENT_ERROR);\n\n        this.required = required;\n        this.opt = opt;\n        this.rest = rest;\n        this.numArgs = numArgs;\n    }\n\n    public int getNumArgs() {\n        return numArgs;\n    }\n\n    public int getOpt() {\n        return opt;\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"req: \" + required, \"o: \" + opt, \"*r: \" + rest};\n    }\n\n    public int getRequired() {\n        return required;\n    }\n\n    public boolean getRest() {\n        return rest;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new RaiseArgumentErrorInstr(required, opt, rest, numArgs);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getRequired());\n        e.encode(getOpt());\n        e.encode(getRest());\n        e.encode(getNumArgs());\n    }\n\n    public static RaiseArgumentErrorInstr decode(IRReaderDecoder d) {\n        return new RaiseArgumentErrorInstr(d.decodeInt(), d.decodeInt(), d.decodeBoolean(), d.decodeInt());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        Arity.raiseArgumentError(context.runtime, numArgs, required, required + opt);\n        return null;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.RaiseArgumentErrorInstr(this);\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ReceiveRubyExceptionInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ReceiveJRubyExceptionInstr.java",
                "SLOC": "22",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class ReceiveJRubyExceptionInstr extends ReceiveExceptionBase {\n    public ReceiveJRubyExceptionInstr(Variable result) {\n        super(Operation.RECV_JRUBY_EXC, result);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ReceiveJRubyExceptionInstr(ii.getRenamedVariable(result));\n    }\n\n    public static ReceiveJRubyExceptionInstr decode(IRReaderDecoder d) {\n        return new ReceiveJRubyExceptionInstr(d.decodeVariable());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ReceiveJRubyExceptionInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "22",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class ReceiveRubyExceptionInstr extends ReceiveExceptionBase {\n    public ReceiveRubyExceptionInstr(Variable result) {\n        super(Operation.RECV_RUBY_EXC, result);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ReceiveRubyExceptionInstr(ii.getRenamedVariable(result));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ReceiveRubyExceptionInstr(this);\n    }\n\n    public static ReceiveRubyExceptionInstr decode(IRReaderDecoder d) {\n        return new ReceiveRubyExceptionInstr(d.decodeVariable());\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/RestoreBindingVisibilityInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBlockFrameInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBlockFrameInstr extends OneOperandInstr implements FixedArityInstr {\n    public PopBlockFrameInstr(Operand frame) {\n        super(Operation.POP_BLOCK_FRAME, frame);\n    }\n\n    public Operand getFrame() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getFrame());\n    }\n\n    public static PopBlockFrameInstr decode(IRReaderDecoder d) {\n        return new PopBlockFrameInstr(d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBlockFrameInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "32",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class RestoreBindingVisibilityInstr extends OneOperandInstr implements FixedArityInstr {\n    public RestoreBindingVisibilityInstr(Operand viz) {\n        super(Operation.RESTORE_BINDING_VIZ, viz);\n    }\n\n    public Operand getVisibility() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct?\n    }\n\n    public static RestoreBindingVisibilityInstr decode(IRReaderDecoder d) {\n        return new RestoreBindingVisibilityInstr(d.decodeVariable());\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getVisibility());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.RestoreBindingVisibilityInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/StoreLocalVarInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/LoadLocalVarInstr.java",
                "SLOC": "71",
                "content": "package org.jruby.ir.instructions;\n\nimport java.util.Map;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Interp;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.*;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class LoadLocalVarInstr extends OneOperandResultBaseInstr implements FixedArityInstr {\n    private final IRScope scope;\n\n    public LoadLocalVarInstr(IRScope scope, TemporaryLocalVariable result, LocalVariable lvar) {\n        super(Operation.BINDING_LOAD, result, lvar);\n\n        assert result != null: \"LoadLocalVarInstr result is null\";\n\n        this.scope = scope;\n    }\n\n    /** This is the variable that is being loaded from the scope.  This variable doesn't participate in the\n     * computation itself.  We just use it as a proxy for its (a) name (b) offset (c) scope-depth.\n     */\n    public LocalVariable getLocalVar() {\n        return (LocalVariable) getOperand1();\n    }\n\n    public IRScope getScope() {\n        return scope;\n    }\n\n    /**\n     * getLocalVar is saved for location and should not be simplified so we still know its original\n     * depth/offset.\n     */\n    @Override\n    public void simplifyOperands(Map<Operand, Operand> valueMap, boolean force) {\n    }\n\n    // SSS FIXME: This feels dirty\n    public void decrementLVarScopeDepth() {\n        setOperand(0, getLocalVar().cloneForDepth(getLocalVar().getScopeDepth()-1));\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"scope: \" + scope.getId() };\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        // SSS FIXME: Do we need to rename lvar really?  It is just a name-proxy!\n        return new LoadLocalVarInstr(scope, (TemporaryLocalVariable)ii.getRenamedVariable(result),\n                (LocalVariable)ii.getRenamedVariable(getLocalVar()));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getScope());\n        e.encode(getLocalVar());\n    }\n\n    public static LoadLocalVarInstr decode(IRReaderDecoder d) {\n        TemporaryLocalVariable result = (TemporaryLocalVariable) d.decodeVariable();\n        return new LoadLocalVarInstr(d.decodeScope(), result, (LocalVariable) d.decodeVariable());\n    }\n\n    @Interp\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        return getLocalVar().retrieve(context, self, currScope, currDynScope, temp);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.LoadLocalVarInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "75",
        "content": "package org.jruby.ir.instructions;\n\nimport java.util.Map;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.LocalVariable;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class StoreLocalVarInstr extends TwoOperandInstr implements FixedArityInstr {\n    private final IRScope scope;\n\n    public StoreLocalVarInstr(IRScope scope, Operand value, LocalVariable lvar) {\n        super(Operation.BINDING_STORE, value, lvar);\n\n        this.scope = scope;\n    }\n\n\n    public Operand getValue() {\n        return getOperand1();\n    }\n\n    /** This is the variable that is being stored into in this scope.  This variable\n     * doesn't participate in the computation itself.  We just use it as a proxy for\n     * its (a) name (b) offset (c) scope-depth. */\n    public LocalVariable getLocalVar() {\n        return (LocalVariable) getOperand2();\n    }\n\n    public IRScope getScope() {\n        return scope;\n    }\n\n    @Override\n    public String[] toStringNonOperandArgs() {\n        return new String[] { \"scope_name: \" + scope.getId()};\n    }\n\n    // SSS FIXME: This feels dirty\n    public void decrementLVarScopeDepth() {\n        setOperand2(getLocalVar().cloneForDepth(getLocalVar().getScopeDepth()-1));\n    }\n\n    /**\n     * getLocalVar is saved for location and should not be simplified so we still know its original\n     * depth/offset.\n     */\n    @Override\n    public void simplifyOperands(Map<Operand, Operand> valueMap, boolean force) {\n        setOperand1(getValue().getSimplifiedOperand(valueMap, force));\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        // SSS FIXME: Do we need to rename lvar really?  It is just a name-proxy!\n        return new StoreLocalVarInstr(scope, getValue().cloneForInlining(ii),\n                (LocalVariable) getLocalVar().cloneForInlining(ii));\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getScope());\n        e.encode(getValue());\n        e.encode(getLocalVar());\n    }\n\n    public static StoreLocalVarInstr decode(IRReaderDecoder d) {\n        return new StoreLocalVarInstr(d.decodeScope(), d.decodeOperand(), (LocalVariable) d.decodeOperand());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        Object varValue = getValue().retrieve(context, self, currScope, currDynScope, temp);\n        currDynScope.setValue((IRubyObject)varValue, getLocalVar().getLocation(), getLocalVar().getScopeDepth());\n        return null;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.StoreLocalVarInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/TwoOperandResultBaseInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/TwoOperandInstr.java",
                "SLOC": "42",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\n\n/**\n * Instr for two operands.\n */\npublic abstract class TwoOperandInstr extends Instr {\n    private Operand operand1;\n    private Operand operand2;\n\n    public TwoOperandInstr(Operation operation, Operand operand1, Operand operand2) {\n        super(operation);\n\n        this.operand1 = operand1;\n        this.operand2 = operand2;\n    }\n\n    public Operand[] getOperands() {\n        return new Operand[] { operand1, operand2 };\n    }\n\n    public Operand getOperand1() {\n        return operand1;\n    }\n\n    public Operand getOperand2() {\n        return operand2;\n    }\n\n    public void setOperand1(Operand operand1) {\n        this.operand1 = operand1;\n    }\n\n    public void setOperand2(Operand operand2) {\n        this.operand2 = operand2;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        switch (i) {\n            case 0:\n                operand1 = operand;\n                break;\n            case 1:\n                operand2 = operand;\n                break;\n            default:\n                throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n    }\n\n}\n"
            }
        ],
        "SLOC": "43",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\n\n/**\n * Result Instr with two operands.\n */\npublic abstract class TwoOperandResultBaseInstr extends ResultBaseInstr {\n    private transient Operand operand1;\n    private transient Operand operand2;\n\n    public TwoOperandResultBaseInstr(Operation operation, Variable result, Operand operand1, Operand operand2) {\n        super(operation, result);\n\n        this.operand1 = operand1;\n        this.operand2 = operand2;\n    }\n\n    public Operand[] getOperands() {\n        return new Operand[] { operand1, operand2 };\n    }\n\n    public Operand getOperand1() {\n        return operand1;\n    }\n\n    public void setOperand1(Operand operand1) {\n        this.operand1 = operand1;\n    }\n\n    public Operand getOperand2() {\n        return operand2;\n    }\n\n    public void setOperand2(Operand operand2) {\n        this.operand2 = operand2;\n    }\n\n    public void setOperand(int i, Operand operand) {\n        switch (i) {\n            case 0:\n                operand1 = operand;\n                break;\n            case 1:\n                operand2 = operand;\n                break;\n            default:\n                throw new IllegalArgumentException(\"No such operand to set at index: \" + i);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/UpdateBlockExecutionStateInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/PopBlockFrameInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class PopBlockFrameInstr extends OneOperandInstr implements FixedArityInstr {\n    public PopBlockFrameInstr(Operand frame) {\n        super(Operation.POP_BLOCK_FRAME, frame);\n    }\n\n    public Operand getFrame() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getFrame());\n    }\n\n    public static PopBlockFrameInstr decode(IRReaderDecoder d) {\n        return new PopBlockFrameInstr(d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.PopBlockFrameInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/RestoreBindingVisibilityInstr.java",
                "SLOC": "32",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\npublic class RestoreBindingVisibilityInstr extends OneOperandInstr implements FixedArityInstr {\n    public RestoreBindingVisibilityInstr(Operand viz) {\n        super(Operation.RESTORE_BINDING_VIZ, viz);\n    }\n\n    public Operand getVisibility() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct?\n    }\n\n    public static RestoreBindingVisibilityInstr decode(IRReaderDecoder d) {\n        return new RestoreBindingVisibilityInstr(d.decodeVariable());\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getVisibility());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.RestoreBindingVisibilityInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "36",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\n/* Generic placeholder instruction for miscellaneous stuff that\n * needs to be done before a block's coded is executed. \n * Eventually, this should hopefully get folded away into other things. \n */\npublic class UpdateBlockExecutionStateInstr extends OneOperandInstr implements FixedArityInstr {\n    public UpdateBlockExecutionStateInstr(Operand self) {\n        super(Operation.UPDATE_BLOCK_STATE, self);\n    }\n\n    public Operand getSelf() {\n        return getOperand1();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return ii instanceof SimpleCloneInfo ? this : NopInstr.NOP;  // FIXME: Is this correct?\n    }\n\n    public static UpdateBlockExecutionStateInstr decode(IRReaderDecoder d) {\n        return new UpdateBlockExecutionStateInstr(d.decodeVariable());\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getSelf());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UpdateBlockExecutionStateInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ZSuperInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/ClassSuperInstr.java",
                "SLOC": "79",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRFlags;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.*;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.EnumSet;\n\npublic class ClassSuperInstr extends CallInstr {\n    // clone constructor\n    protected ClassSuperInstr(IRScope scope, Variable result, Operand receiver, RubySymbol name, Operand[] args,\n                              Operand closure, boolean potentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.CLASS_SUPER, CallType.SUPER, result, name, receiver, args, closure, potentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public ClassSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args, Operand closure,\n                           boolean isPotentiallyRefined) {\n        super(scope, Operation.CLASS_SUPER, CallType.SUPER, result, name, definingModule, args, closure, isPotentiallyRefined);\n    }\n\n    public Operand getDefiningModule() {\n        return getReceiver();\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        super.computeScopeFlags(scope, flags);\n        flags.add(IRFlags.REQUIRES_CLASS); // for current class and method name\n        flags.add(IRFlags.REQUIRES_METHODNAME); // for current class and method name\n        return true;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ClassSuperInstr(ii.getScope(), ii.getRenamedVariable(getResult()), getDefiningModule().cloneForInlining(ii),\n                name, cloneCallArgs(ii), getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static ClassSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super\");\n        int callTypeOrdinal = d.decodeInt();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, calltype(ord):  \"+ callTypeOrdinal);\n        RubySymbol name = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, methaddr:  \"+ name);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n\n        return new ClassSuperInstr(d.getCurrentScope(), d.decodeVariable(), receiver, name, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    /*\n    // We cannot convert this into a NoCallResultInstr\n    @Override\n    public Instr discardResult() {\n        return this;\n    }\n    */\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        return IRRuntimeHelpers.unresolvedSuper(context, self, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ClassSuperInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/InstanceSuperInstr.java",
                "SLOC": "78",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubyModule;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class InstanceSuperInstr extends CallInstr {\n    // clone constructor\n    protected InstanceSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args,\n                                 Operand closure, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.INSTANCE_SUPER, CallType.SUPER, result, name, definingModule, args, closure,\n                isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public InstanceSuperInstr(IRScope scope, Variable result, Operand definingModule, RubySymbol name, Operand[] args,\n                              Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.INSTANCE_SUPER, CallType.SUPER, result, name, definingModule, args, closure, isPotentiallyRefined);\n    }\n\n    public Operand getDefiningModule() {\n        return getReceiver();\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new InstanceSuperInstr(ii.getScope(), ii.getRenamedVariable(getResult()),\n                getDefiningModule().cloneForInlining(ii), getName(), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static InstanceSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super\");\n        int callTypeOrdinal = d.decodeInt();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, calltype(ord):  \"+ callTypeOrdinal);\n        RubySymbol name = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding super, methaddr:  \"+ name);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n\n        return new InstanceSuperInstr(d.getCurrentScope(), d.decodeVariable(), receiver, name, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    /*\n    // We cannot convert this into a NoCallResultInstr\n    @Override\n    public Instr discardResult() {\n        return this;\n    }\n    */\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        RubyModule definingModule = ((RubyModule) getDefiningModule().retrieve(context, self, currScope, currDynScope, temp));\n\n        return IRRuntimeHelpers.instanceSuper(context, self, getId(), definingModule, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.InstanceSuperInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/UnresolvedSuperInstr.java",
                "SLOC": "95",
                "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRFlags;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ByteList;\n\nimport java.util.EnumSet;\n\n// SSS FIXME: receiver is never used -- being passed in only to meet requirements of CallInstr\n\npublic class UnresolvedSuperInstr extends CallInstr {\n    private static final ByteList UNKNOWN_SUPER_TARGET =\n            new ByteList(new byte[] {'-', 'u', 'n', 'k', 'n', 'o', 'w', 'n', '-', 's', 'u', 'p', 'e', 'r', '-', 't', 'a', 'r', 'g', 'e', 't', '-'});\n\n    // clone constructor\n    public UnresolvedSuperInstr(IRScope scope, Operation op, Variable result, Operand receiver, Operand[] args,\n                                Operand closure, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, op, CallType.SUPER, result, scope.getManager().getRuntime().newSymbol(UNKNOWN_SUPER_TARGET),\n                receiver, args, closure, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public UnresolvedSuperInstr(IRScope scope, Operation op, Variable result, Operand receiver, Operand[] args, Operand closure,\n                                boolean isPotentiallyRefined) {\n        super(scope, op, CallType.SUPER, result, scope.getManager().getRuntime().newSymbol(UNKNOWN_SUPER_TARGET),\n                receiver, args, closure, isPotentiallyRefined);\n    }\n\n    // specific instr constructor\n    public UnresolvedSuperInstr(IRScope scope, Variable result, Operand receiver, Operand[] args, Operand closure,\n                                boolean isPotentiallyRefined) {\n        this(scope, Operation.UNRESOLVED_SUPER, result, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        super.computeScopeFlags(scope, flags);\n        flags.add(IRFlags.REQUIRES_CLASS); // for current class and method name\n        flags.add(IRFlags.REQUIRES_METHODNAME); // for current class and method name\n        return true;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnresolvedSuperInstr(ii.getScope(), Operation.UNRESOLVED_SUPER, ii.getRenamedVariable(getResult()),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static UnresolvedSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call\");\n        int callTypeOrdinal = d.decodeInt();\n        CallType callType = CallType.fromOrdinal(callTypeOrdinal);\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call, calltype(ord):  \" + callType);\n        RubySymbol methAddr = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call, methaddr:  \" + methAddr);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG)\n            System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"before result\");\n\n        return new UnresolvedSuperInstr(d.getCurrentScope(), d.decodeVariable(), receiver, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    /*\n    // We cannot convert this into a NoCallResultInstr\n    @Override\n    public Instr discardResult() {\n        return this;\n    }\n    */\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        return IRRuntimeHelpers.unresolvedSuper(context, self, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnresolvedSuperInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "74",
        "content": "package org.jruby.ir.instructions;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRFlags;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.EnumSet;\n\npublic class ZSuperInstr extends UnresolvedSuperInstr {\n    public ZSuperInstr(IRScope scope, Variable result, Operand receiver, Operand[] args, Operand closure,\n                       boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.ZSUPER, result, receiver, args, closure, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    public ZSuperInstr(IRScope scope, Variable result, Operand receiver, Operand[] args, Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.ZSUPER, result, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public boolean computeScopeFlags(IRScope scope, EnumSet<IRFlags> flags) {\n        super.computeScopeFlags(scope, flags);\n        scope.setUsesZSuper();\n        return true;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new ZSuperInstr(ii.getScope(), ii.getRenamedVariable(getResult()), getReceiver().cloneForInlining(ii),\n                cloneCallArgs(ii), getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public static ZSuperInstr decode(IRReaderDecoder d) {\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call\");\n        int callTypeOrdinal = d.decodeInt();\n        CallType callType = CallType.fromOrdinal(callTypeOrdinal);\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call, calltype(ord):  \" + callType);\n        RubySymbol methAddr = d.decodeSymbol();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call, methaddr:  \" + methAddr);\n        Operand receiver = d.decodeOperand();\n        int argsCount = d.decodeInt();\n        boolean hasClosureArg = argsCount < 0;\n        int argsLength = hasClosureArg ? (-1 * (argsCount + 1)) : argsCount;\n        if (RubyInstanceConfig.IR_READING_DEBUG)\n            System.out.println(\"ARGS: \" + argsLength + \", CLOSURE: \" + hasClosureArg);\n        Operand[] args = new Operand[argsLength];\n\n        for (int i = 0; i < argsLength; i++) {\n            args[i] = d.decodeOperand();\n        }\n\n        Operand closure = hasClosureArg ? d.decodeOperand() : null;\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"before result\");\n        Variable result = d.decodeVariable();\n        if (RubyInstanceConfig.IR_READING_DEBUG) System.out.println(\"decoding call, result:  \" + result);\n\n        return new ZSuperInstr(d.getCurrentScope(), result, receiver, args, closure, d.getCurrentScope().maybeUsingRefinements());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope currDynScope, IRubyObject self, Object[] temp) {\n        IRubyObject[] args = prepareArguments(context, self, currScope, currDynScope, temp);\n        Block block = prepareBlock(context, self, currScope, currDynScope, temp);\n        return IRRuntimeHelpers.zSuper(context, self, args, block);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ZSuperInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFixnumInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxBooleanInstr extends BoxInstr {\n    public BoxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.BOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxBooleanInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "20",
        "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFixnumInstr extends BoxInstr {\n    public BoxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFixnumInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFloatInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxBooleanInstr extends BoxInstr {\n    public BoxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.BOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxBooleanInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFixnumInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFixnumInstr extends BoxInstr {\n    public BoxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFixnumInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "20",
        "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFloatInstr extends BoxInstr {\n    public BoxFloatInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FLOAT, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFloatInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFloatInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxBooleanInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxBooleanInstr extends BoxInstr {\n    public BoxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.BOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxBooleanInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFloatInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFloatInstr extends BoxInstr {\n    public BoxFloatInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FLOAT, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFloatInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFloatInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFixnumInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFixnumInstr extends BoxInstr {\n    public BoxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFixnumInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "20",
        "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxBooleanInstr extends UnboxInstr {\n    public UnboxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxBooleanInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxFixnumInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxBooleanInstr extends BoxInstr {\n    public BoxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.BOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxBooleanInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFloatInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFloatInstr extends BoxInstr {\n    public BoxFloatInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FLOAT, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFloatInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFloatInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFixnumInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFixnumInstr extends BoxInstr {\n    public BoxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFixnumInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxBooleanInstr extends UnboxInstr {\n    public UnboxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxBooleanInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "20",
        "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxFixnumInstr extends UnboxInstr {\n    public UnboxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxFixnumInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxFloatInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFixnumInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFixnumInstr extends BoxInstr {\n    public BoxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFixnumInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxBooleanInstr extends UnboxInstr {\n    public UnboxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxBooleanInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxBooleanInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxBooleanInstr extends BoxInstr {\n    public BoxBooleanInstr(Variable dst, Operand val) {\n        super(Operation.BOX_BOOLEAN, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxBooleanInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxBooleanInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/BoxFloatInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class BoxFloatInstr extends BoxInstr {\n    public BoxFloatInstr(Variable dst, Operand val) {\n        super(Operation.BOX_FLOAT, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new BoxFloatInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.BoxFloatInstr(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/boxing/UnboxFixnumInstr.java",
                "SLOC": "20",
                "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxFixnumInstr extends UnboxInstr {\n    public UnboxFixnumInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_FIXNUM, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxFixnumInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxFixnumInstr(this);\n    }\n}\n"
            }
        ],
        "SLOC": "20",
        "content": "package org.jruby.ir.instructions.boxing;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\npublic class UnboxFloatInstr extends UnboxInstr {\n    public UnboxFloatInstr(Variable dst, Operand val) {\n        super(Operation.UNBOX_FLOAT, dst, val);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new UnboxFloatInstr(ii.getRenamedVariable(getResult()), getValue().cloneForInlining(ii));\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxFloatInstr(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFloatArgNoBlockCallInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFixnumArgNoBlockCallInstr.java",
                "SLOC": "45",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Fixnum;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFixnumArgNoBlockCallInstr extends CallInstr {\n    private final long fixNum;\n\n    // clone constructor\n    protected OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                        Operand receiver, Operand[] args, boolean potentiallyRefined, CallSite callSite,\n                                        long callSiteId) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        fixNum = ((Fixnum) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args, boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.fixNum = ((Fixnum) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFixnumArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), callSite, callSiteId);\n    }\n\n    public long getFixnumArg() {\n        return fixNum;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, fixNum);\n    }\n}\n"
            }
        ],
        "SLOC": "46",
        "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Float;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFloatArgNoBlockCallInstr extends CallInstr {\n    private final double flote;\n\n    // clone constructor\n    protected OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                          Operand receiver, Operand[] args, boolean potentiallyRefined,\n                                          CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFloatArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public double getFloatArg() {\n        return flote;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, flote);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgNoBlockCallInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFloatArgNoBlockCallInstr.java",
                "SLOC": "46",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Float;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFloatArgNoBlockCallInstr extends CallInstr {\n    private final double flote;\n\n    // clone constructor\n    protected OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                          Operand receiver, Operand[] args, boolean potentiallyRefined,\n                                          CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFloatArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public double getFloatArg() {\n        return flote;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, flote);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgBlockCallInstr.java",
                "SLOC": "47",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgBlockCallInstr extends CallInstr {\n    // clone constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                       Operand receiver, Operand[] args, Operand closure, boolean isPotentiallyRefined,\n                                       CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii), isPotentiallyRefined(),\n                getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        // NOTE: This logic shouod always match the CALL_10B logic in InterpreterEngine.processCall\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        Block preparedBlock = prepareBlock(context, self, currScope, dynamicScope, temp);\n\n        if (hasLiteralClosure()) {\n            return getCallSite().callIter(context, self, object, arg1, preparedBlock);\n        }\n\n        return getCallSite().call(context, self, object, arg1, preparedBlock);\n    }\n}\n"
            }
        ],
        "SLOC": "44",
        "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgNoBlockCallInstr extends CallInstr {\n    // specific instr constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        this(scope, Operation.CALL_1O, callType, result, name, receiver, args, isPotentiallyRefined);\n    }\n\n    // clone constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgNoBlockCallInstr(ii.getScope(), Operation.CALL_1O, getCallType(),\n                ii.getRenamedVariable(result), getName(), getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/TwoOperandArgNoBlockCallInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFixnumArgNoBlockCallInstr.java",
                "SLOC": "45",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Fixnum;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFixnumArgNoBlockCallInstr extends CallInstr {\n    private final long fixNum;\n\n    // clone constructor\n    protected OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                        Operand receiver, Operand[] args, boolean potentiallyRefined, CallSite callSite,\n                                        long callSiteId) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        fixNum = ((Fixnum) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args, boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.fixNum = ((Fixnum) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFixnumArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), callSite, callSiteId);\n    }\n\n    public long getFixnumArg() {\n        return fixNum;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, fixNum);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFloatArgNoBlockCallInstr.java",
                "SLOC": "46",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Float;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFloatArgNoBlockCallInstr extends CallInstr {\n    private final double flote;\n\n    // clone constructor\n    protected OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                          Operand receiver, Operand[] args, boolean potentiallyRefined,\n                                          CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFloatArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public double getFloatArg() {\n        return flote;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, flote);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgBlockCallInstr.java",
                "SLOC": "47",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgBlockCallInstr extends CallInstr {\n    // clone constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                       Operand receiver, Operand[] args, Operand closure, boolean isPotentiallyRefined,\n                                       CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii), isPotentiallyRefined(),\n                getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        // NOTE: This logic shouod always match the CALL_10B logic in InterpreterEngine.processCall\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        Block preparedBlock = prepareBlock(context, self, currScope, dynamicScope, temp);\n\n        if (hasLiteralClosure()) {\n            return getCallSite().callIter(context, self, object, arg1, preparedBlock);\n        }\n\n        return getCallSite().call(context, self, object, arg1, preparedBlock);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgNoBlockNoResultCallInstr.java",
                "SLOC": "38",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.instructions.NoResultCallInstr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgNoBlockNoResultCallInstr extends NoResultCallInstr {\n    // clone constructor\n    protected OneOperandArgNoBlockNoResultCallInstr(IRScope scope, CallType callType, RubySymbol name, Operand receiver,\n                              Operand[] args, Operand closure, boolean potentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.NORESULT_CALL_1O, callType, name, receiver, args, closure, potentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgNoBlockNoResultCallInstr(IRScope scope, CallType callType, RubySymbol name, Operand receiver, Operand[] args,\n                                                 Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.NORESULT_CALL_1O, callType, name, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgNoBlockNoResultCallInstr(ii.getScope(), getCallType(), getName(), getReceiver().cloneForInlining(ii),\n                cloneCallArgs(ii), getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgNoBlockCallInstr.java",
                "SLOC": "44",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgNoBlockCallInstr extends CallInstr {\n    // specific instr constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        this(scope, Operation.CALL_1O, callType, result, name, receiver, args, isPotentiallyRefined);\n    }\n\n    // clone constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgNoBlockCallInstr(ii.getScope(), Operation.CALL_1O, getCallType(),\n                ii.getRenamedVariable(result), getName(), getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1);\n    }\n}\n"
            }
        ],
        "SLOC": "42",
        "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class TwoOperandArgNoBlockCallInstr  extends CallInstr  {\n    // clone constructor\n    protected TwoOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                            Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_2O, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public TwoOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_2O, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new TwoOperandArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public Operand getArg2() {\n        return operands[2];\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg2 = (IRubyObject) getArg2().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1, arg2);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/ZeroOperandArgNoBlockCallInstr.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFixnumArgNoBlockCallInstr.java",
                "SLOC": "45",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Fixnum;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFixnumArgNoBlockCallInstr extends CallInstr {\n    private final long fixNum;\n\n    // clone constructor\n    protected OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                        Operand receiver, Operand[] args, boolean potentiallyRefined, CallSite callSite,\n                                        long callSiteId) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        fixNum = ((Fixnum) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFixnumArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args, boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1F, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.fixNum = ((Fixnum) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFixnumArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), callSite, callSiteId);\n    }\n\n    public long getFixnumArg() {\n        return fixNum;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, fixNum);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneFloatArgNoBlockCallInstr.java",
                "SLOC": "46",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Float;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneFloatArgNoBlockCallInstr extends CallInstr {\n    private final double flote;\n\n    // clone constructor\n    protected OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                          Operand receiver, Operand[] args, boolean potentiallyRefined,\n                                          CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined, callSite, callSiteId);\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    // normal constructor\n    public OneFloatArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       boolean potentiallyRefined) {\n        super(scope, Operation.CALL_1D, callType, result, name, receiver, args, null, potentiallyRefined);\n\n        assert args.length == 1;\n\n        this.flote = ((Float) args[0]).value;\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneFloatArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public double getFloatArg() {\n        return flote;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, flote);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgBlockCallInstr.java",
                "SLOC": "47",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgBlockCallInstr extends CallInstr {\n    // clone constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name,\n                                       Operand receiver, Operand[] args, Operand closure, boolean isPotentiallyRefined,\n                                       CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver, Operand[] args,\n                                       Operand closure, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_1OB, callType, result, name, receiver, args, closure, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                getClosureArg() == null ? null : getClosureArg().cloneForInlining(ii), isPotentiallyRefined(),\n                getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        // NOTE: This logic shouod always match the CALL_10B logic in InterpreterEngine.processCall\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        Block preparedBlock = prepareBlock(context, self, currScope, dynamicScope, temp);\n\n        if (hasLiteralClosure()) {\n            return getCallSite().callIter(context, self, object, arg1, preparedBlock);\n        }\n\n        return getCallSite().call(context, self, object, arg1, preparedBlock);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/OneOperandArgNoBlockCallInstr.java",
                "SLOC": "44",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class OneOperandArgNoBlockCallInstr extends CallInstr {\n    // specific instr constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        this(scope, Operation.CALL_1O, callType, result, name, receiver, args, isPotentiallyRefined);\n    }\n\n    // clone constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public OneOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new OneOperandArgNoBlockCallInstr(ii.getScope(), Operation.CALL_1O, getCallType(),\n                ii.getRenamedVariable(result), getName(), getReceiver().cloneForInlining(ii), cloneCallArgs(ii),\n                isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/instructions/specialized/TwoOperandArgNoBlockCallInstr.java",
                "SLOC": "42",
                "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class TwoOperandArgNoBlockCallInstr  extends CallInstr  {\n    // clone constructor\n    protected TwoOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                            Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, Operation.CALL_2O, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    public TwoOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                         Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_2O, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        return new TwoOperandArgNoBlockCallInstr(ii.getScope(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n    }\n\n    public Operand getArg2() {\n        return operands[2];\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg1 = (IRubyObject) getArg1().retrieve(context, self, currScope, dynamicScope, temp);\n        IRubyObject arg2 = (IRubyObject) getArg2().retrieve(context, self, currScope, dynamicScope, temp);\n        return getCallSite().call(context, self, object, arg1, arg2);\n    }\n}\n"
            }
        ],
        "SLOC": "44",
        "content": "package org.jruby.ir.instructions.specialized;\n\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.Operation;\nimport org.jruby.ir.instructions.CallInstr;\nimport org.jruby.ir.instructions.Instr;\nimport org.jruby.ir.operands.Operand;\nimport org.jruby.ir.operands.Variable;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class ZeroOperandArgNoBlockCallInstr extends CallInstr {\n    // clone constructor\n    public ZeroOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                          Operand[] args, boolean isPotentiallyRefined, CallSite callSite, long callSiteId) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined, callSite, callSiteId);\n    }\n\n    // normal constructor\n    protected ZeroOperandArgNoBlockCallInstr(IRScope scope, Operation op, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                          Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, op, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    // normal constructor\n    public ZeroOperandArgNoBlockCallInstr(IRScope scope, CallType callType, Variable result, RubySymbol name, Operand receiver,\n                                          Operand[] args, boolean isPotentiallyRefined) {\n        super(scope, Operation.CALL_0O, callType, result, name, receiver, args, null, isPotentiallyRefined);\n    }\n\n    @Override\n    public Instr clone(CloneInfo ii) {\n        ZeroOperandArgNoBlockCallInstr zeroOperandArgNoBlockCallInstr = new ZeroOperandArgNoBlockCallInstr(ii.getScope(), getOperation(), getCallType(), ii.getRenamedVariable(result), getName(),\n                getReceiver().cloneForInlining(ii), cloneCallArgs(ii), isPotentiallyRefined(), getCallSite(), getCallSiteId());\n\n        zeroOperandArgNoBlockCallInstr.setProcNew(procNew);\n\n        return zeroOperandArgNoBlockCallInstr;\n    }\n\n    @Override\n    public Object interpret(ThreadContext context, StaticScope currScope, DynamicScope dynamicScope, IRubyObject self, Object[] temp) {\n        IRubyObject object = (IRubyObject) getReceiver().retrieve(context, self, currScope, dynamicScope, temp);\n\n        return getCallSite().call(context, self, object);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Float.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Bignum.java",
                "SLOC": "62",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.RubyBignum;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.runtime.ThreadContext;\n\nimport java.math.BigInteger;\n\n/**\n * Represents a literal Bignum.\n *\n * We cache the value so that when the same Bignum Operand is copy-propagated\n * across multiple instructions, the same RubyBignum object is created.  In a\n * ddition, the same constant across loops should be the same object.\n *\n * So, in this example, the output should be false, true, true\n * <pre>\n *   n = 0\n *   olda = nil\n *   while (n < 3)\n *     a = 81402749386839761113321\n *     p a.equal?(olda)\n *     olda = a\n *     n += 1\n *   end\n * </pre>\n *\n */\npublic class Bignum extends ImmutableLiteral {\n    final public BigInteger value;\n\n    public Bignum(BigInteger value) {\n        super();\n        this.value = value;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.BIGNUM;\n    }\n\n    @Override\n    public Object createCacheObject(ThreadContext context) {\n        return RubyBignum.newBignum(context.runtime, value);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Bignum(this);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(value.toString());\n    }\n\n    public static Bignum decode(IRReaderDecoder d) {\n        return new Bignum(new BigInteger(d.decodeString()));\n    }\n\n    @Override\n    public String toString() {\n        return \"Bignum:\" + value;\n    }\n\n    @Override\n    public boolean isTruthyImmediate() {\n        return true;\n    }\n}\n"
            }
        ],
        "SLOC": "43",
        "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.runtime.ThreadContext;\n\npublic class Float extends ImmutableLiteral {\n    final public double value;\n\n    public Float(double value) {\n        super();\n\n        this.value = value;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.FLOAT;\n    }\n\n    @Override\n    public Object createCacheObject(ThreadContext context) {\n        return context.runtime.newFloat(value);\n    }\n\n    @Override\n    public String toString() {\n        return \"Float:\" + value;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Float(this);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(value);\n    }\n\n    public static Float decode(IRReaderDecoder d) {\n        return new Float(d.decodeDouble());\n    }\n\n    public double getValue() {\n        return value;\n    }\n\n    @Override\n    public boolean isTruthyImmediate() {\n        return true;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Scope.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/ObjectClass.java",
                "SLOC": "41",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\n\npublic class ObjectClass extends Operand {\n    public ObjectClass() {\n        super();\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.OBJECT_CLASS;\n    }\n\n    @Override\n    public String toString() {\n        return \"<Class:Object>\";\n    }\n\n    @Override\n    public boolean canCopyPropagate() {\n        return true;\n    }\n\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n        /* Nothing to do */\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        return context.runtime.getObject();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ObjectClass(this);\n    }\n}\n"
            }
        ],
        "SLOC": "47",
        "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\n\n/**\n * Reference a StaticScope/IRScope.  This could be used wherever we know a staticscope will\n * be used but we initially favor CurrentScope as it is a single instance and it reduces an\n * object allocation for every scope in the system.  Note: we store IRScope because JIT can\n * easily store IRScopes vs making new JIT infrastructure for StaticScope (and from a scoping\n * standpoint these two types are 1:1).\n *\n * However, once we inline we are migrating things referencing a currentscope which\n * no longer exists.  In this case, we need replace CurrentScope with a Scope.\n */\npublic class Scope extends Operand {\n    private IRScope scope;\n\n    public Scope(IRScope scope) {\n        this.scope = scope;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.SCOPE;\n    }\n\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n    }\n\n    public IRScope getScope() {\n        return scope;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Scope(this);\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        return scope.getStaticScope();\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/StandardError.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/ObjectClass.java",
                "SLOC": "41",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\n\npublic class ObjectClass extends Operand {\n    public ObjectClass() {\n        super();\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.OBJECT_CLASS;\n    }\n\n    @Override\n    public String toString() {\n        return \"<Class:Object>\";\n    }\n\n    @Override\n    public boolean canCopyPropagate() {\n        return true;\n    }\n\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n        /* Nothing to do */\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        return context.runtime.getObject();\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.ObjectClass(this);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Scope.java",
                "SLOC": "47",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\n\n/**\n * Reference a StaticScope/IRScope.  This could be used wherever we know a staticscope will\n * be used but we initially favor CurrentScope as it is a single instance and it reduces an\n * object allocation for every scope in the system.  Note: we store IRScope because JIT can\n * easily store IRScopes vs making new JIT infrastructure for StaticScope (and from a scoping\n * standpoint these two types are 1:1).\n *\n * However, once we inline we are migrating things referencing a currentscope which\n * no longer exists.  In this case, we need replace CurrentScope with a Scope.\n */\npublic class Scope extends Operand {\n    private IRScope scope;\n\n    public Scope(IRScope scope) {\n        this.scope = scope;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.SCOPE;\n    }\n\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n    }\n\n    public IRScope getScope() {\n        return scope;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Scope(this);\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        return scope.getStaticScope();\n    }\n}\n"
            }
        ],
        "SLOC": "39",
        "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\n\nimport java.util.List;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n// Represents the StandardError object -- this operand used in rescue blocks\n// for when the rescue block doesn't specify an exception object class\npublic class StandardError extends Operand {\n    public StandardError() {\n        super();\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.STANDARD_ERROR;\n    }\n\n    @Override\n    public String toString() {\n        return \"StandardError\";\n    }\n\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n        /* Nothing to do */\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.StandardError(this);\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        return context.runtime.getStandardError();\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Splat.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/SValue.java",
                "SLOC": "80",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\nimport java.util.Map;\n\n// Represents a svalue node in Ruby code\n//\n// According to headius, svalue evaluates its value node and returns:\n//  * nil if it does not evaluate to an array or if it evaluates to an empty array\n//  * the first element if it evaluates to a one-element array\n//  * the array if it evaluates to a >1 element array\n//\n// NOTE: This operand is only used in the initial stages of optimization\n// Further down the line, it could get converted to calls\n//\npublic class SValue extends Operand {\n    final private Operand array;\n\n    public SValue(Operand array) {\n        super();\n\n        this.array = array;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.SVALUE;\n    }\n\n    public Operand getArray() {\n        return array;\n    }\n\n    @Override\n    public boolean hasKnownValue() {\n        return array.hasKnownValue();\n    }\n\n    @Override\n    public String toString() {\n        return \"SValue:\" + array;\n    }\n\n    @Override\n    public Operand getSimplifiedOperand(Map<Operand, Operand> valueMap, boolean force) {\n        Operand newArray = array.getSimplifiedOperand(valueMap, force);\n        if (newArray instanceof Array) {\n            Array a = (Array) newArray;\n            return (a.getElts().length == 1) ? a.getElts()[0] : a;\n        } else {\n            return (newArray == array) ? this : new SValue(newArray);\n        }\n    }\n\n    /** Append the list of variables used in this operand to the input list */\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n        array.addUsedVariables(l);\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return hasKnownValue() ? this : new SValue(array.cloneForInlining(ii));\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        Object val = array.retrieve(context, self, currScope, currDynScope, temp);\n\n        return IRRuntimeHelpers.svalue(context, val);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getArray());\n    }\n\n    public static SValue decode(IRReaderDecoder d) {\n        return new SValue(d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.SValue(this);\n    }\n}\n"
            }
        ],
        "SLOC": "85",
        "content": "package org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.ir.transformations.inlining.CloneInfo;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.DynamicScope;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.util.List;\nimport java.util.Map;\n\n// Represents a splat value in Ruby code: *array\n//\n// NOTE: This operand is only used in the initial stages of optimization\n// Further down the line, it could get converted to calls that implement splat semantics\npublic class Splat extends Operand implements DepthCloneable {\n    final private Operand array;\n\n    public Splat(Operand array) {\n        super();\n        this.array = array;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.SPLAT;\n    }\n\n    @Override\n    public String toString() {\n        return \"*(unsplat)\" + array;\n    }\n\n    @Override\n    public boolean hasKnownValue() {\n        return false; /*_array.isConstant();*/\n    }\n\n    public Operand getArray() {\n        return array;\n    }\n\n    @Override\n    public Operand getSimplifiedOperand(Map<Operand, Operand> valueMap, boolean force) {\n        Operand newArray = array.getSimplifiedOperand(valueMap, force);\n        return (newArray == array) ? this : new Splat(newArray);\n    }\n\n    /** Append the list of variables used in this operand to the input list */\n    @Override\n    public void addUsedVariables(List<Variable> l) {\n        array.addUsedVariables(l);\n    }\n\n    /** When fixing up splats in nested closure we need to tweak the operand if it is a LocalVariable */\n    public Operand cloneForDepth(int n) {\n        return array instanceof LocalVariable ? new Splat(((LocalVariable) array).cloneForDepth(n)) : this;\n    }\n\n    @Override\n    public Operand cloneForInlining(CloneInfo ii) {\n        return hasKnownValue() ? this : new Splat(array.cloneForInlining(ii));\n    }\n\n    @Override\n    public Object retrieve(ThreadContext context, IRubyObject self, StaticScope currScope, DynamicScope currDynScope, Object[] temp) {\n        // Splat is now only used in call arg lists where it is guaranteed that\n        // the splat-arg is an array.\n        //\n        // It is:\n        // - either a result of a args-cat/args-push (which generate an array),\n        // - or a result of a BuildSplatInstr (which also generates an array),\n        // - or a rest-arg that has been received (which also generates an array)\n        //   and is being passed via zsuper.\n        //\n        // In addition, since this only shows up in call args, the array itself is\n        // never modified. The array elements are extracted out and inserted into\n        // a java array. So, a dup is not required either.\n        //\n        // So, besides retrieving the array, nothing more to be done here!\n        return array.retrieve(context, self, currScope, currDynScope, temp);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(getArray());\n    }\n\n    public static Splat decode(IRReaderDecoder d) {\n        return new Splat(d.decodeOperand());\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Splat(this);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/UnboxedBoolean.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/Boolean.java",
                "SLOC": "60",
                "content": "package org.jruby.ir.operands;\n\nimport org.jruby.RubyBoolean;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.runtime.ThreadContext;\n\npublic class Boolean extends ImmutableLiteral {\n    private final boolean truthy;\n\n    public Boolean(boolean truthy) {\n        super();\n\n        this.truthy = truthy;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.BOOLEAN;\n    }\n\n    @Override\n    public Object createCacheObject(ThreadContext context) {\n        return RubyBoolean.newBoolean(context, isTrue());\n    }\n\n    public boolean isTrue()  {\n        return truthy;\n    }\n\n    public boolean isFalse() {\n        return !truthy;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        return other instanceof Boolean && truthy == ((Boolean) other).truthy;\n    }\n\n    @Override\n    public int hashCode() {\n        return 41 * 7 + (this.truthy ? 1 : 0);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.Boolean(this);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(isTrue());\n    }\n\n    public static Boolean decode(IRReaderDecoder d) {\n        return d.decodeBoolean() ?\n                d.getCurrentScope().getManager().getTrue() : d.getCurrentScope().getManager().getFalse();\n    }\n\n    @Override\n    public String toString() {\n        return isTrue() ? \"true\" : \"false\";\n    }\n\n    @Override\n    public boolean isTruthyImmediate() {\n        return truthy;\n    }\n\n    @Override\n    public boolean isFalseyImmediate() {\n        return !truthy;\n    }\n}\n"
            }
        ],
        "SLOC": "57",
        "content": "package org.jruby.ir.operands;\n\nimport org.jruby.RubyBoolean;\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.persistence.IRWriterEncoder;\nimport org.jruby.runtime.ThreadContext;\n\npublic class UnboxedBoolean extends ImmutableLiteral {\n    private final boolean truthy;\n\n    public static final UnboxedBoolean TRUE = new UnboxedBoolean(true);\n    public static final UnboxedBoolean FALSE = new UnboxedBoolean(false);\n\n    public UnboxedBoolean(boolean truthy) {\n        super();\n\n        this.truthy = truthy;\n    }\n\n    @Override\n    public OperandType getOperandType() {\n        return OperandType.UNBOXED_BOOLEAN;\n    }\n\n    @Override\n    public Object createCacheObject(ThreadContext context) {\n        return RubyBoolean.newBoolean(context, isTrue());\n    }\n\n    public boolean isTrue()  {\n        return truthy;\n    }\n\n    public boolean isFalse() {\n        return !truthy;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        return other instanceof UnboxedBoolean && truthy == ((UnboxedBoolean) other).truthy;\n    }\n\n    @Override\n    public int hashCode() {\n        return 41 * 7 + (this.truthy ? 1 : 0);\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.UnboxedBoolean(this);\n    }\n\n    @Override\n    public void encode(IRWriterEncoder e) {\n        super.encode(e);\n        e.encode(truthy);\n    }\n\n    public static UnboxedBoolean decode(IRReaderDecoder d) {\n        return d.decodeBoolean() ? TRUE : FALSE;\n    }\n\n    @Override\n    public String toString() {\n        return isTrue() ? \"true\" : \"false\";\n    }\n\n    @Override\n    public boolean isTruthyImmediate() {\n        return truthy;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/TemporaryFloatVariable.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/operands/TemporaryFixnumVariable.java",
                "SLOC": "60",
                "content": "/*\n **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2014 The JRuby Team (admin@jruby.org)\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\n/**\n * Represents a temporary variable for an unboxed Fixnum operand.\n */\npublic class TemporaryFixnumVariable extends TemporaryLocalVariable {\n    public static final String PREFIX = \"%i_\";\n    public TemporaryFixnumVariable(int offset) {\n        super(offset);\n    }\n\n    @Override\n    public TemporaryVariableType getType() {\n        return TemporaryVariableType.FIXNUM;\n    }\n\n    @Override\n    public String getPrefix() {\n        return PREFIX;\n    }\n\n    @Override\n    public Variable clone(SimpleCloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.TemporaryFixnumVariable(this);\n    }\n\n    public static TemporaryFixnumVariable decode(IRReaderDecoder d) {\n        return new TemporaryFixnumVariable(d.decodeInt());\n    }\n}\n"
            }
        ],
        "SLOC": "60",
        "content": "/*\n **** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2014 The JRuby Team (admin@jruby.org)\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ir.operands;\n\nimport org.jruby.ir.IRVisitor;\nimport org.jruby.ir.persistence.IRReaderDecoder;\nimport org.jruby.ir.transformations.inlining.SimpleCloneInfo;\n\n/**\n * Represents a temporary variable for an unboxed Float operand.\n */\npublic class TemporaryFloatVariable extends TemporaryLocalVariable {\n    public static final String PREFIX = \"%f_\";\n    public TemporaryFloatVariable(int offset) {\n        super(offset);\n    }\n\n    @Override\n    public TemporaryVariableType getType() {\n        return TemporaryVariableType.FLOAT;\n    }\n\n    @Override\n    public String getPrefix() {\n        return PREFIX;\n    }\n\n    @Override\n    public Variable clone(SimpleCloneInfo ii) {\n        return this;\n    }\n\n    @Override\n    public void visit(IRVisitor visitor) {\n        visitor.TemporaryFloatVariable(this);\n    }\n\n    public static TemporaryFloatVariable decode(IRReaderDecoder d) {\n        return new TemporaryFloatVariable(d.decodeInt());\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/ClassData7.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/ClassData6.java",
                "SLOC": "37",
                "content": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage org.jruby.ir.targets;\n\nimport com.headius.invokebinder.Signature;\nimport org.jruby.compiler.impl.SkinnyMethodAdapter;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.util.CodegenUtils;\nimport org.objectweb.asm.ClassVisitor;\nimport org.objectweb.asm.Opcodes;\nimport org.objectweb.asm.Type;\nimport org.objectweb.asm.commons.Method;\n\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.Stack;\n\n/**\n *\n * @author headius\n */\nclass ClassData6 extends ClassData {\n    public ClassData6(String clsName, ClassVisitor cls) {\n        super(clsName, cls);\n    }\n\n    public void pushmethod(String name, IRScope scope, Signature signature, boolean specificArity) {\n        Method m = new Method(name, Type.getType(signature.type().returnType()), IRRuntimeHelpers.typesFromSignature(signature));\n        SkinnyMethodAdapter adapter = new SkinnyMethodAdapter(cls, Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC, m.getName(), m.getDescriptor(), null, null);\n        methodStack.push(\n                new MethodData(\n                        new IRBytecodeAdapter6(adapter, signature, this),\n                        scope,\n                        signature,\n                        specificArity ? scope.getStaticScope().getSignature().required() : -1)\n        );\n    }\n}\n"
            }
        ],
        "SLOC": "33",
        "content": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage org.jruby.ir.targets;\n\nimport com.headius.invokebinder.Signature;\nimport org.jruby.compiler.impl.SkinnyMethodAdapter;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.objectweb.asm.ClassVisitor;\nimport org.objectweb.asm.Opcodes;\nimport org.objectweb.asm.Type;\nimport org.objectweb.asm.commons.Method;\n\n/**\n *\n * @author headius\n */\nclass ClassData7 extends ClassData {\n\n    public ClassData7(String clsName, ClassVisitor cls) {\n        super(clsName, cls);\n    }\n\n    public void pushmethod(String name, IRScope scope, Signature signature, boolean specificArity) {\n        Method m = new Method(name, Type.getType(signature.type().returnType()), IRRuntimeHelpers.typesFromSignature(signature));\n        SkinnyMethodAdapter adapter = new SkinnyMethodAdapter(cls, Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC, m.getName(), m.getDescriptor(), null, null);\n        methodStack.push(\n                new MethodData(\n                        new IRBytecodeAdapter7(adapter, signature, this),\n                        scope,\n                        signature,\n                        specificArity ? scope.getStaticScope().getSignature().required() : -1)\n        );\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/FixnumObjectSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/BignumObjectSite.java",
                "SLOC": "34",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyBignum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\nimport java.math.BigInteger;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class BignumObjectSite extends LazyObjectSite {\n    private final BigInteger value;\n\n    public BignumObjectSite(MethodType type, String value) {\n        super(type);\n\n        this.value = new BigInteger(value);\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(BignumObjectSite.class),\n            \"bootstrap\",\n            sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, String.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, String value) {\n        return new BignumObjectSite(type, value).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return RubyBignum.newBignum(context.runtime, value);\n    }\n}\n"
            }
        ],
        "SLOC": "31",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class FixnumObjectSite extends LazyObjectSite {\n    private final long value;\n\n    public FixnumObjectSite(MethodType type, long value) {\n        super(type);\n\n        this.value = value;\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(FixnumObjectSite.class),\n            \"bootstrap\", sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, long.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, long value) {\n        return new FixnumObjectSite(type, value).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return context.runtime.newFixnum(value);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/FloatObjectSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/FixnumObjectSite.java",
                "SLOC": "31",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class FixnumObjectSite extends LazyObjectSite {\n    private final long value;\n\n    public FixnumObjectSite(MethodType type, long value) {\n        super(type);\n\n        this.value = value;\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(FixnumObjectSite.class),\n            \"bootstrap\", sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, long.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, long value) {\n        return new FixnumObjectSite(type, value).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return context.runtime.newFixnum(value);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/BignumObjectSite.java",
                "SLOC": "34",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyBignum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\nimport java.math.BigInteger;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class BignumObjectSite extends LazyObjectSite {\n    private final BigInteger value;\n\n    public BignumObjectSite(MethodType type, String value) {\n        super(type);\n\n        this.value = new BigInteger(value);\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(BignumObjectSite.class),\n            \"bootstrap\",\n            sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, String.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, String value) {\n        return new BignumObjectSite(type, value).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return RubyBignum.newBignum(context.runtime, value);\n    }\n}\n"
            }
        ],
        "SLOC": "33",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class FloatObjectSite extends LazyObjectSite {\n    private final double value;\n\n    public FloatObjectSite(MethodType type, double value) {\n        super(type);\n\n        this.value = value;\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(FloatObjectSite.class),\n            \"bootstrap\",\n            sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, double.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, double value) {\n        return new FloatObjectSite(type, value).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return RubyFloat.newFloat(context.runtime, value);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/InstanceSuperInvokeSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/ClassSuperInvokeSite.java",
                "SLOC": "33",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyClass;\nimport org.jruby.internal.runtime.methods.DynamicMethod;\nimport org.jruby.internal.runtime.methods.UndefinedMethod;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.Helpers;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.callsite.CacheEntry;\n\nimport java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodType;\nimport java.lang.invoke.SwitchPoint;\n\nimport static org.jruby.ir.runtime.IRRuntimeHelpers.splatArguments;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class ClassSuperInvokeSite extends ResolvedSuperInvokeSite {\n    public ClassSuperInvokeSite(MethodType type, String name, String splatmapString, String file, int line) {\n        super(type, name, splatmapString, file, line);\n    }\n\n    @Override\n    protected RubyClass getSuperClass(RubyClass definingModule) {\n        return definingModule.getMetaClass().getMetaClass().getSuperClass();\n    }\n\n    // FIXME: indy cached version was not doing splat mapping; revert to slow logic for now\n\n    public IRubyObject invoke(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        // TODO: get rid of caller\n        // TODO: caching\n        return IRRuntimeHelpers.classSuperSplatArgs(context, self, superName, definingModule, args, block, splatMap);\n    }\n}\n"
            }
        ],
        "SLOC": "34",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyClass;\nimport org.jruby.RubyModule;\nimport org.jruby.internal.runtime.methods.DynamicMethod;\nimport org.jruby.internal.runtime.methods.UndefinedMethod;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.Helpers;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.runtime.callsite.CacheEntry;\n\nimport java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodType;\nimport java.lang.invoke.SwitchPoint;\n\nimport static org.jruby.ir.runtime.IRRuntimeHelpers.splatArguments;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class InstanceSuperInvokeSite extends ResolvedSuperInvokeSite {\n    public InstanceSuperInvokeSite(MethodType type, String name, String splatmapString, String file, int line) {\n        super(type, name, splatmapString, file, line);\n    }\n\n    @Override\n    protected RubyClass getSuperClass(RubyClass definingModule) {\n        return definingModule.getSuperClass();\n    }\n\n    // FIXME: indy cached version was not doing splat mapping; revert to slow logic for now\n\n    public IRubyObject invoke(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        // TODO: get rid of caller\n        // TODO: caching\n        return IRRuntimeHelpers.instanceSuperSplatArgs(context, self, superName, definingModule, args, block, splatMap);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/JVM7.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/JVM6.java",
                "SLOC": "16",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.objectweb.asm.ClassWriter;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.objectweb.asm.Opcodes.ACC_PUBLIC;\nimport static org.objectweb.asm.Opcodes.ACC_SUPER;\n\n// This class represents JDK6 as the compiler target\n// JDK6 has no support for invokedynamic\npublic class JVM6 extends JVM {\n    public void pushscript(String clsName, String filename) {\n        writer = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);\n        clsStack.push(new ClassData6(clsName, writer));\n\n        cls().visit(RubyInstanceConfig.JAVA_VERSION, ACC_PUBLIC + ACC_SUPER, clsName, null, p(Object.class), null);\n        cls().visitSource(filename, null);\n    }\n}\n"
            }
        ],
        "SLOC": "17",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyInstanceConfig;\nimport org.objectweb.asm.ClassWriter;\n\nimport java.io.PrintWriter;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.objectweb.asm.Opcodes.ACC_PUBLIC;\nimport static org.objectweb.asm.Opcodes.ACC_SUPER;\n\n// This class represents JDK7 as the compiler target\n// JDK7 supports invokedynamic for example\npublic class JVM7 extends JVM {\n    public void pushscript(String clsName, String filename) {\n        writer = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);\n        clsStack.push(new ClassData7(clsName, writer));\n\n        cls().visit(RubyInstanceConfig.JAVA_VERSION, ACC_PUBLIC + ACC_SUPER, clsName, null, p(Object.class), null);\n        cls().visitSource(filename, null);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/SymbolProcObjectSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/SymbolObjectSite.java",
                "SLOC": "43",
                "content": "package org.jruby.ir.targets;\n\nimport org.jcodings.Encoding;\nimport org.jruby.RubyEncoding;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ByteList;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class SymbolObjectSite extends LazyObjectSite {\n    private final String value;\n    private final String encoding;\n\n    public SymbolObjectSite(MethodType type, String value, String encoding) {\n        super(type);\n\n        this.value = value;\n        this.encoding = encoding;\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(SymbolObjectSite.class),\n            \"bootstrap\",\n            sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, String.class, String.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, String value, String encoding) {\n        return new SymbolObjectSite(type, value, encoding).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        return RubySymbol.newSymbol(context.runtime,\n                new ByteList(\n                        RubyEncoding.encodeISO(value),\n                        IRRuntimeHelpers.retrieveJCodingsEncoding(context, encoding),\n                        false));\n    }\n}\n"
            }
        ],
        "SLOC": "40",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyEncoding;\nimport org.jruby.RubySymbol;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ByteList;\nimport org.objectweb.asm.Handle;\nimport org.objectweb.asm.Opcodes;\n\nimport java.lang.invoke.CallSite;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.MethodType;\n\nimport static org.jruby.util.CodegenUtils.p;\nimport static org.jruby.util.CodegenUtils.sig;\n\npublic class SymbolProcObjectSite extends LazyObjectSite {\n    private final String value;\n    private final String encoding;\n\n    public SymbolProcObjectSite(MethodType type, String value, String encoding) {\n        super(type);\n\n        this.value = value;\n        this.encoding = encoding;\n    }\n\n    public static final Handle BOOTSTRAP = new Handle(\n            Opcodes.H_INVOKESTATIC,\n            p(SymbolProcObjectSite.class),\n            \"bootstrap\",\n            sig(CallSite.class, MethodHandles.Lookup.class, String.class, MethodType.class, String.class, String.class),\n            false);\n\n    public static CallSite bootstrap(MethodHandles.Lookup lookup, String name, MethodType type, String value, String encoding) {\n        return new SymbolProcObjectSite(type, value, encoding).bootstrap(lookup);\n    }\n\n    public IRubyObject construct(ThreadContext context) {\n        RubySymbol symbol = RubySymbol.newSymbol(context.runtime,\n                new ByteList(\n                        RubyEncoding.encodeISO(value),\n                        IRRuntimeHelpers.retrieveJCodingsEncoding(context, encoding),\n                        false));\n        return IRRuntimeHelpers.newSymbolProc(context, symbol);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/ZSuperInvokeSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ir/targets/UnresolvedSuperInvokeSite.java",
                "SLOC": "23",
                "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyClass;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.lang.invoke.MethodType;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class UnresolvedSuperInvokeSite extends SuperInvokeSite {\n    public UnresolvedSuperInvokeSite(MethodType type, String name, String splatmapString, String file, int line) {\n        super(type, name, splatmapString, file, line);\n    }\n\n    public IRubyObject invoke(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        // TODO: get rid of caller\n        // TODO: caching\n        return IRRuntimeHelpers.unresolvedSuperSplatArgs(context, self, args, block, splatMap);\n    }\n\n    public IRubyObject fail(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        return invoke(context, caller, self, definingModule, args, block);\n    }\n}\n"
            }
        ],
        "SLOC": "24",
        "content": "package org.jruby.ir.targets;\n\nimport org.jruby.RubyClass;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.lang.invoke.MethodType;\n\n/**\n* Created by headius on 10/23/14.\n*/\npublic class ZSuperInvokeSite extends SuperInvokeSite {\n    public ZSuperInvokeSite(MethodType type, String name, String splatmapString, String file, int line) {\n        super(type, name, splatmapString, file, line);\n    }\n\n    public IRubyObject invoke(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        // TODO: get rid of caller\n        // TODO: caching\n        if (block == null || !block.isGiven()) block = context.getFrameBlock();\n        return IRRuntimeHelpers.zSuperSplatArgs(context, self, args, block, splatMap);\n    }\n\n    public IRubyObject fail(ThreadContext context, IRubyObject caller, IRubyObject self, RubyClass definingModule, IRubyObject[] args, Block block) throws Throwable {\n        return invoke(context, caller, self, definingModule, args, block);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/FieldMethodZero.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/FieldMethodOne.java",
                "SLOC": "34",
                "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Field;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyModule;\nimport org.jruby.internal.runtime.methods.JavaMethod;\nimport org.jruby.javasupport.Java;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n/**\n * Java field setter (writer) base implementation e.g. `self.myField = value`.\n */\npublic abstract class FieldMethodOne extends JavaMethod.JavaMethodOne {\n\n    final Field field;\n\n    FieldMethodOne(String name, RubyModule host, Field field) {\n        this(host, field, name);\n    }\n\n    public Field getField() {\n        return field;\n    }\n\n    protected FieldMethodOne(RubyModule host, Field field, String name) {\n        super(host, Visibility.PUBLIC, name);\n        Java.trySetAccessible(field);\n        this.field = field;\n    }\n\n    protected Object retrieveTarget(final IRubyObject self) {\n        return FieldMethodZero.retrieveTargetImpl(self);\n    }\n\n    protected final IRubyObject handleSetException(final Ruby runtime, final IllegalAccessException ex) {\n        throw runtime.newSecurityError(\"illegal access setting field '\" + field + \"' : \" + ex.getMessage());\n    }\n\n    protected final IRubyObject handleSetException(final Ruby runtime, final IllegalArgumentException ex) {\n        throw runtime.newTypeError(ex.getMessage());\n    }\n\n}\n"
            }
        ],
        "SLOC": "36",
        "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Field;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyModule;\nimport org.jruby.internal.runtime.methods.JavaMethod;\nimport org.jruby.java.proxies.JavaProxy;\nimport org.jruby.javasupport.Java;\nimport org.jruby.runtime.Visibility;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n/**\n * Java field getter (reader) base implementation e.g. `self.myField`.\n */\npublic abstract class FieldMethodZero extends JavaMethod.JavaMethodZero {\n    \n    protected final Field field;\n\n    FieldMethodZero(String name, RubyModule host, Field field) {\n        this(host, field, name);\n    }\n\n    public Field getField() {\n        return field;\n    }\n\n    protected FieldMethodZero(RubyModule host, Field field, String name) {\n        super(host, Visibility.PUBLIC, name);\n        Java.trySetAccessible(field);\n        this.field = field;\n    }\n\n    protected Object retrieveTarget(final IRubyObject self) {\n        return FieldMethodZero.retrieveTargetImpl(self);\n    }\n\n    static Object retrieveTargetImpl(final IRubyObject self) {\n        // NOTE: we re-use these with Class#become_java!'s generated field accessors\n        return self instanceof JavaProxy ? ((JavaProxy) self).getObject() : self;\n    }\n\n    protected final IRubyObject handleGetException(final Ruby runtime, final IllegalAccessException ex) {\n        throw runtime.newSecurityError(\"illegal access getting field '\" + field + \"' : \" + ex.getMessage());\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/StaticFieldSetter.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/InstanceFieldSetter.java",
                "SLOC": "20",
                "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Field;\n\nimport org.jruby.RubyModule;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class InstanceFieldSetter extends FieldMethodOne {\n\n    public InstanceFieldSetter(String name, RubyModule host, Field field) {\n        super(name, host, field);\n    }\n\n    @Override\n    public final IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg) {\n        try {\n            Object value = arg.toJava(field.getType());\n            field.set(retrieveTarget(self), value);\n        }\n        catch (IllegalAccessException ex) { return handleSetException(context.runtime, ex); }\n        catch (IllegalArgumentException ex) { return handleSetException(context.runtime, ex); }\n        return arg;\n    }\n\n}\n"
            }
        ],
        "SLOC": "19",
        "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Field;\n\nimport org.jruby.RubyModule;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class StaticFieldSetter extends FieldMethodOne {\n\n    public StaticFieldSetter(String name, RubyModule host, Field field) {\n        super(name, host, field);\n    }\n\n    @Override\n    public final IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg) {\n        try {\n            field.set(null, arg.toJava(field.getType()));\n        }\n        catch (IllegalAccessException ex) { return handleSetException(context.runtime, ex); }\n        catch (IllegalArgumentException ex) { return handleSetException(context.runtime, ex); }\n        return arg;\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/StaticMethodInvoker.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/InstanceMethodInvoker.java",
                "SLOC": "130",
                "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Method;\nimport java.util.function.Supplier;\n\nimport org.jruby.RubyModule;\nimport org.jruby.RubyProc;\nimport org.jruby.java.proxies.JavaProxy;\nimport org.jruby.javasupport.JavaMethod;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ArraySupport;\n\npublic final class InstanceMethodInvoker extends MethodInvoker {\n    public InstanceMethodInvoker(RubyModule host, Supplier<Method[]> methods, String name) {\n        super(host, methods, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallable(self, name, args, args.length);\n        return method.invokeDirect( context, proxy.getObject(), convertArguments(method, args) );\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, IRubyObject.NULL_ARRAY);\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityZero(self, name);\n        return method.invokeDirect(context, proxy.getObject());\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityOne(self, name, arg0);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, arg1);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1, arg2});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, arg2);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        Object cArg2 = arg2.toJava(paramTypes[2]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if ( block.isGiven() ) {\n            JavaProxy proxy = castJavaProxy(self);\n            final int len = args.length;\n            // these extra arrays are really unfortunate; split some of these paths out to eliminate?\n            IRubyObject[] newArgs = ArraySupport.newCopy(args, RubyProc.newProc(context.runtime, block, block.type));\n\n            JavaMethod method = (JavaMethod) findCallable(self, name, newArgs, len + 1);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n\n            Object[] convertedArgs = new Object[len + 1];\n            for (int i = 0; i < len + 1; i++) {\n                convertedArgs[i] = newArgs[i].toJava(paramTypes[i]);\n            }\n\n            return method.invokeDirect(context, proxy.getObject(), convertedArgs);\n        }\n        return call(context, self, clazz, name, args);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityOne(self, name, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = proc.toJava(paramTypes[0]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0);\n        }\n        return call(context, self, clazz, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = proc.toJava(paramTypes[1]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1);\n        }\n        return call(context, self, clazz, name, arg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = proc.toJava(paramTypes[2]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2);\n        }\n        return call(context, self, clazz, name, arg0, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod)findCallableArityFour(self, name, arg0, arg1, arg2, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = arg2.toJava(paramTypes[2]);\n            Object cArg3 = proc.toJava(paramTypes[3]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2, cArg3);\n        }\n        return call(context, self, clazz, name, arg0, arg1, arg2);\n    }\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/SingletonMethodInvoker.java",
                "SLOC": "125",
                "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Method;\nimport java.util.List;\nimport java.util.function.Supplier;\n\nimport org.jruby.RubyClass;\nimport org.jruby.RubyModule;\nimport org.jruby.RubyProc;\nimport org.jruby.javasupport.JavaMethod;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic final class SingletonMethodInvoker extends MethodInvoker {\n\n    private final Object singleton;\n\n    public SingletonMethodInvoker(Object singleton, RubyClass host, Supplier<Method[]> methods, String name) {\n        super(host, methods, name);\n        this.singleton = singleton;\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        JavaMethod method = (JavaMethod) findCallable(self, name, args, args.length);\n        return method.invokeDirect( context, singleton, convertArguments(method, args) );\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, IRubyObject.NULL_ARRAY);\n        JavaMethod method = (JavaMethod) findCallableArityZero(self, name);\n\n        return method.invokeDirect(context, singleton);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        JavaMethod method = (JavaMethod) findCallableArityOne(self, name, arg0);\n        if (method.isVarArgs()) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n\n        return method.invokeDirect(context, singleton, cArg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1});\n        JavaMethod method = (JavaMethod)findCallableArityTwo(self, name, arg0, arg1);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n\n        return method.invokeDirect(context, singleton, cArg0, cArg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1, arg2});\n        JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, arg2);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        Object cArg2 = arg2.toJava(paramTypes[2]);\n\n        return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if (block.isGiven()) {\n            int len = args.length;\n            // too much array creation!\n            Object[] convertedArgs = new Object[len + 1];\n            IRubyObject[] intermediate = new IRubyObject[len + 1];\n            System.arraycopy(args, 0, intermediate, 0, len);\n            intermediate[len] = RubyProc.newProc(context.runtime, block, block.type);\n\n            JavaMethod method = (JavaMethod) findCallable(self, name, intermediate, len + 1);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            for (int i = 0; i < len + 1; i++) {\n                convertedArgs[i] = intermediate[i].toJava(paramTypes[i]);\n            }\n\n            return method.invokeDirect(context, singleton, convertedArgs);\n        }\n        return call(context, self, clazz, name, args);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityOne(self, name, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = proc.toJava(paramTypes[0]);\n\n            return method.invokeDirect(context, singleton, cArg0);\n        }\n        return call(context, self, clazz, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = proc.toJava(paramTypes[1]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1);\n        }\n        return call(context, self, clazz, name, arg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = proc.toJava(paramTypes[2]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2);\n        }\n        return call(context, self, clazz, name, arg0, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityFour(self, name, arg0, arg1, arg2, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = arg2.toJava(paramTypes[2]);\n            Object cArg3 = proc.toJava(paramTypes[3]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2, cArg3);\n        }\n        return call(context, self, clazz, name, arg0, arg1, arg2);\n    }\n}\n"
            }
        ],
        "SLOC": "120",
        "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Method;\nimport java.util.function.Supplier;\n\nimport org.jruby.RubyModule;\nimport org.jruby.RubyProc;\nimport org.jruby.javasupport.JavaMethod;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ArraySupport;\n\npublic final class StaticMethodInvoker extends MethodInvoker {\n\n    public StaticMethodInvoker(RubyModule host, Supplier<Method[]> methods, String name) {\n        super(host, methods, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        JavaMethod method = (JavaMethod) findCallable(self, name, args, args.length);\n        return method.invokeStaticDirect( context, convertArguments(method, args) );\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, IRubyObject.NULL_ARRAY);\n        JavaMethod method = (JavaMethod) findCallableArityZero(self, name);\n\n        return method.invokeStaticDirect(context);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        JavaMethod method = (JavaMethod) findCallableArityOne(self, name, arg0);\n        if (method.isVarArgs()) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n\n        return method.invokeStaticDirect(context, cArg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1});\n        JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, arg1);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n\n        return method.invokeStaticDirect(context, cArg0, cArg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1, arg2});\n        JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, arg2);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        Object cArg2 = arg2.toJava(paramTypes[2]);\n\n        return method.invokeStaticDirect(context, cArg0, cArg1, cArg2);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if (block.isGiven()) {\n            final int len = args.length;\n            // too much array creation!\n            IRubyObject[] newArgs = ArraySupport.newCopy(args, RubyProc.newProc(context.runtime, block, block.type));\n\n            JavaMethod method = (JavaMethod) findCallable(self, name, newArgs, len + 1);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n\n            Object[] convertedArgs = new Object[len + 1];\n            for (int i = 0; i < len + 1; i++) {\n                convertedArgs[i] = newArgs[i].toJava(paramTypes[i]);\n            }\n\n            return method.invokeStaticDirect(context, convertedArgs);\n        }\n        return call(context, self, clazz, name, args);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityOne(self, name, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = proc.toJava(paramTypes[0]);\n\n            return method.invokeStaticDirect(context, cArg0);\n        }\n        return call(context, self, clazz, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = proc.toJava(paramTypes[1]);\n\n            return method.invokeStaticDirect(context, cArg0, cArg1);\n        }\n        return call(context, self, clazz, name, arg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = proc.toJava(paramTypes[2]);\n\n            return method.invokeStaticDirect(context, cArg0, cArg1, cArg2);\n\n        }\n        return call(context, self, clazz, name, arg0, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityFour(self, name, arg0, arg1, arg2, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = arg2.toJava(paramTypes[2]);\n            Object cArg3 = proc.toJava(paramTypes[3]);\n\n            return method.invokeStaticDirect(context, cArg0, cArg1, cArg2, cArg3);\n        }\n        return call(context, self, clazz, name, arg0, arg1, arg2);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/SingletonMethodInvoker.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/java/invokers/InstanceMethodInvoker.java",
                "SLOC": "130",
                "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Method;\nimport java.util.function.Supplier;\n\nimport org.jruby.RubyModule;\nimport org.jruby.RubyProc;\nimport org.jruby.java.proxies.JavaProxy;\nimport org.jruby.javasupport.JavaMethod;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ArraySupport;\n\npublic final class InstanceMethodInvoker extends MethodInvoker {\n    public InstanceMethodInvoker(RubyModule host, Supplier<Method[]> methods, String name) {\n        super(host, methods, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallable(self, name, args, args.length);\n        return method.invokeDirect( context, proxy.getObject(), convertArguments(method, args) );\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, IRubyObject.NULL_ARRAY);\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityZero(self, name);\n        return method.invokeDirect(context, proxy.getObject());\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityOne(self, name, arg0);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, arg1);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1, arg2});\n        JavaProxy proxy = castJavaProxy(self);\n        JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, arg2);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        Object cArg2 = arg2.toJava(paramTypes[2]);\n        return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if ( block.isGiven() ) {\n            JavaProxy proxy = castJavaProxy(self);\n            final int len = args.length;\n            // these extra arrays are really unfortunate; split some of these paths out to eliminate?\n            IRubyObject[] newArgs = ArraySupport.newCopy(args, RubyProc.newProc(context.runtime, block, block.type));\n\n            JavaMethod method = (JavaMethod) findCallable(self, name, newArgs, len + 1);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n\n            Object[] convertedArgs = new Object[len + 1];\n            for (int i = 0; i < len + 1; i++) {\n                convertedArgs[i] = newArgs[i].toJava(paramTypes[i]);\n            }\n\n            return method.invokeDirect(context, proxy.getObject(), convertedArgs);\n        }\n        return call(context, self, clazz, name, args);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityOne(self, name, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = proc.toJava(paramTypes[0]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0);\n        }\n        return call(context, self, clazz, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = proc.toJava(paramTypes[1]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1);\n        }\n        return call(context, self, clazz, name, arg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = proc.toJava(paramTypes[2]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2);\n        }\n        return call(context, self, clazz, name, arg0, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (block.isGiven()) {\n            JavaProxy proxy = castJavaProxy(self);\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod)findCallableArityFour(self, name, arg0, arg1, arg2, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = arg2.toJava(paramTypes[2]);\n            Object cArg3 = proc.toJava(paramTypes[3]);\n            return method.invokeDirect(context, proxy.getObject(), cArg0, cArg1, cArg2, cArg3);\n        }\n        return call(context, self, clazz, name, arg0, arg1, arg2);\n    }\n}\n"
            }
        ],
        "SLOC": "125",
        "content": "package org.jruby.java.invokers;\n\nimport java.lang.reflect.Method;\nimport java.util.List;\nimport java.util.function.Supplier;\n\nimport org.jruby.RubyClass;\nimport org.jruby.RubyModule;\nimport org.jruby.RubyProc;\nimport org.jruby.javasupport.JavaMethod;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic final class SingletonMethodInvoker extends MethodInvoker {\n\n    private final Object singleton;\n\n    public SingletonMethodInvoker(Object singleton, RubyClass host, Supplier<Method[]> methods, String name) {\n        super(host, methods, name);\n        this.singleton = singleton;\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args) {\n        JavaMethod method = (JavaMethod) findCallable(self, name, args, args.length);\n        return method.invokeDirect( context, singleton, convertArguments(method, args) );\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, IRubyObject.NULL_ARRAY);\n        JavaMethod method = (JavaMethod) findCallableArityZero(self, name);\n\n        return method.invokeDirect(context, singleton);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        JavaMethod method = (JavaMethod) findCallableArityOne(self, name, arg0);\n        if (method.isVarArgs()) return call(context, self, clazz, name, new IRubyObject[] {arg0});\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n\n        return method.invokeDirect(context, singleton, cArg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1});\n        JavaMethod method = (JavaMethod)findCallableArityTwo(self, name, arg0, arg1);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n\n        return method.invokeDirect(context, singleton, cArg0, cArg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        if (javaVarargsCallables != null) return call(context, self, clazz, name, new IRubyObject[] {arg0, arg1, arg2});\n        JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, arg2);\n        final Class<?>[] paramTypes = method.getParameterTypes();\n        Object cArg0 = arg0.toJava(paramTypes[0]);\n        Object cArg1 = arg1.toJava(paramTypes[1]);\n        Object cArg2 = arg2.toJava(paramTypes[2]);\n\n        return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject[] args, Block block) {\n        if (block.isGiven()) {\n            int len = args.length;\n            // too much array creation!\n            Object[] convertedArgs = new Object[len + 1];\n            IRubyObject[] intermediate = new IRubyObject[len + 1];\n            System.arraycopy(args, 0, intermediate, 0, len);\n            intermediate[len] = RubyProc.newProc(context.runtime, block, block.type);\n\n            JavaMethod method = (JavaMethod) findCallable(self, name, intermediate, len + 1);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            for (int i = 0; i < len + 1; i++) {\n                convertedArgs[i] = intermediate[i].toJava(paramTypes[i]);\n            }\n\n            return method.invokeDirect(context, singleton, convertedArgs);\n        }\n        return call(context, self, clazz, name, args);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityOne(self, name, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = proc.toJava(paramTypes[0]);\n\n            return method.invokeDirect(context, singleton, cArg0);\n        }\n        return call(context, self, clazz, name);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityTwo(self, name, arg0, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = proc.toJava(paramTypes[1]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1);\n        }\n        return call(context, self, clazz, name, arg0);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityThree(self, name, arg0, arg1, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = proc.toJava(paramTypes[2]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2);\n        }\n        return call(context, self, clazz, name, arg0, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject self, RubyModule clazz, String name, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        if (block.isGiven()) {\n            RubyProc proc = RubyProc.newProc(context.runtime, block, block.type);\n            JavaMethod method = (JavaMethod) findCallableArityFour(self, name, arg0, arg1, arg2, proc);\n            final Class<?>[] paramTypes = method.getParameterTypes();\n            Object cArg0 = arg0.toJava(paramTypes[0]);\n            Object cArg1 = arg1.toJava(paramTypes[1]);\n            Object cArg2 = arg2.toJava(paramTypes[2]);\n            Object cArg3 = proc.toJava(paramTypes[3]);\n\n            return method.invokeDirect(context, singleton, cArg0, cArg1, cArg2, cArg3);\n        }\n        return call(context, self, clazz, name, arg0, arg1, arg2);\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/lexer/StrptimeLexer.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/lexer/StrftimeLexer.java",
                "SLOC": "505",
                "content": "/* The following code was generated by JFlex 1.4 on 9/16/13 8:59 PM */\n\n/* IMPORTANT: must compile with JFlex 1.4, JFlex 1.4.3 seems buggy with look-ahead */\n\npackage org.jruby.lexer;\n\nimport org.jruby.util.RubyDateFormatter.Token;\nimport org.jruby.util.RubyTimeOutputFormatter;\n\n\n/**\n * This class is a scanner generated by \n * <a href=\"http://www.jflex.de/\">JFlex</a> 1.4\n * on 9/16/13 8:59 PM from the specification file\n * <tt>core/src/main/java/org/jruby/lexer/StrftimeLexer.flex</tt>\n */\npublic class StrftimeLexer {\n\n  /** This character denotes the end of file */\n  public static final int YYEOF = -1;\n\n  /** initial size of the lookahead buffer */\n  private static final int ZZ_BUFFERSIZE = 16384;\n\n  /** lexical states */\n  public static final int CONVERSION = 1;\n  public static final int YYINITIAL = 0;\n\n  /** \n   * Translates characters to character classes\n   */\n  private static final String ZZ_CMAP_PACKED = \n    \"\\12\\0\\1\\0\\30\\0\\1\\1\\1\\0\\1\\14\\5\\0\\1\\4\\1\\0\\1\\1\"+\n    \"\\2\\0\\1\\3\\11\\2\\1\\12\\6\\0\\2\\4\\1\\6\\1\\4\\1\\5\\2\\4\"+\n    \"\\2\\10\\2\\0\\1\\4\\1\\10\\1\\4\\1\\7\\3\\4\\1\\10\\1\\4\\3\\10\"+\n    \"\\2\\6\\1\\4\\3\\0\\2\\1\\1\\0\\2\\4\\1\\6\\2\\10\\1\\0\\2\\4\"+\n    \"\\1\\0\\1\\4\\3\\10\\1\\4\\1\\0\\1\\4\\1\\0\\3\\4\\1\\10\\1\\4\"+\n    \"\\1\\10\\1\\6\\1\\11\\1\\13\\uff85\\0\";\n\n  /** \n   * Translates characters to character classes\n   */\n  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);\n\n  /** \n   * Translates DFA states to action switch labels.\n   */\n  private static final int [] ZZ_ACTION = zzUnpackAction();\n\n  private static final String ZZ_ACTION_PACKED_0 =\n    \"\\2\\0\\2\\1\\1\\2\\3\\0\\3\\3\\1\\4\\3\\3\\1\\5\"+\n    \"\\3\\0\\1\\6\\10\\0\";\n\n  private static int [] zzUnpackAction() {\n    int [] result = new int[28];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackAction(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n\n  /** \n   * Translates a state to a row index in the transition table\n   */\n  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();\n\n  private static final String ZZ_ROWMAP_PACKED_0 =\n    \"\\0\\0\\0\\15\\0\\32\\0\\47\\0\\64\\0\\101\\0\\116\\0\\133\"+\n    \"\\0\\64\\0\\150\\0\\165\\0\\64\\0\\202\\0\\217\\0\\234\\0\\64\"+\n    \"\\0\\251\\0\\150\\0\\165\\0\\64\\0\\266\\0\\303\\0\\320\\0\\335\"+\n    \"\\0\\352\\0\\367\\0\\u0104\\0\\u0111\";\n\n  private static int [] zzUnpackRowMap() {\n    int [] result = new int[28];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackRowMap(String packed, int offset, int [] result) {\n    int i = 0;  /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int high = packed.charAt(i++) << 16;\n      result[j++] = high | packed.charAt(i++);\n    }\n    return j;\n  }\n\n  /** \n   * The transition table of the DFA\n   */\n  private static final int [] ZZ_TRANS = zzUnpackTrans();\n\n  private static final String ZZ_TRANS_PACKED_0 =\n    \"\\14\\3\\1\\4\\4\\0\\1\\5\\1\\6\\1\\5\\1\\7\\2\\5\"+\n    \"\\1\\10\\1\\5\\1\\0\\14\\11\\1\\0\\1\\11\\1\\12\\1\\13\"+\n    \"\\1\\12\\1\\14\\1\\15\\1\\14\\1\\16\\2\\14\\1\\17\\1\\14\"+\n    \"\\1\\20\\23\\0\\1\\5\\2\\0\\1\\5\\13\\0\\2\\5\\15\\0\"+\n    \"\\1\\21\\1\\5\\2\\0\\1\\22\\1\\23\\1\\22\\1\\24\\1\\25\"+\n    \"\\1\\24\\1\\26\\2\\24\\1\\27\\1\\24\\3\\0\\2\\23\\1\\24\"+\n    \"\\1\\25\\1\\24\\1\\26\\2\\24\\1\\27\\1\\24\\7\\0\\1\\14\"+\n    \"\\2\\0\\1\\14\\13\\0\\2\\14\\15\\0\\1\\30\\1\\14\\13\\0\"+\n    \"\\1\\31\\1\\5\\7\\0\\1\\24\\2\\0\\1\\24\\13\\0\\2\\24\"+\n    \"\\15\\0\\1\\32\\1\\24\\13\\0\\1\\33\\1\\14\\14\\0\\1\\5\"+\n    \"\\13\\0\\1\\34\\1\\24\\14\\0\\1\\14\\14\\0\\1\\24\\1\\0\";\n\n  private static int [] zzUnpackTrans() {\n    int [] result = new int[286];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackTrans(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      value--;\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n\n  /* error codes */\n  private static final int ZZ_UNKNOWN_ERROR = 0;\n  private static final int ZZ_NO_MATCH = 1;\n  private static final int ZZ_PUSHBACK_2BIG = 2;\n\n  /* error messages for the codes above */\n  private static final String ZZ_ERROR_MSG[] = {\n    \"Unkown internal scanner error\",\n    \"Error: could not match input\",\n    \"Error: pushback value was too large\"\n  };\n\n  /**\n   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>\n   */\n  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();\n\n  private static final String ZZ_ATTRIBUTE_PACKED_0 =\n    \"\\2\\0\\2\\3\\1\\11\\3\\0\\1\\15\\2\\7\\1\\15\\3\\5\"+\n    \"\\1\\11\\1\\0\\2\\2\\1\\15\\10\\0\";\n\n  private static int [] zzUnpackAttribute() {\n    int [] result = new int[28];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackAttribute(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n  /** the input device */\n  private java.io.Reader zzReader;\n\n  /** the current state of the DFA */\n  private int zzState;\n\n  /** the current lexical state */\n  private int zzLexicalState = YYINITIAL;\n\n  /** this buffer contains the current text to be matched and is\n      the source of the yytext() string */\n  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];\n\n  /** the textposition at the last accepting state */\n  private int zzMarkedPos;\n\n  /** the textposition at the last state to be included in yytext */\n  private int zzPushbackPos;\n\n  /** the current text position in the buffer */\n  private int zzCurrentPos;\n\n  /** startRead marks the beginning of the yytext() string in the buffer */\n  private int zzStartRead;\n\n  /** endRead marks the last character in the buffer, that has been read\n      from input */\n  private int zzEndRead;\n\n  /** number of newlines encountered up to the start of the matched text */\n  private int yyline;\n\n  /** the number of characters up to the start of the matched text */\n  private int yychar;\n\n  /**\n   * the number of characters from the last newline up to the start of the \n   * matched text\n   */\n  private int yycolumn;\n\n  /** \n   * zzAtBOL == true <=> the scanner is currently at the beginning of a line\n   */\n  private boolean zzAtBOL = true;\n\n  /** zzAtEOF == true <=> the scanner is at the EOF */\n  private boolean zzAtEOF;\n\n  /* user code: */\n    StringBuilder stringBuf = new StringBuilder();\n\n    public Token rawString() {\n        String str = stringBuf.toString();\n        stringBuf.setLength(0);\n        return Token.str(str);\n    }\n\n    public Token directive(char c) {\n        Token token;\n        if (c == 'z') {\n            int colons = yylength()-1; // can only be colons except the 'z'\n            return Token.zoneOffsetColons(colons);\n        } else if ((token = Token.format(c)) != null) {\n            return token;\n        } else {\n            return Token.special(c);\n        }\n    }\n\n    public Token formatter(String str) {\n        int len = str.length();\n        int i = 1; // first char is '%'\n        char c;\n        // look for flags\n        while (i < len && ((c = str.charAt(i)) < '1' || c > '9')) i++;\n        String flags = str.substring(1, i);\n        int width = 0;\n        while (i < len) {\n            width = 10 * width + (str.charAt(i) - '0');\n            i++;\n        }\n        return Token.formatter(new RubyTimeOutputFormatter(flags, width));\n    }\n\n\n  /**\n   * Creates a new scanner\n   * There is also a java.io.InputStream version of this constructor.\n   *\n   * @param   in  the java.io.Reader to read input from.\n   */\n  public StrftimeLexer(java.io.Reader in) {\n    this.zzReader = in;\n  }\n\n  /**\n   * Creates a new scanner.\n   * There is also java.io.Reader version of this constructor.\n   *\n   * @param   in  the java.io.Inputstream to read input from.\n   */\n  public StrftimeLexer(java.io.InputStream in) {\n    this(new java.io.InputStreamReader(in));\n  }\n\n  /** \n   * Unpacks the compressed character translation table.\n   *\n   * @param packed   the packed character translation table\n   * @return         the unpacked character translation table\n   */\n  private static char [] zzUnpackCMap(String packed) {\n    char [] map = new char[0x10000];\n    int i = 0;  /* index in packed string  */\n    int j = 0;  /* index in unpacked array */\n    while (i < 110) {\n      int  count = packed.charAt(i++);\n      char value = packed.charAt(i++);\n      do map[j++] = value; while (--count > 0);\n    }\n    return map;\n  }\n\n\n  /**\n   * Refills the input buffer.\n   *\n   * @return      <code>false</code>, iff there was new input.\n   * \n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  private boolean zzRefill() throws java.io.IOException {\n\n    /* first: make room (if you can) */\n    if (zzStartRead > 0) {\n      System.arraycopy(zzBuffer, zzStartRead,\n                       zzBuffer, 0,\n                       zzEndRead-zzStartRead);\n\n      /* translate stored positions */\n      zzEndRead-= zzStartRead;\n      zzCurrentPos-= zzStartRead;\n      zzMarkedPos-= zzStartRead;\n      zzPushbackPos-= zzStartRead;\n      zzStartRead = 0;\n    }\n\n    /* is the buffer big enough? */\n    if (zzCurrentPos >= zzBuffer.length) {\n      /* if not: blow it up */\n      char newBuffer[] = new char[zzCurrentPos*2];\n      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);\n      zzBuffer = newBuffer;\n    }\n\n    /* finally: fill the buffer with new input */\n    int numRead = zzReader.read(zzBuffer, zzEndRead,\n                                            zzBuffer.length-zzEndRead);\n\n    if (numRead < 0) {\n      return true;\n    }\n    else {\n      zzEndRead+= numRead;\n      return false;\n    }\n  }\n\n    \n  /**\n   * Closes the input stream.\n   */\n  public final void yyclose() throws java.io.IOException {\n    zzAtEOF = true;            /* indicate end of file */\n    zzEndRead = zzStartRead;  /* invalidate buffer    */\n\n    if (zzReader != null)\n      zzReader.close();\n  }\n\n\n  /**\n   * Resets the scanner to read from a new input stream.\n   * Does not close the old reader.\n   *\n   * All internal variables are reset, the old input stream \n   * <b>cannot</b> be reused (internal buffer is discarded and lost).\n   * Lexical state is set to <tt>ZZ_INITIAL</tt>.\n   *\n   * @param reader   the new input stream \n   */\n  public final void yyreset(java.io.Reader reader) {\n    zzReader = reader;\n    zzAtBOL  = true;\n    zzAtEOF  = false;\n    zzEndRead = zzStartRead = 0;\n    zzCurrentPos = zzMarkedPos = zzPushbackPos = 0;\n    yyline = yychar = yycolumn = 0;\n    zzLexicalState = YYINITIAL;\n  }\n\n\n  /**\n   * Returns the current lexical state.\n   */\n  public final int yystate() {\n    return zzLexicalState;\n  }\n\n\n  /**\n   * Enters a new lexical state\n   *\n   * @param newState the new lexical state\n   */\n  public final void yybegin(int newState) {\n    zzLexicalState = newState;\n  }\n\n\n  /**\n   * Returns the text matched by the current regular expression.\n   */\n  public final String yytext() {\n    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );\n  }\n\n\n  /**\n   * Returns the character at position <tt>pos</tt> from the \n   * matched text. \n   * \n   * It is equivalent to yytext().charAt(pos), but faster\n   *\n   * @param pos the position of the character to fetch. \n   *            A value from 0 to yylength()-1.\n   *\n   * @return the character at position pos\n   */\n  public final char yycharat(int pos) {\n    return zzBuffer[zzStartRead+pos];\n  }\n\n\n  /**\n   * Returns the length of the matched text region.\n   */\n  public final int yylength() {\n    return zzMarkedPos-zzStartRead;\n  }\n\n\n  /**\n   * Reports an error that occurred while scanning.\n   *\n   * In a wellformed scanner (no or only correct usage of \n   * yypushback(int) and a match-all fallback rule) this method \n   * will only be called with things that \"Can't Possibly Happen\".\n   * If this method is called, something is seriously wrong\n   * (e.g. a JFlex bug producing a faulty scanner etc.).\n   *\n   * Usual syntax/scanner level error handling should be done\n   * in error fallback rules.\n   *\n   * @param   errorCode  the code of the errormessage to display\n   */\n  private void zzScanError(int errorCode) {\n    String message;\n    try {\n      message = ZZ_ERROR_MSG[errorCode];\n    }\n    catch (ArrayIndexOutOfBoundsException e) {\n      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];\n    }\n\n    throw new Error(message);\n  } \n\n\n  /**\n   * Pushes the specified amount of characters back into the input stream.\n   *\n   * They will be read again by then next call of the scanning method\n   *\n   * @param number  the number of characters to be read again.\n   *                This number must not be greater than yylength()!\n   */\n  public void yypushback(int number)  {\n    if ( number > yylength() )\n      zzScanError(ZZ_PUSHBACK_2BIG);\n\n    zzMarkedPos -= number;\n  }\n\n\n  /**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public org.jruby.util.RubyDateFormatter.Token yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n    int zzPushbackPosL = zzPushbackPos = -1;\n    boolean zzWasPushback;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = zzLexicalState;\n\n      zzWasPushback = false;\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            zzPushbackPos = zzPushbackPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            zzPushbackPosL = zzPushbackPos;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 2) == 2 )\n            zzPushbackPosL = zzCurrentPosL;\n\n          if ( (zzAttributes & 1) == 1 ) {\n            zzWasPushback = (zzAttributes & 4) == 4;\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n      if (zzWasPushback)\n        zzMarkedPos = zzPushbackPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 5: \n          { return Token.str(\"%\");\n          }\n        case 7: break;\n        case 2: \n          { yybegin(YYINITIAL); return directive(yycharat(yylength()-1));\n          }\n        case 8: break;\n        case 3: \n          { stringBuf.append(yycharat(0));\n          }\n        case 9: break;\n        case 1: \n          { stringBuf.append(yycharat(0)); return rawString();\n          }\n        case 10: break;\n        case 6: \n          { yybegin(CONVERSION); return formatter(yytext());\n          }\n        case 11: break;\n        case 4: \n          { yybegin(CONVERSION);\n          }\n        case 12: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return null;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }\n\n\n}\n"
            }
        ],
        "SLOC": "487",
        "content": "/* The following code was generated by JFlex 1.4 on 6/16/17 3:03 PM */\n\n/**\n * IMPORTANT: must compile with JFlex 1.4, JFlex 1.4.3 seems buggy with look-ahead\n *\n * How to generate StrptimeLexer.java\n * 1. Download and install JFlex 1.4 from https://sourceforge.net/projects/jflex/files/jflex/1.4/\n * 2. Execute bin/jflex command to generate StrptimeLexer.java\n *    $ bin/jflex core/src/main/java/org/jruby/lexer/StrptimeLexer.java\n */\n\npackage org.jruby.lexer;\n\nimport org.jruby.util.StrptimeToken;\n\n\n/**\n * This class is a scanner generated by \n * <a href=\"http://www.jflex.de/\">JFlex</a> 1.4\n * on 6/16/17 3:03 PM from the specification file\n * <tt>core/src/main/java/org/jruby/lexer/StrptimeLexer.flex</tt>\n */\npublic class StrptimeLexer {\n\n  /** This character denotes the end of file */\n  public static final int YYEOF = -1;\n\n  /** initial size of the lookahead buffer */\n  private static final int ZZ_BUFFERSIZE = 16384;\n\n  /** lexical states */\n  public static final int CONVERSION = 1;\n  public static final int YYINITIAL = 0;\n\n  /** \n   * Translates characters to character classes\n   */\n  private static final String ZZ_CMAP_PACKED = \n    \"\\12\\0\\1\\0\\30\\0\\1\\0\\1\\0\\1\\11\\5\\0\\1\\1\\1\\0\\1\\0\"+\n    \"\\2\\0\\1\\0\\11\\0\\1\\7\\6\\0\\2\\1\\1\\3\\1\\1\\1\\2\\2\\1\"+\n    \"\\2\\5\\2\\0\\1\\1\\1\\5\\1\\1\\1\\4\\3\\1\\1\\5\\1\\1\\3\\5\"+\n    \"\\2\\3\\1\\1\\3\\0\\2\\0\\1\\0\\2\\1\\1\\3\\2\\5\\1\\0\\2\\1\"+\n    \"\\1\\0\\3\\1\\1\\5\\1\\1\\1\\0\\1\\1\\1\\0\\3\\1\\1\\5\\1\\1\"+\n    \"\\1\\5\\1\\3\\1\\6\\1\\10\\uff85\\0\";\n\n  /** \n   * Translates characters to character classes\n   */\n  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);\n\n  /** \n   * Translates DFA states to action switch labels.\n   */\n  private static final int [] ZZ_ACTION = zzUnpackAction();\n\n  private static final String ZZ_ACTION_PACKED_0 =\n    \"\\2\\0\\2\\1\\1\\2\\3\\0\\1\\3\\1\\4\\3\\3\\1\\5\"+\n    \"\\4\\0\";\n\n  private static int [] zzUnpackAction() {\n    int [] result = new int[18];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackAction(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n\n  /** \n   * Translates a state to a row index in the transition table\n   */\n  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();\n\n  private static final String ZZ_ROWMAP_PACKED_0 =\n    \"\\0\\0\\0\\12\\0\\24\\0\\36\\0\\50\\0\\62\\0\\74\\0\\106\"+\n    \"\\0\\50\\0\\50\\0\\120\\0\\132\\0\\144\\0\\50\\0\\156\\0\\170\"+\n    \"\\0\\202\\0\\214\";\n\n  private static int [] zzUnpackRowMap() {\n    int [] result = new int[18];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackRowMap(String packed, int offset, int [] result) {\n    int i = 0;  /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int high = packed.charAt(i++) << 16;\n      result[j++] = high | packed.charAt(i++);\n    }\n    return j;\n  }\n\n  /** \n   * The transition table of the DFA\n   */\n  private static final int [] ZZ_TRANS = zzUnpackTrans();\n\n  private static final String ZZ_TRANS_PACKED_0 =\n    \"\\11\\3\\1\\4\\1\\0\\1\\5\\1\\6\\1\\5\\1\\7\\2\\5\"+\n    \"\\1\\10\\1\\5\\1\\0\\11\\11\\1\\0\\1\\11\\1\\12\\1\\13\"+\n    \"\\1\\12\\1\\14\\2\\12\\1\\15\\1\\12\\1\\16\\15\\0\\1\\5\"+\n    \"\\2\\0\\1\\5\\10\\0\\2\\5\\12\\0\\1\\17\\1\\5\\4\\0\"+\n    \"\\1\\12\\2\\0\\1\\12\\10\\0\\2\\12\\12\\0\\1\\20\\1\\12\"+\n    \"\\10\\0\\1\\21\\1\\5\\10\\0\\1\\22\\1\\12\\11\\0\\1\\5\"+\n    \"\\11\\0\\1\\12\\1\\0\";\n\n  private static int [] zzUnpackTrans() {\n    int [] result = new int[150];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackTrans(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      value--;\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n\n  /* error codes */\n  private static final int ZZ_UNKNOWN_ERROR = 0;\n  private static final int ZZ_NO_MATCH = 1;\n  private static final int ZZ_PUSHBACK_2BIG = 2;\n\n  /* error messages for the codes above */\n  private static final String ZZ_ERROR_MSG[] = {\n    \"Unkown internal scanner error\",\n    \"Error: could not match input\",\n    \"Error: pushback value was too large\"\n  };\n\n  /**\n   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>\n   */\n  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();\n\n  private static final String ZZ_ATTRIBUTE_PACKED_0 =\n    \"\\2\\0\\2\\3\\1\\11\\3\\0\\2\\15\\3\\5\\1\\11\\4\\0\";\n\n  private static int [] zzUnpackAttribute() {\n    int [] result = new int[18];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }\n\n  private static int zzUnpackAttribute(String packed, int offset, int [] result) {\n    int i = 0;       /* index in packed string  */\n    int j = offset;  /* index in unpacked array */\n    int l = packed.length();\n    while (i < l) {\n      int count = packed.charAt(i++);\n      int value = packed.charAt(i++);\n      do result[j++] = value; while (--count > 0);\n    }\n    return j;\n  }\n\n  /** the input device */\n  private java.io.Reader zzReader;\n\n  /** the current state of the DFA */\n  private int zzState;\n\n  /** the current lexical state */\n  private int zzLexicalState = YYINITIAL;\n\n  /** this buffer contains the current text to be matched and is\n      the source of the yytext() string */\n  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];\n\n  /** the textposition at the last accepting state */\n  private int zzMarkedPos;\n\n  /** the textposition at the last state to be included in yytext */\n  private int zzPushbackPos;\n\n  /** the current text position in the buffer */\n  private int zzCurrentPos;\n\n  /** startRead marks the beginning of the yytext() string in the buffer */\n  private int zzStartRead;\n\n  /** endRead marks the last character in the buffer, that has been read\n      from input */\n  private int zzEndRead;\n\n  /** number of newlines encountered up to the start of the matched text */\n  private int yyline;\n\n  /** the number of characters up to the start of the matched text */\n  private int yychar;\n\n  /**\n   * the number of characters from the last newline up to the start of the \n   * matched text\n   */\n  private int yycolumn;\n\n  /** \n   * zzAtBOL == true <=> the scanner is currently at the beginning of a line\n   */\n  private boolean zzAtBOL = true;\n\n  /** zzAtEOF == true <=> the scanner is at the EOF */\n  private boolean zzAtEOF;\n\n  /* user code: */\n    StringBuilder stringBuf = new StringBuilder();\n\n    public StrptimeToken rawString() {\n        String str = stringBuf.toString();\n        stringBuf.setLength(0);\n        return StrptimeToken.str(str);\n    }\n\n    public StrptimeToken directive(char c) {\n        StrptimeToken token;\n        if (c == 'z') {\n            int colons = yylength()-1; // can only be colons except the 'z'\n            return StrptimeToken.zoneOffsetColons(colons);\n        } else if ((token = StrptimeToken.format(c)) != null) {\n            return token;\n        } else {\n            return StrptimeToken.special(c);\n        }\n    }\n\n\n  /**\n   * Creates a new scanner\n   * There is also a java.io.InputStream version of this constructor.\n   *\n   * @param   in  the java.io.Reader to read input from.\n   */\n  public StrptimeLexer(java.io.Reader in) {\n    this.zzReader = in;\n  }\n\n  /**\n   * Creates a new scanner.\n   * There is also java.io.Reader version of this constructor.\n   *\n   * @param   in  the java.io.Inputstream to read input from.\n   */\n  public StrptimeLexer(java.io.InputStream in) {\n    this(new java.io.InputStreamReader(in));\n  }\n\n  /** \n   * Unpacks the compressed character translation table.\n   *\n   * @param packed   the packed character translation table\n   * @return         the unpacked character translation table\n   */\n  private static char [] zzUnpackCMap(String packed) {\n    char [] map = new char[0x10000];\n    int i = 0;  /* index in packed string  */\n    int j = 0;  /* index in unpacked array */\n    while (i < 110) {\n      int  count = packed.charAt(i++);\n      char value = packed.charAt(i++);\n      do map[j++] = value; while (--count > 0);\n    }\n    return map;\n  }\n\n\n  /**\n   * Refills the input buffer.\n   *\n   * @return      <code>false</code>, iff there was new input.\n   * \n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  private boolean zzRefill() throws java.io.IOException {\n\n    /* first: make room (if you can) */\n    if (zzStartRead > 0) {\n      System.arraycopy(zzBuffer, zzStartRead,\n                       zzBuffer, 0,\n                       zzEndRead-zzStartRead);\n\n      /* translate stored positions */\n      zzEndRead-= zzStartRead;\n      zzCurrentPos-= zzStartRead;\n      zzMarkedPos-= zzStartRead;\n      zzPushbackPos-= zzStartRead;\n      zzStartRead = 0;\n    }\n\n    /* is the buffer big enough? */\n    if (zzCurrentPos >= zzBuffer.length) {\n      /* if not: blow it up */\n      char newBuffer[] = new char[zzCurrentPos*2];\n      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);\n      zzBuffer = newBuffer;\n    }\n\n    /* finally: fill the buffer with new input */\n    int numRead = zzReader.read(zzBuffer, zzEndRead,\n                                            zzBuffer.length-zzEndRead);\n\n    if (numRead < 0) {\n      return true;\n    }\n    else {\n      zzEndRead+= numRead;\n      return false;\n    }\n  }\n\n    \n  /**\n   * Closes the input stream.\n   */\n  public final void yyclose() throws java.io.IOException {\n    zzAtEOF = true;            /* indicate end of file */\n    zzEndRead = zzStartRead;  /* invalidate buffer    */\n\n    if (zzReader != null)\n      zzReader.close();\n  }\n\n\n  /**\n   * Resets the scanner to read from a new input stream.\n   * Does not close the old reader.\n   *\n   * All internal variables are reset, the old input stream \n   * <b>cannot</b> be reused (internal buffer is discarded and lost).\n   * Lexical state is set to <tt>ZZ_INITIAL</tt>.\n   *\n   * @param reader   the new input stream \n   */\n  public final void yyreset(java.io.Reader reader) {\n    zzReader = reader;\n    zzAtBOL  = true;\n    zzAtEOF  = false;\n    zzEndRead = zzStartRead = 0;\n    zzCurrentPos = zzMarkedPos = zzPushbackPos = 0;\n    yyline = yychar = yycolumn = 0;\n    zzLexicalState = YYINITIAL;\n  }\n\n\n  /**\n   * Returns the current lexical state.\n   */\n  public final int yystate() {\n    return zzLexicalState;\n  }\n\n\n  /**\n   * Enters a new lexical state\n   *\n   * @param newState the new lexical state\n   */\n  public final void yybegin(int newState) {\n    zzLexicalState = newState;\n  }\n\n\n  /**\n   * Returns the text matched by the current regular expression.\n   */\n  public final String yytext() {\n    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );\n  }\n\n\n  /**\n   * Returns the character at position <tt>pos</tt> from the \n   * matched text. \n   * \n   * It is equivalent to yytext().charAt(pos), but faster\n   *\n   * @param pos the position of the character to fetch. \n   *            A value from 0 to yylength()-1.\n   *\n   * @return the character at position pos\n   */\n  public final char yycharat(int pos) {\n    return zzBuffer[zzStartRead+pos];\n  }\n\n\n  /**\n   * Returns the length of the matched text region.\n   */\n  public final int yylength() {\n    return zzMarkedPos-zzStartRead;\n  }\n\n\n  /**\n   * Reports an error that occured while scanning.\n   *\n   * In a wellformed scanner (no or only correct usage of \n   * yypushback(int) and a match-all fallback rule) this method \n   * will only be called with things that \"Can't Possibly Happen\".\n   * If this method is called, something is seriously wrong\n   * (e.g. a JFlex bug producing a faulty scanner etc.).\n   *\n   * Usual syntax/scanner level error handling should be done\n   * in error fallback rules.\n   *\n   * @param   errorCode  the code of the errormessage to display\n   */\n  private void zzScanError(int errorCode) {\n    String message;\n    try {\n      message = ZZ_ERROR_MSG[errorCode];\n    }\n    catch (ArrayIndexOutOfBoundsException e) {\n      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];\n    }\n\n    throw new Error(message);\n  } \n\n\n  /**\n   * Pushes the specified amount of characters back into the input stream.\n   *\n   * They will be read again by then next call of the scanning method\n   *\n   * @param number  the number of characters to be read again.\n   *                This number must not be greater than yylength()!\n   */\n  public void yypushback(int number)  {\n    if ( number > yylength() )\n      zzScanError(ZZ_PUSHBACK_2BIG);\n\n    zzMarkedPos -= number;\n  }\n\n\n  /**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public org.jruby.util.StrptimeToken yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n    int zzPushbackPosL = zzPushbackPos = -1;\n    boolean zzWasPushback;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = zzLexicalState;\n\n      zzWasPushback = false;\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            zzPushbackPos = zzPushbackPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            zzPushbackPosL = zzPushbackPos;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 2) == 2 )\n            zzPushbackPosL = zzCurrentPosL;\n\n          if ( (zzAttributes & 1) == 1 ) {\n            zzWasPushback = (zzAttributes & 4) == 4;\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n      if (zzWasPushback)\n        zzMarkedPos = zzPushbackPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 2: \n          { yybegin(YYINITIAL); return directive(yycharat(yylength()-1));\n          }\n        case 6: break;\n        case 3: \n          { stringBuf.append(yycharat(0));\n          }\n        case 7: break;\n        case 5: \n          { return StrptimeToken.str(\"%\");\n          }\n        case 8: break;\n        case 1: \n          { stringBuf.append(yycharat(0)); return rawString();\n          }\n        case 9: break;\n        case 4: \n          { yybegin(CONVERSION);\n          }\n        case 10: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return null;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }\n\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/lexer/yacc/HeredocTerm.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ripper/HeredocTerm.java",
                "SLOC": "192",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2004 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004-2007 Thomas E Enebo <enebo@acm.org>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ext.ripper;\n\nimport org.jcodings.Encoding;\nimport org.jruby.lexer.LexerSource;\nimport org.jruby.util.ByteList;\n\nimport static org.jruby.lexer.LexingCommon.*;\n\n/**\n * A lexing unit for scanning a heredoc element.\n * Example:\n * <pre>\n * foo(<<EOS, bar)\n * This is heredoc country!\n * EOF\n * \n * Where:\n * EOS = marker\n * ',bar)\\n' = lastLine\n * </pre>\n *  \n */\npublic class HeredocTerm extends StrTerm {\n    // Marker delimiting heredoc boundary\n    private final ByteList nd_lit;\n\n    // Expand variables, Indentation of final marker\n    private final int flags;\n    \n    protected final int nth;\n    \n    protected final int line;\n\n    // Portion of line right after beginning marker\n    protected final ByteList lastLine;\n    \n    public HeredocTerm(ByteList marker, int func, int nth, int line, ByteList lastLine) {\n        this.nd_lit = marker;\n        this.flags = func;\n        this.nth = nth;\n        this.line = line;\n        this.lastLine = lastLine;\n    }\n\n    public int getFlags() {\n        return flags;\n    }\n    \n    protected int error(RipperLexer lexer, int len, ByteList str, ByteList eos) {\n        lexer.compile_error(\"can't find string \\\"\" + eos.toString() + \"\\\" anywhere before EOF\");\n\n        if (lexer.delayed == null) {\n            lexer.dispatchScanEvent(RipperParser.tSTRING_CONTENT);\n        } else {\n            if (str != null) {\n                lexer.delayed.append(str);\n            } else {\n                len = lexer.lex_p - lexer.tokp;\n                if (len > 0) {\n                    lexer.delayed.append(lexer.lexb.makeShared(lexer.tokp, len));\n                }\n            }\n            lexer.dispatchDelayedToken(RipperParser.tSTRING_CONTENT);\n        }\n        lexer.lex_goto_eol();\n\n        return restore(lexer);\n    }\n    \n    protected int restore(RipperLexer lexer) {\n        lexer.heredoc_restore(this);\n        lexer.setStrTerm(new StringTerm(flags | STR_FUNC_TERM, 0, 0)); // Weird way of ending\n        \n        return RipperParser.tSTRING_CONTENT;\n    }\n    \n    @Override\n    public int parseString(RipperLexer lexer, LexerSource src) throws java.io.IOException {\n        ByteList str = null;\n        ByteList eos = nd_lit;\n        int len = nd_lit.length() - 1;\n        boolean indent = (flags & STR_FUNC_INDENT) != 0;\n        int c = lexer.nextc();\n        \n        if (c == EOF) return error(lexer, len, str, eos);\n\n        // Found end marker for this heredoc\n        if (lexer.was_bol() && lexer.whole_match_p(nd_lit, indent)) {\n            lexer.dispatchHeredocEnd();\n            lexer.heredoc_restore(this);\n            lexer.setStrTerm(null);\n            lexer.setState(EXPR_END);\n            return RipperParser.tSTRING_END;\n        }\n\n        if ((flags & STR_FUNC_EXPAND) == 0) {\n            do {\n                ByteList lbuf = lexer.lex_lastline;\n                int p = 0;\n                int pend = lexer.lex_pend;\n                if (pend > p) {\n                    switch(lexer.p(pend-1)) {\n                        case '\\n':\n                            pend--;\n                            if (pend == p || lexer.p(pend-1) == '\\r') {\n                                pend++;\n                                break;\n                            }\n                            break;\n                        case '\\r':\n                            pend--;\n                            break;\n                    }\n                }\n\n                if (lexer.getHeredocIndent() > 0) {\n                    for (long i = 0; p + i < pend && lexer.update_heredoc_indent(lexer.p(p)); i++) {}\n                    lexer.setHeredocLineIndent(0);\n                }\n\n                if (str != null) {\n                    str.append(lbuf.makeShared(p, pend - p));\n                } else {\n                    str = new ByteList(lbuf.makeShared(p, pend - p));\n                }\n                \n                if (pend < lexer.lex_pend) str.append('\\n');\n                lexer.lex_goto_eol();\n\n                if (lexer.getHeredocIndent() > 0) {\n                    lexer.setValue(lexer.createStr(str, 0));\n                    return RipperParser.tSTRING_CONTENT;\n                }\n                // MRI null checks str in this case but it is unconditionally non-null?\n                if (lexer.nextc() == -1) return error(lexer, len, null, eos);\n            } while(!lexer.whole_match_p(eos, indent));\n        } else {\n            ByteList tok = new ByteList();\n            tok.setEncoding(lexer.getEncoding());\n            if (c == '#') {\n                int token = lexer.peekVariableName(RipperParser.tSTRING_DVAR, RipperParser.tSTRING_DBEG);\n\n                int heredoc_line_indent = lexer.getHeredocLineIndent() ;\n                if (heredoc_line_indent != -1) {\n                    if (lexer.getHeredocIndent() > heredoc_line_indent) {\n                        lexer.setHeredocIndent(heredoc_line_indent);\n                    }\n                    lexer.setHeredocLineIndent(-1);\n                }\n                if (token != 0) {\n                    return token;\n                } else {\n                    tok.append(c);\n                    c = lexer.nextc();\n                }\n            }\n\n            // MRI has extra pointer which makes our code look a little bit more strange in comparison\n            do {\n                lexer.pushback(c);\n\n                StringTerm stringTerm = new StringTerm(flags, '\\0', '\\n');\n                if ((c = stringTerm.parseStringIntoBuffer(lexer, src, tok, lexer.getEncoding())) == EOF) {\n                    if (lexer.eofp) return error(lexer, len, str, eos);\n                    return restore(lexer);\n                }\n                if (c != '\\n') {\n                    lexer.setValue(lexer.createStr(tok, 0));\n                    lexer.flush_string_content(stringTerm.encodingOut);\n                    return RipperParser.tSTRING_CONTENT;\n                }\n                tok.append(lexer.nextc());\n\n                if (lexer.getHeredocIndent() > 0) {\n                    lexer.lex_goto_eol();\n                    lexer.setValue(lexer.createStr(tok, 0));\n                    lexer.flush_string_content(stringTerm.encodingOut);\n                    return RipperParser.tSTRING_CONTENT;\n                }\n\n                if ((c = lexer.nextc()) == EOF) return error(lexer, len, str, eos);\n            } while (!lexer.whole_match_p(eos, indent));\n            str = tok;\n        }\n        \n        lexer.pushback(c);\n        lexer.setValue(lexer.createStr(str, 0));\n        lexer.flush_string_content(lexer.getEncoding());\n        return RipperParser.tSTRING_CONTENT;\n    }\n}\n"
            }
        ],
        "SLOC": "170",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2004 Jan Arne Petersen <jpetersen@uni-bonn.de>\n * Copyright (C) 2004-2007 Thomas E Enebo <enebo@acm.org>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.lexer.yacc;\n\nimport org.jcodings.Encoding;\nimport org.jruby.parser.RubyParser;\nimport org.jruby.util.ByteList;\n\nimport static org.jruby.lexer.LexingCommon.*;\n\n/**\n * A lexing unit for scanning a heredoc element.\n * Example:\n * <pre>\n * foo(<<EOS, bar)\n * This is heredoc country!\n * EOF\n * \n * Where:\n * EOS = marker\n * ',bar)\\n' = lastLine\n * </pre>\n *  \n */\npublic class HeredocTerm extends StrTerm {\n    // Marker delimiting heredoc boundary\n    private final ByteList nd_lit;\n\n    // Expand variables, Indentation of final marker\n    private final int flags;\n\n    protected final int nth;\n\n    protected final int line;\n\n    // Portion of line right after beginning marker\n    protected final ByteList lastLine;\n\n    public HeredocTerm(ByteList marker, int func, int nth, int line, ByteList lastLine) {\n        this.nd_lit = marker;\n        this.flags = func;\n        this.nth = nth;\n        this.line = line;\n        this.lastLine = lastLine;\n    }\n\n    public int getFlags() {\n        return flags;\n    }\n\n    protected int error(RubyLexer lexer, int len, ByteList str, ByteList eos) {\n        lexer.compile_error(\"can't find string \\\"\" + eos.toString() + \"\\\" anywhere before EOF\");\n        return -1;\n    }\n\n    protected int restore(RubyLexer lexer) {\n        lexer.heredoc_restore(this);\n        lexer.setStrTerm(new StringTerm(flags | STR_FUNC_TERM, 0, 0, line)); // weird way to terminate heredoc.\n\n        return EOF;\n    }\n\n    @Override\n    public int parseString(RubyLexer lexer) throws java.io.IOException {\n        ByteList str = null;\n        ByteList eos = nd_lit;\n        int len = nd_lit.length() - 1;\n        boolean indent = (flags & STR_FUNC_INDENT) != 0;\n        int c = lexer.nextc();\n\n        if (c == EOF) return error(lexer, len, str, eos);\n\n        // Found end marker for this heredoc\n        if (lexer.was_bol() && lexer.whole_match_p(nd_lit, indent)) {\n            lexer.heredoc_restore(this);\n            lexer.setStrTerm(null);\n            lexer.setState(EXPR_END);\n            return RubyParser.tSTRING_END;\n        }\n\n        if ((flags & STR_FUNC_EXPAND) == 0) {\n            do {\n                ByteList lbuf = lexer.lex_lastline;\n                int p = 0;\n                int pend = lexer.lex_pend;\n                if (pend > p) {\n                    switch (lexer.p(pend - 1)) {\n                        case '\\n':\n                            pend--;\n                            if (pend == p || lexer.p(pend - 1) == '\\r') {\n                                pend++;\n                                break;\n                            }\n                            break;\n                        case '\\r':\n                            pend--;\n                            break;\n                    }\n                }\n\n                if (lexer.getHeredocIndent() > 0) {\n                    for (int i = 0; p + i < pend && lexer.update_heredoc_indent(lexer.p(p+i)); i++) {}\n                    lexer.setHeredocLineIndent(0);\n                }\n\n                if (str != null) {\n                    str.append(lbuf.makeShared(p, pend - p));\n                } else {\n                    str = new ByteList(lbuf.makeShared(p, pend - p));\n                }\n\n                if (pend < lexer.lex_pend) str.append('\\n');\n                lexer.lex_goto_eol();\n\n                if (lexer.getHeredocIndent() > 0) {\n                    lexer.setValue(lexer.createStr(str, 0));\n                    return RubyParser.tSTRING_CONTENT;\n                }\n                // MRI null checks str in this case but it is unconditionally non-null?\n                if (lexer.nextc() == -1) return error(lexer, len, null, eos);\n            } while (!lexer.whole_match_p(eos, indent));\n        } else {\n            ByteList tok = new ByteList();\n            tok.setEncoding(lexer.getEncoding());\n            if (c == '#') {\n                int token = lexer.peekVariableName(RubyParser.tSTRING_DVAR, RubyParser.tSTRING_DBEG);\n\n                // FIXME: MRI does not have this code...but we fail some cases with it in MRI test_syntax.rb\n                int heredoc_line_indent = lexer.getHeredocLineIndent();\n                if (heredoc_line_indent != -1) {\n                    if (lexer.getHeredocIndent() > heredoc_line_indent) {\n                        lexer.setHeredocIndent(heredoc_line_indent);\n                    }\n                    lexer.setHeredocLineIndent(-1);\n                }\n\n                if (token != 0) return token;\n\n                tok.append('#');\n            }\n\n            // MRI has extra pointer which makes our code look a little bit more strange in comparison\n            do {\n                lexer.pushback(c);\n\n                if ((c = new StringTerm(flags, '\\0', '\\n', lexer.getRubySourceline()).parseStringIntoBuffer(lexer, tok, lexer.getEncoding())) == EOF) {\n                    if (lexer.eofp) return error(lexer, len, str, eos);\n                    return restore(lexer);\n                }\n                if (c != '\\n') {\n                    lexer.setValue(lexer.createStr(tok, 0));\n                    return RubyParser.tSTRING_CONTENT;\n                }\n                tok.append(lexer.nextc());\n\n                if (lexer.getHeredocIndent() > 0) {\n                    lexer.lex_goto_eol();\n                    lexer.setValue(lexer.createStr(tok, 0));\n                    return RubyParser.tSTRING_CONTENT;\n                }\n\n                if ((c = lexer.nextc()) == EOF) return error(lexer, len, str, eos);\n            } while (!lexer.whole_match_p(eos, indent));\n            str = tok;\n        }\n\n        lexer.pushback(c);\n        lexer.setValue(lexer.createStr(str, 0));\n        return RubyParser.tSTRING_CONTENT;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/lexer/yacc/StringTerm.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ripper/StringTerm.java",
                "SLOC": "371",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2015 The JRuby Team (jruby@jruby.org)\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.ext.ripper;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.jcodings.Encoding;\nimport org.jruby.Ruby;\nimport org.jruby.lexer.LexerSource;\nimport org.jruby.util.ByteList;\nimport org.jruby.util.RegexpOptions;\n\nimport static org.jruby.lexer.LexingCommon.*;\n\npublic class StringTerm extends StrTerm {\n    // Expand variables, Indentation of final marker\n    private int flags;\n\n    // Start of string ([, (, {, <, ', \", \\n) \n    private final char begin;\n\n    // End of string (], ), }, >, ', \", \\0)\n    private final char end;\n\n    // How many strings are nested in the current string term\n    private int nest;\n\n    private List<ByteList> regexpFragments;\n    private boolean regexpDynamic;\n\n    // Out variable for parse methods that update encoding\n    protected Encoding encodingOut;\n\n    public StringTerm(int flags, int begin, int end) {\n        this.flags = flags;\n        this.begin = (char) begin;\n        this.end   = (char) end;\n        this.nest  = 0;\n        if ((flags & STR_FUNC_REGEXP) != 0) {\n            this.regexpFragments = new ArrayList<>();\n        }\n    }\n\n    public int getFlags() {\n        return flags;\n    }\n\n    protected ByteList createByteList(RipperLexer lexer) {\n        return new ByteList(ByteList.NULL_ARRAY, lexer.getEncoding());\n    }\n\n    private int endFound(RipperLexer lexer) throws IOException {\n        if ((flags & STR_FUNC_QWORDS) != 0) {\n            flags |= STR_FUNC_TERM;\n            lexer.pushback(0);\n            lexer.addDelayedToken(lexer.tokp, lexer.lex_p);\n            return ' ';\n        }\n\n        lexer.setStrTerm(null);\n\n        if ((flags & STR_FUNC_REGEXP) != 0) {\n            validateRegexp(lexer);\n            lexer.dispatchScanEvent(RipperParser.tREGEXP_END);\n            lexer.setState(EXPR_END | EXPR_ENDARG);\n            return RipperParser.tREGEXP_END;\n        }\n\n        if ((flags & STR_FUNC_LABEL) != 0 && lexer.isLabelSuffix()) {\n            lexer.nextc();\n            lexer.setState(EXPR_BEG | EXPR_LABEL);\n            return RipperParser.tLABEL_END;\n        }\n\n        lexer.setState(EXPR_END | EXPR_ENDARG);\n        return RipperParser.tSTRING_END;\n    }\n\n    private void validateRegexp(RipperLexer lexer) throws IOException {\n        Ruby runtime = lexer.getRuntime();\n        RegexpOptions options = lexer.parseRegexpFlags();\n        for (ByteList fragment : regexpFragments) {\n            lexer.checkRegexpFragment(runtime, fragment, options);\n        }\n        if (!regexpDynamic && regexpFragments.size() == 1) {\n            lexer.checkRegexpSyntax(runtime, regexpFragments.get(0), options);\n        }\n        regexpFragments.clear();\n        regexpDynamic = false;\n    }\n\n    @Override\n    public int parseString(RipperLexer lexer, LexerSource src) throws IOException {\n        boolean spaceSeen = false;\n        int c;\n\n        if ((flags & STR_FUNC_TERM) != 0) {\n            if ((flags & STR_FUNC_QWORDS) != 0) lexer.nextc(); // delayed terminator char\n            lexer.setState(EXPR_END | EXPR_ENDARG);\n            lexer.setStrTerm(null);\n            return ((flags & STR_FUNC_REGEXP) != 0) ? RipperParser.tREGEXP_END : RipperParser.tSTRING_END;\n        }\n        \n        ByteList buffer = createByteList(lexer);        \n\n        c = lexer.nextc();\n        if ((flags & STR_FUNC_QWORDS) != 0 && Character.isWhitespace(c)) {\n            do { \n                c = lexer.nextc();\n            } while (Character.isWhitespace(c));\n            spaceSeen = true;\n        }\n\n        if ((flags & STR_FUNC_LIST) != 0) {\n            flags &= ~STR_FUNC_LIST;\n            spaceSeen = true;\n        }\n\n        if (c == end && nest == 0) {\n            return endFound(lexer);\n        }\n        \n        if (spaceSeen) {\n            lexer.pushback(c);\n            lexer.addDelayedToken(lexer.tokp, lexer.lex_p);\n            return ' ';\n        }        \n\n        if ((flags & STR_FUNC_EXPAND) != 0 && c == '#') {\n            int token = lexer.peekVariableName(RipperParser.tSTRING_DVAR, RipperParser.tSTRING_DBEG);\n\n            if (token != 0) {\n                if ((flags & STR_FUNC_REGEXP) != 0) {\n                    regexpDynamic = true;\n                }\n                return token;\n            } else {\n                buffer.append(c);\n            }\n        }\n        lexer.pushback(c);\n\n        if (parseStringIntoBuffer(lexer, src, buffer, lexer.getEncoding()) == EOF) {\n            if ((flags & STR_FUNC_REGEXP) != 0) {\n                lexer.compile_error(\"unterminated regexp meets end of file\");\n            } else {\n                lexer.compile_error(\"unterminated string meets end of file\");\n            }\n            flags |= STR_FUNC_TERM;\n        }\n\n        lexer.setValue(lexer.createStr(buffer, flags));\n        if ((flags & STR_FUNC_REGEXP) != 0) {\n            regexpFragments.add(buffer);\n        }\n        lexer.flush_string_content(encodingOut);\n        return RipperParser.tSTRING_CONTENT;\n    }\n\n    private void mixedEscape(RipperLexer lexer, Encoding foundEncoding, Encoding parserEncoding) {\n        lexer.compile_error(\" mixed within \" + parserEncoding);\n    }\n\n    // mri: parser_tokadd_string\n    public int parseStringIntoBuffer(RipperLexer lexer, LexerSource src, ByteList buffer, Encoding enc) throws IOException {\n        boolean qwords = (flags & STR_FUNC_QWORDS) != 0;\n        boolean expand = (flags & STR_FUNC_EXPAND) != 0;\n        boolean escape = (flags & STR_FUNC_ESCAPE) != 0;\n        boolean regexp = (flags & STR_FUNC_REGEXP) != 0;\n        boolean symbol = (flags & STR_FUNC_SYMBOL) != 0;\n        boolean hasNonAscii = false;\n        int c;\n\n        while ((c = lexer.nextc()) != EOF) {\n            if (lexer.getHeredocIndent() > 0) {\n                lexer.update_heredoc_indent(c);\n            }\n\n            if (begin != '\\0' && c == begin) {\n                nest++;\n            } else if (c == end) {\n                if (nest == 0) {\n                    lexer.pushback(c);\n                    break;\n                }\n                nest--;\n            } else if (expand && c == '#' && !lexer.peek('\\n')) {\n                int c2 = lexer.nextc();\n\n                if (c2 == '$' || c2 == '@' || c2 == '{') {\n                    lexer.pushback(c2);\n                    lexer.pushback(c);\n                    break;\n                }\n                lexer.pushback(c2);\n            } else if (c == '\\\\') {\n                c = lexer.nextc();\n                switch (c) {\n                case '\\n':\n                    if (qwords) break;\n                    if (expand) continue;\n                    buffer.append('\\\\');\n                    break;\n\n                case '\\\\':\n                    if (escape) buffer.append(c);\n                    break;\n\n                case 'u':\n                    if (!expand) {\n                        buffer.append('\\\\');\n                        break;\n                    }\n\n                    if (regexp) {\n                        lexer.readUTFEscapeRegexpLiteral(buffer);\n                    } else {\n                        lexer.readUTFEscape(buffer, true, symbol);\n                    }\n\n                    if (hasNonAscii && buffer.getEncoding() != enc) {\n                        mixedEscape(lexer, buffer.getEncoding(), enc);\n                    }\n\n                    continue;\n                default:\n                    if (c == EOF) return EOF;\n                    \n                    if (!lexer.isASCII()) {\n                        if (!expand) buffer.append('\\\\');\n                        \n                        // goto non_ascii\n                        hasNonAscii = true;\n\n                        if (buffer.getEncoding() != enc) {\n                            mixedEscape(lexer, buffer.getEncoding(), enc);\n                            continue;\n                        }\n\n                        if (!lexer.tokenAddMBC(c, buffer)) {\n                            lexer.compile_error(\"invalid multibyte char (\" + enc + \")\");\n                            return EOF;\n                        }\n\n                        continue;\n                        // end of goto non_ascii\n                    }\n                    if (regexp) {\n                        if (c == end && !simple_re_meta(c)) {\n                            buffer.append(c);\n                            continue;\n                        }\n                        lexer.pushback(c);\n                        parseEscapeIntoBuffer(lexer, src, buffer);\n\n                        if (hasNonAscii && buffer.getEncoding() != enc) {\n                            mixedEscape(lexer, buffer.getEncoding(), enc);\n                        }\n                        \n                        continue;\n                    } else if (expand) {\n                        lexer.pushback(c);\n                        if (escape) buffer.append('\\\\');\n                        c = lexer.readEscape();\n                    } else if (qwords && Character.isWhitespace(c)) {\n                        /* ignore backslashed spaces in %w */\n                    } else if (c != end && !(begin != '\\0' && c == begin)) {\n                        buffer.append('\\\\');\n                    }\n                }\n            } else if (!lexer.isASCII()) {\nnonascii:       hasNonAscii = true; // Label for comparison with MRI only\n\n                if (buffer.getEncoding() != enc) {\n                    mixedEscape(lexer, buffer.getEncoding(), enc);\n                    continue;\n                }\n\n                if (!lexer.tokenAddMBC(c, buffer)) {\n                    lexer.compile_error(\"invalid multibyte char (\" + enc + \")\");\n                    return EOF;\n                }\n\n                continue;\n            } else if (qwords && Character.isWhitespace(c)) {\n                lexer.pushback(c);\n                break;\n            }\n\n            // Hmm did they change this?\n/*                if (c == '\\0' && symbol) {\n                    throw new SyntaxException(PID.NUL_IN_SYMBOL, lexer.getPosition(),\n                            src.getCurrentLine(), \"symbol cannot contain '\\\\0'\");\n                            * } else*/\n            if ((c & 0x80) != 0) {\n                hasNonAscii = true;\n                if (buffer.getEncoding() != enc) {\n                    mixedEscape(lexer, buffer.getEncoding(), enc);\n                    continue;\n                }\n            }\n            buffer.append(c);\n        }\n        \n        encodingOut = buffer.getEncoding();\n\n        return c;\n    }\n\n    private boolean simple_re_meta(int c) {\n        switch(c) {\n            case '$': case '*': case '+': case '.': case '?': case '^': case '|': case ')': case ']': case '}': case '>':\n                return true;\n        }\n\n        return false;\n    }\n\n    // Was a goto in original ruby lexer\n    private void escaped(RipperLexer lexer, LexerSource src, ByteList buffer) throws java.io.IOException {\n        int c;\n\n        switch (c = lexer.nextc()) {\n        case '\\\\':\n            parseEscapeIntoBuffer(lexer, src, buffer);\n            break;\n        case EOF:\n            lexer.compile_error(\"Invalid escape character syntax\");\n        default:\n            buffer.append(c);\n        }\n    }\n\n    private void parseEscapeIntoBuffer(RipperLexer lexer, LexerSource src, ByteList buffer) throws java.io.IOException {\n        int c;\n\n        switch (c = lexer.nextc()) {\n        case '\\n':\n            break; /* just ignore */\n        case '0':\n        case '1':\n        case '2':\n        case '3': /* octal constant */\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n            buffer.append('\\\\');\n            buffer.append(c);\n            for (int i = 0; i < 2; i++) {\n                c = lexer.nextc();\n                if (c == EOF) {\n                    lexer.compile_error(\"Invalid escape character syntax\");\n                }\n                if (!isOctChar(c)) {\n                    lexer.pushback(c);\n                    break;\n                }\n                buffer.append(c);\n            }\n            break;\n        case 'x': /* hex constant */\n            buffer.append('\\\\');\n            buffer.append(c);\n            c = lexer.nextc();\n            if (!isHexChar(c)) {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(c);\n            c = lexer.nextc();\n            if (isHexChar(c)) {\n                buffer.append(c);\n            } else {\n                lexer.pushback(c);\n            }\n            break;\n        case 'M':\n            if ((lexer.nextc()) != '-') {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(new byte[] { '\\\\', 'M', '-' });\n            escaped(lexer, src, buffer);\n            break;\n        case 'C':\n            if ((lexer.nextc()) != '-') {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(new byte[] { '\\\\', 'C', '-' });\n            escaped(lexer, src, buffer);\n            break;\n        case 'c':\n            buffer.append(new byte[] { '\\\\', 'c' });\n            escaped(lexer, src, buffer);\n            break;\n        case EOF:\n            lexer.compile_error(\"Invalid escape character syntax\");\n        default:\n            if (c != '\\\\' || c != end) buffer.append('\\\\');\n\n            buffer.append(c);\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "336",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2015 The JRuby Team (jruby@jruby.org)\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.lexer.yacc;\n\nimport java.io.IOException;\nimport org.jcodings.Encoding;\nimport org.jruby.ast.RegexpNode;\nimport org.jruby.lexer.yacc.SyntaxException.PID;\nimport org.jruby.parser.RubyParser;\nimport org.jruby.util.ByteList;\nimport org.jruby.util.RegexpOptions;\n\nimport static org.jruby.lexer.LexingCommon.*;\n\npublic class StringTerm extends StrTerm {\n    // Expand variables, Indentation of final marker\n    private int flags;\n\n    // Start of string ([, (, {, <, ', \", \\n) \n    private final char begin;\n\n    // End of string (], ), }, >, ', \", \\0)\n    private final char end;\n\n    // Syntax errors (eof) will occur at this position.\n    private final int startLine;\n\n    // How many strings are nested in the current string term\n    private int nest;\n\n    public StringTerm(int flags, int begin, int end, int startLine) {\n        this.flags = flags;\n        this.begin = (char) begin;\n        this.end   = (char) end;\n        this.nest  = 0;\n        this.startLine = startLine;\n    }\n\n    public int getFlags() {\n        return flags;\n    }\n\n    protected ByteList createByteList(RubyLexer lexer) {\n        ByteList bytelist = new ByteList(15);\n        bytelist.setEncoding(lexer.getEncoding());\n        return bytelist;\n    }\n\n    private int endFound(RubyLexer lexer) throws IOException {\n        if ((flags & STR_FUNC_QWORDS) != 0) {\n            flags |= STR_FUNC_TERM;\n            lexer.pushback(0);\n            lexer.getPosition();\n            return ' ';\n        }\n\n        lexer.setStrTerm(null);\n\n        if ((flags & STR_FUNC_REGEXP) != 0) {\n            RegexpOptions options = lexer.parseRegexpFlags();\n            ByteList regexpBytelist = ByteList.create(\"\");\n            lexer.setState(EXPR_END | EXPR_ENDARG);\n            lexer.setValue(new RegexpNode(lexer.getPosition(), regexpBytelist, options));\n            return RubyParser.tREGEXP_END;\n        }\n\n        if ((flags & STR_FUNC_LABEL) != 0 && lexer.isLabelSuffix()) {\n            lexer.nextc();\n            lexer.setState(EXPR_BEG | EXPR_LABEL);\n            return RubyParser.tLABEL_END;\n        }\n\n        lexer.setState(EXPR_END | EXPR_ENDARG);\n        lexer.setValue(String.valueOf(end));\n        return RubyParser.tSTRING_END;\n    }\n\n    public int parseString(RubyLexer lexer) throws IOException {\n        boolean spaceSeen = false;\n        int c;\n\n        if ((flags & STR_FUNC_TERM) != 0) {\n            if ((flags & STR_FUNC_QWORDS) != 0) lexer.nextc(); // delayed terminator char\n            lexer.setState(EXPR_END|EXPR_ENDARG);\n            lexer.setValue(String.valueOf(end));\n            lexer.setStrTerm(null);\n            return ((flags & STR_FUNC_REGEXP) != 0) ? RubyParser.tREGEXP_END : RubyParser.tSTRING_END;\n        }\n\n        c = lexer.nextc();\n        if ((flags & STR_FUNC_QWORDS) != 0 && Character.isWhitespace(c)) {\n            do { c = lexer.nextc(); } while (Character.isWhitespace(c));\n            spaceSeen = true;\n        }\n\n        if ((flags & STR_FUNC_LIST) != 0) {\n            flags &= ~STR_FUNC_LIST;\n            spaceSeen = true;\n        }\n\n        if (c == end && nest == 0) return endFound(lexer);\n\n        if (spaceSeen) {\n            lexer.pushback(c);\n            lexer.getPosition();\n            return ' ';\n        }\n        \n        ByteList buffer = createByteList(lexer);\n        lexer.newtok(true);\n        if ((flags & STR_FUNC_EXPAND) != 0 && c == '#') {\n            int token = lexer.peekVariableName(RubyParser.tSTRING_DVAR, RubyParser.tSTRING_DBEG);\n\n            if (token != 0) return token;\n\n            buffer.append('#');  // not an expansion to variable so it is just a literal.\n        }\n        lexer.pushback(c); // pushback API is deceptive here...we are just pushing index back one and not pushing c back necessarily.\n\n\n        if (parseStringIntoBuffer(lexer, buffer, lexer.getEncoding()) == EOF) {\n            lexer.setRubySourceline(startLine);\n            lexer.compile_error(\"unterminated \" + ((flags & STR_FUNC_REGEXP) != 0 ? \"regexp\" : \"string\") +  \" meets end of file\");\n        }\n\n        lexer.setValue(lexer.createStr(buffer, flags));\n        return RubyParser.tSTRING_CONTENT;\n    }\n\n    private void mixedEscape(RubyLexer lexer, Encoding foundEncoding, Encoding parserEncoding) {\n        lexer.compile_error(PID.MIXED_ENCODING, \"\" + foundEncoding + \" mixed within \" + parserEncoding);\n    }\n\n    // mri: parser_tokadd_string\n    public int parseStringIntoBuffer(RubyLexer lexer, ByteList buffer, Encoding encoding) throws IOException {\n        boolean qwords = (flags & STR_FUNC_QWORDS) != 0;\n        boolean expand = (flags & STR_FUNC_EXPAND) != 0;\n        boolean escape = (flags & STR_FUNC_ESCAPE) != 0;\n        boolean regexp = (flags & STR_FUNC_REGEXP) != 0;\n        boolean symbol = (flags & STR_FUNC_SYMBOL) != 0;\n        boolean hasNonAscii = false;\n        int c;\n\n        while ((c = lexer.nextc()) != EOF) {\n            if (lexer.getHeredocIndent() > 0) {\n                lexer.update_heredoc_indent(c);\n            }\n\n            if (begin != '\\0' && c == begin) {\n                nest++;\n            } else if (c == end) {\n                if (nest == 0) {\n                    lexer.pushback(c);\n                    break;\n                }\n                nest--;\n            } else if (expand && c == '#' && !lexer.peek('\\n')) {\n                int c2 = lexer.nextc();\n\n                if (c2 == '$' || c2 == '@' || c2 == '{') {\n                    lexer.pushback(c2);\n                    lexer.pushback(c);\n                    break;\n                }\n                lexer.pushback(c2);\n            } else if (c == '\\\\') {\n                c = lexer.nextc();\n                switch (c) {\n                case '\\n':\n                    if (qwords) break;\n                    if (expand) continue;\n                    buffer.append('\\\\');\n                    break;\n\n                case '\\\\':\n                    if (escape) buffer.append(c);\n                    break;\n\n                case 'u':\n                    if (!expand) {\n                        buffer.append('\\\\');\n                        break;\n                    }\n\n                    if (regexp) {\n                        lexer.readUTFEscapeRegexpLiteral(buffer);\n                    } else {\n                        lexer.readUTFEscape(buffer, true, symbol);\n                    }\n\n                    if (hasNonAscii && buffer.getEncoding() != encoding) {\n                        mixedEscape(lexer, buffer.getEncoding(), encoding);\n                    }\n\n                    continue;\n                default:\n                    if (c == EOF) return EOF;\n\n                    if (!lexer.isASCII(c)) {\n                        if (!expand) buffer.append('\\\\');\n\n                        // goto non_ascii\n                        hasNonAscii = true;\n\n                        if (buffer.getEncoding() != encoding) {\n                            mixedEscape(lexer, buffer.getEncoding(), encoding);\n                            continue;\n                        }\n\n                        if (!lexer.tokadd_mbchar(c, buffer)) {\n                            lexer.compile_error(PID.INVALID_MULTIBYTE_CHAR, \"invalid multibyte char (\" + encoding + \")\");\n                        }\n\n                        continue;\n                        // end of goto non_ascii\n                    }\n\n                    if (regexp) {\n                        if (c == end && !simple_re_meta(c)) {\n                            buffer.append(c);\n                            continue;\n                        }\n                        lexer.pushback(c);\n                        parseEscapeIntoBuffer(lexer, buffer);\n\n                        if (hasNonAscii && buffer.getEncoding() != encoding) {\n                            mixedEscape(lexer, buffer.getEncoding(), encoding);\n                        }\n                        \n                        continue;\n                    } else if (expand) {\n                        lexer.pushback(c);\n                        if (escape) buffer.append('\\\\');\n                        c = lexer.readEscape();\n                    } else if (qwords && Character.isWhitespace(c)) {\n                        /* ignore backslashed spaces in %w */\n                    } else if (c != end && !(begin != '\\0' && c == begin)) {\n                        buffer.append('\\\\');\n                        lexer.pushback(c);;\n                        continue;\n                    }\n                }\n            } else if (!lexer.isASCII(c)) {\nnonascii:       hasNonAscii = true; // Label for comparison with MRI only.\n\n                if (buffer.getEncoding() != encoding) {\n                    mixedEscape(lexer, buffer.getEncoding(), encoding);\n                    continue;\n                }\n\n                if (!lexer.tokadd_mbchar(c, buffer)) {\n                    lexer.compile_error(PID.INVALID_MULTIBYTE_CHAR, \"invalid multibyte char (\" + encoding + \")\");\n                }\n\n                continue;\n                // end of goto non_ascii\n            } else if (qwords && Character.isWhitespace(c)) {\n                lexer.pushback(c);\n                break;\n            }\n\n            if ((c & 0x80) != 0) {\n                hasNonAscii = true;\n                if (buffer.getEncoding() != encoding) {\n                    mixedEscape(lexer, buffer.getEncoding(), encoding);\n                    continue;\n                }\n            }\n            buffer.append(c);\n        }\n        \n        return c;\n    }\n\n    private boolean simple_re_meta(int c) {\n        switch(c) {\n            case '$': case '*': case '+': case '.': case '?': case '^': case '|': case ')': case ']': case '}': case '>':\n                return true;\n        }\n\n        return false;\n    }    \n\n    // Was a goto in original ruby lexer\n    private void escaped(RubyLexer lexer, ByteList buffer) throws java.io.IOException {\n        int c;\n\n        switch (c = lexer.nextc()) {\n        case '\\\\':\n            parseEscapeIntoBuffer(lexer, buffer);\n            break;\n        case EOF:\n            lexer.compile_error(\"Invalid escape character syntax\");\n        default:\n            buffer.append(c);\n        }\n    }\n\n    private void parseEscapeIntoBuffer(RubyLexer lexer, ByteList buffer) throws java.io.IOException {\n        int c;\n\n        switch (c = lexer.nextc()) {\n        case '\\n':\n            break; /* just ignore */\n        case '0':\n        case '1':\n        case '2':\n        case '3': /* octal constant */\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n            buffer.append('\\\\');\n            buffer.append(c);\n            for (int i = 0; i < 2; i++) {\n                c = lexer.nextc();\n                if (c == EOF) {\n                    lexer.compile_error(\"Invalid escape character syntax\");\n                }\n                if (!isOctChar(c)) {\n                    lexer.pushback(c);\n                    break;\n                }\n                buffer.append(c);\n            }\n            break;\n        case 'x': /* hex constant */\n            buffer.append('\\\\');\n            buffer.append(c);\n            c = lexer.nextc();\n            if (!isHexChar(c)) {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(c);\n            c = lexer.nextc();\n            if (isHexChar(c)) {\n                buffer.append(c);\n            } else {\n                lexer.pushback(c);\n            }\n            break;\n        case 'M':\n            if ((lexer.nextc()) != '-') {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(new byte[] { '\\\\', 'M', '-' });\n            escaped(lexer, buffer);\n            break;\n        case 'C':\n            if ((lexer.nextc()) != '-') {\n                lexer.compile_error(\"Invalid escape character syntax\");\n            }\n            buffer.append(new byte[] { '\\\\', 'C', '-' });\n            escaped(lexer, buffer);\n            break;\n        case 'c':\n            buffer.append(new byte[] { '\\\\', 'c' });\n            escaped(lexer, buffer);\n            break;\n        case EOF:\n            lexer.compile_error(\"Invalid escape character syntax\");\n        default:\n            if (c != '\\\\' || c != end) buffer.append('\\\\');\n\n            buffer.append(c);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/platform/UnixPlatform.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/platform/SolarisPlatform.java",
                "SLOC": "61",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2014 Timur Duehr <tduehr@gmail.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.platform;\n\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.lang.Class;\nimport java.lang.reflect.Method;\n\npublic class SolarisPlatform extends Platform {\n    private final Class systemClass;\n    private final Object system;\n    private final Method groupsMethod;\n\n    protected SolarisPlatform() {\n        Class sClass = null;\n        Object s = null;\n        Method g = null;\n        try {\n            sClass = Class.forName(\"com.sun.security.auth.module.SolarisSystem\");\n            s = sClass.getDeclaredConstructor().newInstance();\n            g = sClass.getDeclaredMethod(\"getGroups\");\n        } catch (Exception e) {\n            throw new UnsupportedOperationException(e.getMessage(), e);\n        }\n\n        systemClass = sClass;\n        system = s;\n        groupsMethod = g;\n    }\n\n    @Override\n    public long[] getGroups(IRubyObject recv) {\n        if (groupsMethod == null)\n            throw recv.getRuntime().newNotImplementedError(\"groups() function is unimplemented on this platform\");\n\n        try {\n            return (long[])groupsMethod.invoke(system);\n        } catch (Exception e) {\n            throw new UnsupportedOperationException(\"groups() function is unimplemented on this platform\", e);\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "61",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2014 Timur Duehr <tduehr@gmail.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.platform;\n\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport java.lang.Class;\nimport java.lang.reflect.Method;\n\npublic class UnixPlatform extends Platform {\n    private final Class systemClass;\n    private final Object system;\n    private final Method groupsMethod;\n\n    protected UnixPlatform() {\n        Class sClass = null;\n        Object s = null;\n        Method g = null;\n        try {\n            sClass = Class.forName(\"com.sun.security.auth.module.UnixSystem\");\n            s = sClass.getDeclaredConstructor().newInstance();\n            g = sClass.getDeclaredMethod(\"getGroups\");\n        } catch (Exception e) {\n            throw new UnsupportedOperationException(e.getMessage(), e);\n        }\n\n        systemClass = sClass;\n        system = s;\n        groupsMethod = g;\n    }\n\n    @Override\n    public long[] getGroups(IRubyObject recv) {\n        if (groupsMethod == null)\n            throw recv.getRuntime().newNotImplementedError(\"groups() function is unimplemented on this platform\");\n\n        try {\n            return (long[])groupsMethod.invoke(system);\n        } catch (Exception e) {\n            throw new UnsupportedOperationException(\"groups() function is unimplemented on this platform\", e);\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/CallBlock19.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/CallBlock.java",
                "SLOC": "99",
                "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2006 Ola Bini <ola@ologix.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.runtime;\n\nimport org.jruby.RubyModule;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.ArraySupport;\n\n/**\n * A Block implemented using a Java-based BlockCallback implementation. For\n * lightweight block logic within Java code.\n */\npublic class CallBlock extends BlockBody {\n    private final BlockCallback callback;\n    private final StaticScope dummyScope;\n\n    public static Block newCallClosure(IRubyObject self, RubyModule imClass, Signature signature, BlockCallback callback, ThreadContext context) {\n        return newCallClosure(context, self, signature, callback);\n    }\n\n    public static Block newCallClosure(ThreadContext context, IRubyObject self, Signature signature, BlockCallback callback) {\n        Binding binding = context.currentBinding(self, Visibility.PUBLIC);\n        BlockBody body = new CallBlock(context, signature, callback);\n\n        return new Block(body, binding);\n    }\n\n    @Deprecated\n    public static Block newCallClosure(IRubyObject self, RubyModule imClass, Arity arity, BlockCallback callback, ThreadContext context) {\n        return newCallClosure(self, imClass, Signature.from(arity), callback, context);\n    }\n\n    private CallBlock(ThreadContext context, Signature signature, BlockCallback callback) {\n        super(signature);\n        this.callback = callback;\n        this.dummyScope = context.runtime.getStaticScopeFactory().getDummyScope();\n    }\n\n    static IRubyObject[] adjustArgs(Block block, IRubyObject[] args) {\n        Signature signature = block.getSignature();\n        int required = signature.required();\n        if (required > 0 && required < args.length && signature.isFixed()) args = ArraySupport.newCopy(args, required);\n\n        return args;\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args) {\n        return callback.call(context, adjustArgs(block, args), Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args, Block blockArg) {\n        return callback.call(context, adjustArgs(block, args), blockArg);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block) {\n        return callback.call(context, IRubyObject.NULL_ARRAY, Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0) {\n        return callback.call(context, arg0, Block.NULL_BLOCK);\n    }\n\n    @Override\n    protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject value) {\n        return callback.call(context, value, Block.NULL_BLOCK);\n    }\n\n    @Override\n    protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject[] args, IRubyObject self) {\n        return callback.call(context, adjustArgs(block, args), Block.NULL_BLOCK);\n    }\n\n    public StaticScope getStaticScope() {\n        return dummyScope;\n    }\n\n    public void setStaticScope(StaticScope newScope) {\n        // ignore\n    }\n\n    public String getFile() {\n        return \"(internal)\";\n    }\n\n    public int getLine() {\n        return -1;\n    }\n}\n"
            }
        ],
        "SLOC": "109",
        "content": "/***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2006 Ola Bini <ola@ologix.com>\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.runtime;\n\nimport org.jruby.RubyModule;\nimport org.jruby.parser.StaticScope;\nimport org.jruby.runtime.builtin.IRubyObject;\n\n/**\n * A Block implemented using a Java-based BlockCallback implementation. For\n * lightweight block logic within Java code.\n */\npublic class CallBlock19 extends BlockBody {\n    private final BlockCallback callback;\n    private final StaticScope dummy;\n\n    public static Block newCallClosure(IRubyObject self, RubyModule imClass, Signature signature, BlockCallback callback, ThreadContext context) {\n        Binding binding = context.currentBinding(self, Visibility.PUBLIC);\n        BlockBody body = new CallBlock19(signature, callback, context);\n\n        return new Block(body, binding);\n    }\n\n    // This is a stop-gap method where we try to construct an equivalent Signature from an Arity but beyond very simple Arity's it will strip\n    // some info off.\n    @Deprecated\n    public static Block newCallClosure(IRubyObject self, RubyModule imClass, Arity arity, BlockCallback callback, ThreadContext context) {\n        Binding binding = context.currentBinding(self, Visibility.PUBLIC);\n        BlockBody body = new CallBlock19(Signature.from(arity), callback, context);\n        \n        return new Block(body, binding);\n    }\n\n    public CallBlock19(Signature signature, BlockCallback callback, ThreadContext context) {\n        super(signature);\n        this.callback = callback;\n        this.dummy = context.runtime.getStaticScopeFactory().getDummyScope();\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args) {\n        return callback.call(context, args, Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, Block block, IRubyObject[] args, Block blockArg) {\n        return callback.call(context, args, blockArg);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block) {\n        return callback.call(context, IRubyObject.NULL_ARRAY, Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0) {\n        return callback.call(context, arg0, Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0, IRubyObject arg1) {\n        return callback.call(context, new IRubyObject[] {arg0, arg1}, Block.NULL_BLOCK);\n    }\n\n    @Override\n    public IRubyObject yieldSpecific(ThreadContext context, Block block, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        return callback.call(context, new IRubyObject[] {arg0, arg1, arg2}, Block.NULL_BLOCK);\n    }\n\n    @Override\n    protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject value) {\n        return callback.call(context, value, Block.NULL_BLOCK);\n    }\n\n    /**\n     * Yield to this block, usually passed to the current call.\n     * \n     * @param context represents the current thread-specific data\n     * @param args The args to yield\n     * @param self The current self\n     * @return\n     */\n    @Override\n    protected IRubyObject doYield(ThreadContext context, Block block, IRubyObject[] args, IRubyObject self) {\n        return callback.call(context, args, Block.NULL_BLOCK);\n    }\n    \n    public StaticScope getStaticScope() {\n        return dummy;\n    }\n\n    public void setStaticScope(StaticScope newScope) {\n        // ignore\n    }\n\n    public String getFile() {\n        return \"(internal)\";\n    }\n\n    public int getLine() {\n        return -1;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/MixedModeIRBlockBody.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/InterpretedIRBlockBody.java",
                "SLOC": "135",
                "content": "package org.jruby.runtime;\n\nimport java.io.ByteArrayOutputStream;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyInstanceConfig;\nimport org.jruby.RubyModule;\nimport org.jruby.compiler.Compilable;\nimport org.jruby.ir.IRClosure;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.interpreter.Interpreter;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.persistence.IRDumper;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.cli.Options;\nimport org.jruby.util.log.Logger;\nimport org.jruby.util.log.LoggerFactory;\n\npublic class InterpretedIRBlockBody extends IRBlockBody implements Compilable<InterpreterContext> {\n    private static final Logger LOG = LoggerFactory.getLogger(InterpretedIRBlockBody.class);\n    protected boolean pushScope;\n    protected boolean reuseParentScope;\n    private boolean displayedCFG = false; // FIXME: Remove when we find nicer way of logging CFG\n    private int callCount = 0;\n    private InterpreterContext interpreterContext;\n    private InterpreterContext fullInterpreterContext;\n\n    public InterpretedIRBlockBody(IRClosure closure, Signature signature) {\n        super(closure, signature);\n        this.pushScope = true;\n        this.reuseParentScope = false;\n\n        // -1 jit.threshold is way of having interpreter not promote full builds\n        // regardless of compile mode (even when OFF full-builds are promoted)\n        if (closure.getManager().getInstanceConfig().getJitThreshold() == -1) setCallCount(-1);\n    }\n\n    @Override\n    public void setCallCount(int callCount) {\n        this.callCount = callCount;\n    }\n\n    @Override\n    public void completeBuild(InterpreterContext interpreterContext) {\n        this.fullInterpreterContext = interpreterContext;\n        // This enables IR & CFG to be dumped in debug mode\n        // when this updated code starts executing.\n        this.displayedCFG = false;\n    }\n\n    @Override\n    public IRScope getIRScope() {\n        return closure;\n    }\n\n    @Override\n    public ArgumentDescriptor[] getArgumentDescriptors() {\n        return closure.getArgumentDescriptors();\n    }\n\n    public InterpreterContext ensureInstrsReady() {\n        if (IRRuntimeHelpers.isDebug() && !displayedCFG) {\n            LOG.info(\"Executing '\" + closure + \"' (pushScope=\" + pushScope + \", reuseParentScope=\" + reuseParentScope);\n            LOG.info(closure.debugOutput());\n            displayedCFG = true;\n        }\n\n        InterpreterContext ic = interpreterContext;\n        if (ic == null) {\n            if (IRRuntimeHelpers.shouldPrintIR(closure.getStaticScope().getModule().getRuntime())) {\n                ByteArrayOutputStream baos = IRDumper.printIR(closure, false);\n\n                LOG.info(\"Printing simple IR for \" + closure.getId() + \":\\n\" + new String(baos.toByteArray()));\n            }\n\n            ic = closure.getInterpreterContext();\n            interpreterContext = ic;\n        }\n        return ic;\n    }\n\n    @Override\n    public String getOwnerName() {\n        return null;\n    }\n\n    @Override\n    public String getName() {\n        return null;\n    }\n\n    @Override\n    public boolean canCallDirect() {\n        return fullInterpreterContext != null && fullInterpreterContext.hasExplicitCallProtocol();\n    }\n\n    @Override\n    protected IRubyObject callDirect(ThreadContext context, Block block, IRubyObject[] args, Block blockArg) {\n        ensureInstrsReady(); // so we get debugging output\n        return Interpreter.INTERPRET_BLOCK(context, block, null, fullInterpreterContext, args, block.getBinding().getMethod(), blockArg);\n    }\n\n    @Override\n    protected IRubyObject yieldDirect(ThreadContext context, Block block, IRubyObject[] args, IRubyObject self) {\n        ensureInstrsReady(); // so we get debugging output\n        return Interpreter.INTERPRET_BLOCK(context, block, self, fullInterpreterContext, args, block.getBinding().getMethod(), Block.NULL_BLOCK);\n    }\n\n    @Override\n    protected IRubyObject commonYieldPath(ThreadContext context, Block block, Block.Type type, IRubyObject[] args, IRubyObject self, Block blockArg) {\n        if (callCount >= 0) promoteToFullBuild(context);\n\n        InterpreterContext ic = ensureInstrsReady();\n\n        Binding binding = block.getBinding();\n        Visibility oldVis = binding.getFrame().getVisibility();\n        Frame prevFrame = context.preYieldNoScope(binding);\n\n        // SSS FIXME: Maybe, we should allocate a NoVarsScope/DummyScope for for-loop bodies because the static-scope here\n        // probably points to the parent scope? To be verified and fixed if necessary. There is no harm as it is now. It\n        // is just wasteful allocation since the scope is not used at all.\n        DynamicScope actualScope = binding.getDynamicScope();\n        if (ic.pushNewDynScope()) {\n            context.pushScope(block.allocScope(actualScope));\n        } else if (ic.reuseParentDynScope()) {\n            // Reuse! We can avoid the push only if surrounding vars aren't referenced!\n            context.pushScope(actualScope);\n        }\n\n        self = IRRuntimeHelpers.updateBlockState(block, self);\n\n        try {\n            return Interpreter.INTERPRET_BLOCK(context, block, self, ic, args, binding.getMethod(), blockArg);\n        }\n        finally {\n            postYield(context, ic, binding, oldVis, prevFrame);\n        }\n    }\n\n    // Unlike JIT in MixedMode this will always successfully build but if using executor pool it may take a while\n    // and replace interpreterContext asynchronously.\n    private void promoteToFullBuild(ThreadContext context) {\n        final Ruby runtime = context.runtime;\n        if (runtime.isBooting() && !Options.JIT_KERNEL.load()) return; // don't JIT during runtime boot\n\n        if (this.callCount < 0) return;\n        // we don't synchronize callCount++ it does not matter if count isn't accurate\n        if (this.callCount++ >= runtime.getInstanceConfig().getJitThreshold()) {\n            synchronized (this) { // disable same jit tasks from entering queue twice\n                if (this.callCount >= 0) {\n                    this.callCount = Integer.MIN_VALUE; // so that callCount++ stays < 0\n\n                    runtime.getJITCompiler().buildThresholdReached(context, this);\n                }\n            }\n        }\n    }\n\n    public RubyModule getImplementationClass() {\n        return closure.getStaticScope().getModule();\n    }\n\n}\n"
            }
        ],
        "SLOC": "143",
        "content": "package org.jruby.runtime;\n\nimport java.io.ByteArrayOutputStream;\n\nimport org.jruby.EvalType;\nimport org.jruby.Ruby;\nimport org.jruby.RubyModule;\nimport org.jruby.compiler.Compilable;\nimport org.jruby.ir.IRClosure;\nimport org.jruby.ir.IRScope;\nimport org.jruby.ir.interpreter.FullInterpreterContext;\nimport org.jruby.ir.interpreter.Interpreter;\nimport org.jruby.ir.interpreter.InterpreterContext;\nimport org.jruby.ir.persistence.IRDumper;\nimport org.jruby.ir.runtime.IRRuntimeHelpers;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport org.jruby.util.cli.Options;\nimport org.jruby.util.log.Logger;\nimport org.jruby.util.log.LoggerFactory;\n\npublic class MixedModeIRBlockBody extends IRBlockBody implements Compilable<CompiledIRBlockBody> {\n    private static final Logger LOG = LoggerFactory.getLogger(MixedModeIRBlockBody.class);\n\n    protected boolean pushScope;\n    protected boolean reuseParentScope;\n    private boolean displayedCFG = false; // FIXME: Remove when we find nicer way of logging CFG\n    private InterpreterContext interpreterContext;\n    private int callCount = 0;\n    private volatile CompiledIRBlockBody jittedBody;\n\n    public MixedModeIRBlockBody(IRClosure closure, Signature signature) {\n        super(closure, signature);\n        this.pushScope = true;\n        this.reuseParentScope = false;\n\n        // JIT currently JITs blocks along with their method and no on-demand by themselves.\n        // We only promote to full build here if we are -X-C.\n        if (!closure.getManager().getInstanceConfig().isJitEnabled()) setCallCount(-1);\n    }\n\n    @Override\n    public boolean canCallDirect() {\n        return jittedBody != null || (interpreterContext != null && interpreterContext.hasExplicitCallProtocol());\n    }\n\n    @Override\n    public void setCallCount(int callCount) {\n        synchronized (this) {\n            this.callCount = callCount;\n        }\n    }\n\n    @Override\n    public void completeBuild(CompiledIRBlockBody blockBody) {\n        setCallCount(-1);\n        this.jittedBody = blockBody;\n    }\n\n    @Override\n    public IRScope getIRScope() {\n        return closure;\n    }\n\n    public BlockBody getJittedBody() {\n        return jittedBody;\n    }\n\n    @Override\n    public ArgumentDescriptor[] getArgumentDescriptors() {\n        return closure.getArgumentDescriptors();\n    }\n\n    public InterpreterContext ensureInstrsReady() {\n        if (IRRuntimeHelpers.isDebug() && !displayedCFG) {\n            LOG.info(\"Executing '\" + closure + \"' (pushScope=\" + pushScope + \", reuseParentScope=\" + reuseParentScope);\n            LOG.info(closure.debugOutput());\n            displayedCFG = true;\n        }\n\n        if (interpreterContext == null) {\n            if (IRRuntimeHelpers.shouldPrintIR(closure.getStaticScope().getModule().getRuntime())) {\n                ByteArrayOutputStream baos = IRDumper.printIR(closure, false);\n\n                LOG.info(\"Printing simple IR for \" + closure.getId() + \":\\n\" + new String(baos.toByteArray()));\n            }\n\n            interpreterContext = closure.getInterpreterContext();\n        }\n        return interpreterContext;\n    }\n\n    @Override\n    public String getName() {\n        return closure.getId();\n    }\n\n    @Override\n    protected IRubyObject callDirect(ThreadContext context, Block block, IRubyObject[] args, Block blockArg) {\n        // We should never get here if jittedBody is null\n        assert jittedBody != null : \"direct call in MixedModeIRBlockBody without jitted body\";\n\n        return jittedBody.callDirect(context, block, args, blockArg);\n    }\n\n    @Override\n    protected IRubyObject yieldDirect(ThreadContext context, Block block, IRubyObject[] args, IRubyObject self) {\n        // We should never get here if jittedBody is null\n        assert jittedBody != null : \"direct yield in MixedModeIRBlockBody without jitted body\";\n\n        return jittedBody.yieldDirect(context, block, args, self);\n    }\n\n    @Override\n    protected IRubyObject commonYieldPath(ThreadContext context, Block block, Block.Type type, IRubyObject[] args, IRubyObject self, Block blockArg) {\n        if (callCount >= 0) promoteToFullBuild(context);\n\n        InterpreterContext ic = ensureInstrsReady();\n\n        Binding binding = block.getBinding();\n        Visibility oldVis = binding.getFrame().getVisibility();\n        Frame prevFrame = context.preYieldNoScope(binding);\n\n        // SSS FIXME: Maybe, we should allocate a NoVarsScope/DummyScope for for-loop bodies because the static-scope here\n        // probably points to the parent scope? To be verified and fixed if necessary. There is no harm as it is now. It\n        // is just wasteful allocation since the scope is not used at all.\n        DynamicScope actualScope = binding.getDynamicScope();\n        if (ic.pushNewDynScope()) {\n            context.pushScope(block.allocScope(actualScope));\n        } else if (ic.reuseParentDynScope()) {\n            // Reuse! We can avoid the push only if surrounding vars aren't referenced!\n            context.pushScope(actualScope);\n        }\n\n        self = IRRuntimeHelpers.updateBlockState(block, self);\n\n        try {\n            return Interpreter.INTERPRET_BLOCK(context, block, self, ic, args, binding.getMethod(), blockArg);\n        }\n        finally {\n            postYield(context, ic, binding, oldVis, prevFrame);\n        }\n    }\n\n    private void promoteToFullBuild(ThreadContext context) {\n        final Ruby runtime = context.runtime;\n        if (runtime.isBooting() && !Options.JIT_KERNEL.load()) return; // don't JIT during runtime boot\n\n        if (this.callCount < 0) return;\n        // we don't synchronize callCount++ it does not matter if count isn't accurate\n        if (this.callCount++ >= runtime.getInstanceConfig().getJitThreshold()) {\n            synchronized (this) { // disable same jit tasks from entering queue twice\n                if (this.callCount >= 0) {\n                    this.callCount = Integer.MIN_VALUE; // so that callCount++ stays < 0\n\n                    // ensure we've got code ready for JIT\n                    ensureInstrsReady();\n                    closure.getNearestTopLocalVariableScope().prepareForCompilation();\n\n                    FullInterpreterContext fic = closure.getFullInterpreterContext();\n\n                    if (fic == null || !fic.hasExplicitCallProtocol()) {\n                        if (Options.JIT_LOGGING.load()) {\n                            LOG.info(\"JIT failed; no full IR or no call protocol found in block: \" + closure);\n                        }\n                        return; // do not JIT if we don't have an explicit protocol\n                    }\n\n                    runtime.getJITCompiler().buildThresholdReached(context, this);\n                }\n            }\n        }\n    }\n\n    public RubyModule getImplementationClass() {\n        return closure.getStaticScope().getModule();\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/parser/YyTables.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/ext/ripper/YyTables.java",
                "SLOC": "4978",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2013-2017 The JRuby Team (jruby@jruby.org)\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\npackage org.jruby.ext.ripper;\n\npublic class YyTables {\n   private static short[] combine(short[] t1, short[] t2, \n                                  short[] t3, short[] t4) {\n      short[] t = new short[t1.length + t2.length + t3.length + t4.length];\n      int index = 0;\n      System.arraycopy(t1, 0, t, index, t1.length);\n      index += t1.length;\n      System.arraycopy(t2, 0, t, index, t2.length);\n      index += t2.length;\n      System.arraycopy(t3, 0, t, index, t3.length);\n      index += t3.length;\n      System.arraycopy(t4, 0, t, index, t4.length);\n      return t;\n   }\n\n   public static final short[] yyTable() {\n      return combine(yyTable1(), yyTable2(), yyTable3(), yyTable4());\n   }\n\n   public static final short[] yyCheck() {\n      return combine(yyCheck1(), yyCheck2(), yyCheck3(), yyCheck4());\n   }\n   private static final short[] yyTable1() {\n      return new short[] {\n\n          309,  378,  312,   88,   88,  135,  135,  429,  219,  693, \n          254,  254,  254,  108,  232,  280,  254,  254,  358,  489, \n          254,  311,  419,  218,  218,  422,  356,  721,  296,  296, \n          264,  467,  296,  647,  232,  675,  648,  258,  261,  292, \n          292,  712,  234,  292,  218,  764,   88,  699,  711,    8, \n          354,  711,  254,  393,  364,  305,  308,  647,  642,    8, \n          335,  339,  234,  528,  544,  661,  547,  530,  279,  218, \n           83,   83,  295,  295,  328,  627,  295,  583,  659,  647, \n          712,  647,  647,  810,  858,  582,  134,  134,  606,  634, \n          433,  635,  623,  437,  631,  636,  134,  399,  637,  830, \n          260,  354,  393,  673,  334,  442,  647,  260,    8,  647, \n          575,  583,  839,  281,  958,  260,  647,  306,  636,  689, \n          647,  432,  674,  647,  264,  894,  583,  878,  647,  567, \n          254,  134,   88,  702,  835, 1046,  623,  606,  631,  376, \n         1030,  434,  647,  851,  575,  260,  399,  305,  350,  259, \n          500,  647,  674,  823,  502,  750,  259,  516,  647,  575, \n          301,  647,  833,  304,  259,  647,  318,  582,  414,  647, \n          581,  434,  520,  521,   74,  593,  308,  567,  567,  636, \n          544,  575,  134,  280,  871,  414,  674,  314,  463,  552, \n          319,  647,  733,  555,  259,  317,  636,  350,  556,  413, \n          606,  582,  376,  435,  581,   93,   93,  136,  136,  593, \n          647,  674,  567,  567,  477,  575,  582,  281,  884,  581, \n          489,  377,  503,  504,  593,   72,  567, 1046,  386,  777, \n          575,  561,  562,  252,  252,  252,   84,  379,  552,   88, \n          975, 1030,  384,  369,  847,  387,  740,  382,   93,  606, \n          511,  438,  355,  385,  872,  809,   75,  638,   53,  638, \n          532,  780,  653,  304,  638,  814,  254,  254,  380,  712, \n          383,  582,  525,  958,  813,  563,  815,  468,  711,  711, \n          264,  740,  642,  567,  377,  381,   76,   84,  536,  742, \n           87,  746,  472,  473,  743,  853,  854,  647,  855,  370, \n          642,  525,  254,  355,  254,  254,  524,   73,  254,  519, \n          254,  907,  415,  386,  296,   88,  296,  914,   82,  416, \n          421,   88,   80,   88,  769,  292,  373,  292,  292,  770, \n          818,  993,   88,  713,   93,  527,  878,   76,  384,  385, \n          518,  717,  718,  264,  308,  401,  647,  972,  440,  403, \n          404,  328,  441,  439,  354,  453,  979,  458,  295,  726, \n          295,  983,  374,   59,   60,  425,  647,  902,  648,   82, \n          647,  648,  458,   80,  647,  647,  323,  647,  696,  647, \n          254,  254,  254,  254,   88,  254,  254,  307,  514,  292, \n          582,  639,  582,  639,  928,  636,  647,  657,  639,  522, \n          279,  636,  393,  279,  453,  655,  588,  589,  590,  591, \n          647,  647,    8,  647,  950,  903,  905, 1016,  647,  254, \n          672,  910,  912,  538,  539,  641,  583,  641,   88,  354, \n          541,  254,  641,  843,   88,  134,  632,  606,  647,  859, \n          632,   93,  292,  663,  532,  281,  399,  254,  281,   88, \n          254,  592,  634,  633,  635,  921,  328,  849,  647,  575, \n           88,  567,  323,  254,  632,  581,  859,  836,   88,  582, \n          292,  582,  623,  822,  631,  469,  575,  254,  746,  863, \n          632,  633,  736,  652,  552,  898,  292,  652, 1018,  252, \n          252,  698,  698, 1097,  632,  606,  803,  633,  710,  719, \n          292,   83,  581,  123,  712,   84,   74,  254, 1074,   88, \n          134,  633,  232,  575,  711,  280,  582,   93,  280,  812, \n           88,  552,  218,   93,  593,   93,  694,  317,  632,   96, \n           96,  499,  606,  501,   93,  581,  254,  729,  354,  424, \n          234,  282,  992,  426,  567,  633,  575,  418,  601,   97, \n          647,  647,  123,  632,  552,   76,  355,  538,  539,  292, \n          386,  532,   77,  845,  541,  606,  876,  843,   84,  379, \n          633,  848,   96,  591,  384,  799,   83,  387,  430,  382, \n          757,  759,  601, 1050,  440,  385,   93,   82,   75,  647, \n          778,   80,  865,   85,  333,  337,  746,  601,  746,  804, \n          380,  786,  383,  252,  252,  252,  252,  591,  593,  594, \n          431,  573,  453,   77,  638,  638,   78,  381,   76,  134, \n          638,  638,  591,  307,  384,  385,  771,  644,  443,  644, \n           93,  355,   83,  638,  644,   81,   93,  850,  647,  538, \n          539,  543,  391,  392,   85,  509,  541,  786,  825,  822, \n           82,   93,  454,  323,   80,  354,  931,  783,   96,  457, \n          772,  464,   93,  786,  706,  789,  308,   78,  254,   88, \n           93,  789,  465,  676,   79,  817,  786,  407,  408,   88, \n          582,  466,  816,   83,  453,  807,   81,  469,  232,  898, \n          746, 1026,  471,  898,  808,  103,  103,  218,  218,  474, \n         1061,  561,  562,  478,  954,  783,  254,  786,  789, 1013, \n         1083,   93,  532,  293,  299, 1015,  234,  300,  484,  784, \n          485,  916,   93,  488,  867,   79,   88,  790,  844,  674, \n          720,  354,  840,  793,  451,  874,  134,  877,  103,  652, \n          355,  638,  452,  647,  647,  508,  867,  386,  639,  639, \n          926,  886,   87,  512,  639,  639,  513,  746,  323,  746, \n          123,  320,  452,  452,  862,   96,  523,  639,  452,   73, \n          517,  876,  529,  440,  531,   88,  955,  537,   88,  656, \n          664,   88,  641,  641,  415,  898,  876,  506,  641,  641, \n          685,  416,  417,   83,  746,  320,   88,  573,  692,  254, \n          677,  641, 1025,  682,  684,  714,  354,  695,   88,  686, \n          320,  715,  134,  538,  539,  716,  632,  722,  730,  725, \n          541,  440,  292,   88,  103,  546,  254,  929,  440,  440, \n          751,   77,  752,  633,  933,  753,  446,   88,   88,   88, \n          756,   96,  320,  601,  758,  108,  647,   96,  760,   96, \n          762,  495,  942,  462,  763,  440,  766,  355,   96,  698, \n          776,  867,   85,  917,  108,  779,  781,  782,  591,  787, \n         1024,   93,   88,   88,  788,  639,  800,  962,  876,  108, \n          601,   93,  795,  966,  968,   78,  970,  134,  971,  802, \n          805,  252,  643,  811,   77,  786,  108,  601,  987,  662, \n          822,   83,   98,  828,   81,  591,  829,  831,  832,  641, \n           96,  320,  834,  601,  846,  860,  573,  864,  573,  885, \n          901,  909,  591,   92,  908,   85,  320,  927,   93,  252, \n          930,  103,  643,  355,  662,  308, 1010,  932,  591, 1059, \n           88,  857,  935,   79, 1054,  476, 1034,  939,   78,  521, \n          943,  645,  944,  645,   96, 1040,  945,  951,  645, 1044, \n           96,  538,  539,  540,   83,  495,  956,   81,  541,  647, \n          515,  538,  539,  543, 1090,   96,  952,   93,  541,  134, \n           93,  724,  959,   93,  644,  644,   96,   73,  960, 1049, \n          644,  644,  961,  495,   96,  965,  967,   88,   93,  490, \n          969,  493, 1062,  644,  973,  976,   79,  103,  355,  495, \n           93,  104,  127,  103,   88,  103,   88,  134,  647,  978, \n          980,  982,   88,  495,  103,   93,  550,  988,  551,  552, \n          553,  554,  989,  995, 1019,   96, 1020, 1023, 1032,   93, \n           93,   93, 1063, 1065, 1066, 1067,   96, 1031, 1039,  252, \n         1047, 1094, 1051, 1060,  254,   97, 1064,  786,  440,   88, \n         1068,  127,   92, 1070,  550, 1072,  551,  552,  553,  554, \n          134,  632, 1075,  415,   93,   93,  103,  292, 1080,  320, \n          416,  445,  495, 1088, 1101, 1098,  320,  320,  633,  634, \n          415,  647,  622,  320,  647,  636,   92,  416,  461,  127, \n          136, 1099,  117,  635,  640,  899,   95,  640,  900,  642, \n          320,  644,  636,   92,  108,  429,  116,  103,  636,  103, \n          103,  647,  636,  375,  103,  429,  103,  482,   98,  367, \n          138,  768,  775, 1087,  775,  727,  221,  117, 1011,  794, \n           95,  103,   93,  515,   61,   62,   63,   64,  320,  996, \n          875,  117,  103,  938,  889,  320,  320,   95,  111,  618, \n          103,  622,   98,  320,  880,  116,  775,  947,  948,  949, \n          320,  320,   97, 1042,  429, 1041,  622,  108,  792,   98, \n          915, 1086,  415,  521,  792,  462,  521,  518,  283,  416, \n          475,  136,  861,  521,  521,   96,  806,  520, 1091,   93, \n          420,  103,  963,  964,    0,   96,    0,  515,    0,  521, \n            0,    0,  103,    0,  515,  515,   93,   99,   93,  520, \n          618,  792,    0,  647,   93,    0,    0,  647,  647,  821, \n          824,  550,  824,  551,  552,  553,  554,  555,   17,  824, \n            0,  618,  556,    0,    0,    0,  123,  440,    0,  904, \n          906,    0,   96,    0,    0,  911,  913,    0,  535,    0, \n            0,   93,    0,    0,  522,  557,    0,   16,  798,  127, \n         1014,    0,   97,  559,  560,  561,  562,    0,    0,  118, \n            0,    0,  300,    0,    0,  291,  291,   17,    0,  291, \n            0,  515,  300,    0,    0,  440,  904,  906,    0,  911, \n          913,   96,  440,  440,   96,    0,    0,   96,  645,  645, \n            0,  315,  317,    0,  645,  645,   16,  291,  291,  563, \n          357,  359,   96,   97,    0,  515,  293,  645,  118,  440, \n          320,   92,  618,    0,   96,    0,    0,  320,  320,    0, \n          515,  300,    0,  622, 1055,  495, 1056,    0,    0,   96, \n          446,    0, 1057,    0,  647,  100,    0,   97,    0,  117, \n          522,  103,    0,   96,   96,   96,  106,  937,    0,    0, \n          941,  103,  515,  116,   97,   95,  619,  429,  429,  429, \n          515, 1053,  429,  429,  429,    0,  429,  515,  515, 1089, \n            0,    0,    0,  618,   92,    0,  429,   98,   96,   96, \n          106,    0,  523,  647,  520,  429,  429,  116,  429,  429, \n          429,  429,  429,    0,  618,    0,    0,  106,  103,    0, \n          521,    0,  415,    0,  518,    0,    0,  521,  521,  416, \n          510,  518,  518,    0,  520,  645,    0,  619,   95,  137, \n          137,  520,  520,  429,    0,    0,  521,  625,    0,  137, \n          429,  429,  118,  521,  521,    0,  520,  429,  619,    0, \n           98,    0, 1012,  520,  520,    0,   96,  103,    0,  206, \n          103,    0,    0,  103,  103,  103,  137,  137,  429,    0, \n          103,  103,  137,  137,  137,  137,    0,    0,  103,  336, \n           17,   17,   17,  103,  824,  415,   17,   17,    0,   17, \n          103,  522,  416,  534,    0,  415,    0,    0,  522,  522, \n          429,    0,  416,  797,    0,  103,    0,    0,  206,   16, \n           16,   16,   53,   96,    0,   16,   16,    0,   16,  103, \n          103,  103,   53,    0,    0,  137,  118,    0,    0,    0, \n           96,    0,   96,    0,  300,  300,  300,    0,   96,  300, \n          300,  300,    0,  300,    0,  291,  291,  291,  359,    0, \n          291,  618,    0,    0,  103,  103,    0,    0,    0,    0, \n           17,  291,    0,  291,  291,  300,  300,  300,  300,  300, \n          105,   53,  507,    0,    0,   96,    0,  415,    0,    0, \n          119,   17,   97,    0,  416, 1048,    0,  522,    0,   16, \n          495,  103,    0,  824,  522,  522,  647,  647,  647,  515, \n            0,    0,    0,  647,  105,    0,  515,  515,  415,    0, \n           16,  300,  618,   17,  300,  416, 1052,  538,  539,  545, \n            0,  105,  103,    0,  541,  106,  625,    0,    0,  523, \n          515,  520,    0,  618,    0,  300,  523,  523,  520,  520, \n            0,    0,   16,    0,    0,   97,  595,  596,  597,  598, \n          599,  621,    0,  600,  601,  602,  603,  604,  605,  606, \n          607,  608,  609,  610,  611,  612,  613,  300,    0,  614, \n          615,  616,  617,  102,  625,    0,    0,    0,  291,  103, \n          634,  625,  625,    0,  640,    0,  647,  621,  106,    0, \n          291,  640,    0,    0,    0,    0,  103,  550,  103,  551, \n          552,  553,  554,    0,  103,    0,  291,    0,  625,    0, \n          137,  137,  137,  137,    0,  137,  479,  480,  481,    0, \n          525,  483,  291,  292,  640,  640,  640,  868,    0,  291, \n            0,  744,  879,  292,    0,    0,  291,  137,    0,  101, \n            0,  103,    0,    0,  291,  291,  888,    0,  291,  538, \n          539,  739,    0,    0,    0,  206,  541,  206,  206,  206, \n          206,  206,    0,  538,  539,  767,  206,  292,    0,    0, \n          541,    0,  723,  640,   53,   53,   53,  521,  137,   53, \n           53,   53,  292,   53,  291,  521,  524,  291,    0,  206, \n          206,    0,    0,   53,    0,  291,    0,  206,  206,  206, \n          206,    0,   53,   53,  107,   53,   53,   53,   53,   53, \n            0,  137,  137,  137,  137,  137,    0,    0,  137,  137, \n          137,  137,  137,  137,  137,  137,  137,  137,  137,  137, \n          137,  137,  103,  104,  137,  137,  137,  137,  107,  105, \n          621,  291,    0,  206,  518,  137,   99,    0,  100,  486, \n          486,  486,    0,  137,   53,  107,  486,  651,   94,    0, \n            0,  660,    0,  119,    0,    0,    0,  104,    0,  550, \n            0,  551,  552,  553,  554,   53,    0,    0,  518,  526, \n           99,    0,  100,    0,  104,  622,    0,    0,  621,  137, \n          137,  137,    0,  518,  137,  621,  621,   99,    0,  100, \n          651,  621,  105,  744,    0,  517,  291,   53,  121,  137, \n          137,  745,  119,  137,  440,  707,  709,    0,    0,  336, \n            0,    0,  621,    0,    0,  518,  102,  522, 1027,  523, \n          551,  552,  553,  554,    0,    0,    0,  137,  137, 1033, \n            0, 1035,  291, 1036,  523,    0,    0, 1037,    0,  137, \n            0,    0,  137,    0, 1045,  709,    0,  525,  336,    0, \n          102,    0,  137,    0,  525,  525,  291,    0,  291,  379, \n          380,  381,  382,  383,  120,  291,  291,  102,   55,    0, \n            0,    0,    0,    0,    0,  292,  292,  292,   55,  882, \n          292,  292,  292,  550,  292,  551,  552,  553,  554,    0, \n            0,  896,    0,   95,  292,  292,  137,  525,    0,    0, \n            0,    0,  765,  292,  292,    0,  292,  292,  292,  292, \n          292,    0,   54,  524,    0,    0,  291,  744,    0,    0, \n          524,  524,   54,    0,    0,  957,    0,   55, 1092,    0, \n            0,  640,  640,   93, 1093,  121, 1095,  640,  640, 1096, \n          518,    0,    0,   96,    0,    0,  918,    0,  291,    0, \n          640,    0,  291,    0,    0,  292,    0,  122,  292,    0, \n          292,  137,  120,  107,  622, 1105,    0,  801,    0,  137, \n            0,   54,    0,    0,    0,    0,  292,    0,  640,  640, \n          516,  640,  640,  113,  121,  291,    0,    0,    0,    0, \n          519,    0,  104,  440,    0,    0,    0,  137,    0,    0, \n            0,    0,    0,  819,  619,   99,  526,  100,  292,    0, \n          119,  120,  622,  526,  526,    0,  525,    0,    0,  622, \n          622,  137,    0,  137,    0,  622,  107,  841,    0,  842, \n          137,  137,  517,    0,    0,    0,  709,  336,    0,  517, \n          517,  440,    0,  524,    0,  137,  622,  515,  440,  440, \n            0,  990,  518,    0,  522,  104,  523,  515,  991,  518, \n          518,  522,  522,  523,  523,  619,    0,    0,   99,    0, \n          100,  523,    0,    0,  291,  440,    0,  386,  523,  523, \n            0,  137,    0,  518,  977,  102,  619,  883,  981,    0, \n            0,  515,  896,    0,  991,  896,    0, 1043,    0,  896, \n            0,  291,    0,    0,    0,  515,  515,    0,  111,  401, \n          515,  137,    0,  403,  404,  405,  406,  137,    0,    0, \n          137,    0,    0,  925,    0,    0,    0,    0,  114,  619, \n           55,   55,   55,    0,  525,   55,   55,   55,  515,   55, \n            0,  525,  525,  137,  137,    0,  137,  137,  102,   55, \n          137,    0,    0,    0,    0,    0,  946,    0,   55,   55, \n            0,   55,   55,   55,   55,   55,    0,    0,  112,    0, \n            0,    0,    0,    0,   54,   54,   54,  518,  115,   54, \n           54,   54,    0,   54,  518,  518,    0,  896,  518,  896, \n          619,  896,  121,   54,  896,    0,    0,    0,  518,    0, \n            0,    0,    0,  291,    0,   54,   54,   54,   54,   54, \n           55,  619,  137,    0,    0,    0,  137,  516,    0,  120, \n          896,    0,    0,    0,  516,  516,    0,  519,    0,    0, \n            0,   55,  518, 1069,  519,  519, 1071, 1073,    0,  137, \n         1076, 1077,    0,    0,    0,  994,  518,  518,    0,  114, \n          137,  518,    0,  525,   54,    0,    0,    0,    0,  137, \n          525,  525,    0,   55,    0,    0,  137,    0,    0,    0, \n            0,    0,  336,    0,    0,   54,    0,  199,    0,  518, \n          524,    0,    0,    0,    0,    0,    0,  524,  524, 1100, \n         1102, 1103, 1104,    0,    0,    0,    0,    0,    0,    0, \n            0, 1106,    0,  137,  618,  618,  618,   54,  618,  515, \n          515,  515,  618,  618,  515,  515,  515,  618,  515,  618, \n          618,  618,  618,  618,  618,  618,  199,  618,  515,  515, \n          618,  618,  618,  618,  618,  618,  618,  515,  515,  618, \n          515,  515,  515,  515,  515,    0,  618,    0,    0,  618, \n          618,  618,  515,  618,  618,  618,  618,  618,  618,  618, \n          618,  618,  618,  618,  515,  515,  515,  515,  515,  515, \n          515,  515,  515,  515,  515,  515,  515,  515,  308,    0, \n          515,  515,  515,  515,  618,  527,  515,  618,  618,  515, \n          618,  618,  515,  618,  515,  618,  515,  618,  515,  618, \n          515,  515,  515,  515,  515,  515,  515,  618,  515,  618, \n          515,    0,  618,  618,  618,  618,  618,  618,    0,    0, \n          110,  618,  515,  618,  618,    0,  618,  618,  618,  618, \n            0,  411,    0,    0,    0,  897,    0,    0,    0,  618, \n          618,  618,  515,    0,    0,  619,  619,  619,    0,  619, \n          518,  518,  518,  619,  619,  518,  518,  518,  619,  518, \n          619,  619,  619,  619,  619,  619,  619,  310,  619,  518, \n          518,  619,  619,  619,  619,  619,  619,  619,  518,  518, \n          619,  518,  518,  518,  518,  518,    0,  619,    0,    0, \n          619,  619,  619,  518,  619,  619,  619,  619,  619,  619, \n          619,  619,  619,  619,  619,  518,  518,  518,  518,  518, \n          518,  518,  518,  518,  518,  518,  518,  518,  518,  109, \n            0,  518,  518,  518,  518,  619,  530,  518,  619,  619, \n          518,  619,  619,  518,  619,  518,  619,  518,  619,  518, \n          619,  518,  518,  518,  518,  518,  518,  518,  619,  518, \n          619,  518,    0,  619,  619,  619,  619,  619,  619,    0, \n            0,  625,  619,  518,  619,  619,  321,  619,  619,  619, \n          619,  625,    0,  199,  386,  199,  199,  199,  199,  199, \n          619,  619,  619,  518,  199,    0,    0,    0,    0,    0, \n          399,  400,    0,    0,    0,  520,    0,    0,    0,    0, \n            0,    0,    0,  520,    0,  625,  401,  199,  199,    0, \n          403,  404,  405,  406,    0,  199,  199,  199,  199,  625, \n          625,    0,  125,    0,  625,    0,  550,    0,  551,  552, \n          553,  554,  555,    0,    0,    0,  897,  556,    0,  897, \n            0,  897,    0,  897,    0,    0,    0,    0,    0,    0, \n            0,    0,  625,    0,    0,  129,  634,  634,  634,    0, \n          557,  199,  634,  634,    0,  634,  635,  635,  635,    0, \n          561,  562,  635,  635,    0,  635,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  386,  387,  388,  389,  390, \n          391,  392,  393,  394,  395,  396,    0,  397,  398,    0, \n          621,  399,  400,    0,  310,    0,    0,    0,    0,    0, \n          621,  310,  310,    0,  563,    0,    0,  401,    0,  402, \n            0,  403,  404,  405,  406,  407,  408,  409,    0,  410, \n            0,  897,    0,  897,    0,  897,  634,    0,  897,    0, \n            0,    0,    0,    0,  621,    0,  635,    0,    0,  386, \n            0,    0,    0,    0,  128,    0,    0,  634,  621,  621, \n            0,  124,    0,  621,  897,  399,  400,  635,    0,    0, \n            0,  550,    0,  551,  552,  553,  554,  555,    0,    0, \n            0,  401,  556,  402,    0,  403,  404,  405,  406,  634, \n            0,  621,    0,    0,    0,    0,    0,    0,    0,  635, \n            0,    0,    0,  321,    0,  557,  558,    0,    0,    0, \n          321,  321,  209,  559,  560,  561,  562,    0,  621,  621, \n          621,    0,  621,  625,  625,  625,  621,  621,  625,  625, \n          625,  621,  625,  621,  621,  621,  621,  621,  621,  621, \n            0,  625,  625,  625,  621,  621,  621,  621,  621,  621, \n          621,  625,  625,  621,  625,  625,  625,  625,  625,  563, \n          621,  209,    0,  621,  621,  621,  625,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  625,  625, \n          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, \n          625,  625,  106,    0,  625,  625,  625,  625,  621,  194, \n          625,  621,  621,  625,  621,  621,  625,  621,  625,  621, \n          625,  621,  625,  621,  625,  625,  625,  625,  625,  625, \n          625,  621,  625,  625,  625,    0,  621,  621,  621,  621, \n          621,  621,    0,    0,    0,  621,  625,  621,  621,  625, \n          621,  621,  621,  621,    0,    0,    0,    0,  194,    0, \n            0,  122,    0,  621,  621,  621,  625,  621,  621,  621, \n            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,    0, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,    0,  621, \n          122,    0,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,    0,  526,  621,  621,  621,  621,  621,    0,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,    0,  621,  621,  621,  621,  621, \n          621,    0,    0,  622,  621,  621,  621,  621,    0,  621, \n          621,  621,  621,  622,    0,    0,    0,    0,    0,    0, \n            0,    0,  621,  621,  621,  621,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  209,    0, \n          209,  209,  209,  209,  209,    0,    0,  622,    0,  209, \n            0,    0,    0,  386,    0,    0,    0,  125,  625,    0, \n          522,  622,  622,    0,  126,    0,  622,    0,  522,  399, \n          400,    0,  209,  209,    0,    0,    0,    0,    0,    0, \n          209,  209,  209,  209,    0,  401,    0,  402,    0,  403, \n          404,  405,  406,    0,  622,  409,    0,  410,    0,    0, \n            0,    0,    0,    0,    0,    0,  625,    0,    0,    0, \n            0,    0,    0,  625,  625,    0,    0,    0,    0,  621, \n            0,    0,    0,    0,    0,  194,  209,  194,  194,  194, \n          194,  194,    0,    0,    0,    0,  194,    0,  122,    0, \n          625,    0,  311,    0,    0,    0,    0,  523,    0,    0, \n            0,    0,  311,    0,    0,  523,    0,    0,    0,  194, \n          194,    0,    0,    0,    0,    0,    0,  194,  194,  194, \n          194,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  311,  386,  387,  388, \n          389,  390,  391,  392,  393,  394,  395,  396,    0,  526, \n          311,  311,    0,  399,  400,  311,  526,  526,    0,    0, \n            0,    0,    0,  194,    0,    0,    0,    0,    0,  401, \n            0,  402,    0,  403,  404,  405,  406,  407,  408,  409, \n            0,  410,    0,  311,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  176,    0,    0,    0,    0,    0, \n          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,    0,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,    0,  622,  176,    0,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  105,    0,  622,  622,  622,  622, \n          622,  177,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,    0,  622,  622, \n          622,  622,  622,  622,    0,    0,    0,  622,  622,  622, \n          622,  621,  622,  622,  622,  622,    0,    0,    0,    0, \n          177,    0,    0,  113,    0,  622,  622,  622,  622,  620, \n          620,  620,    0,  620,  311,  311,  311,  620,  620,  311, \n          311,  311,  620,  311,  620,  620,  620,  620,  620,  620, \n          620,    0,  620,  311,  311,  620,  620,  620,  620,  620, \n          620,  620,  311,  311,  620,  311,  311,  311,  311,  311, \n            0,  620,  113,    0,  620,  620,  620,  311,  620,  620, \n          620,  620,  620,  620,  620,  620,  620,  620,  620,  311, \n          311,  311,  311,  311,  311,  311,  311,  311,  311,  311, \n          311,  311,  311,    0,  517,  311,  311,  311,  311,  620, \n            0,  311,  620,  620,  311,  620,  620,  311,  620,  311, \n          620,  311,  620,  311,  620,  311,  311,  311,  311,  311, \n          311,  311,  620,  311,  620,  311,    0,  620,  620,  620, \n          620,  620,  620,    0,    0,  626,  620,  311,  620,  620, \n            0,  620,  620,  620,  620,  626,    0,    0,    0,    0, \n            0,    0,    0,    0,  620,  620,  620,  311,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          176,    0,  176,  176,  176,  176,  176,    0,    0,  626, \n            0,  176,    0,    0,    0,    0,    0,    0,    0,  124, \n          621,  386,  525,  626,  626,    0,  391,  392,  626,    0, \n          525,    0,    0,    0,  176,  176,    0,  399,  400,    0, \n            0,    0,  176,  176,  176,  176,    0,    0,    0,    0, \n            0,    0,    0,  401,    0,  402,  626,  403,  404,  405, \n          406,  407,  408,  409,    0,  410,    0,    0,  621,    0, \n            0,    0,    0,    0,    0,  621,  621,    0,    0,    0, \n            0,  621,    0,    0,    0,    0,    0,  177,  176,  177, \n          177,  177,  177,  177,    0,    0,    0,    0,  177,    0, \n          113,    0,  621,    0,  627,    0,    0,    0,    0,  524, \n            0,    0,    0,    0,  627,    0,    0,  524,    0,    0, \n            0,  177,  177,    0,    0,    0,    0,    0,    0,  177, \n          177,  177,  177,    0,    0,    0,    0,    0,    0,    0, \n          386,  387,  388,  389,  390,  391,  392,  393,  627,  395, \n          396,    0,    0,    0,    0,    0,  399,  400,    0,    0, \n            0,  517,  627,  627,    0,    0,    0,  627,  517,  517, \n            0,    0,  401,    0,  402,  177,  403,  404,  405,  406, \n          407,  408,  409,    0,  410,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  627,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  178,    0,    0,    0, \n            0,    0,  623,  623,  623,    0,  623,  626,  626,  626, \n          623,  623,  626,  626,  626,  623,  626,  623,  623,  623, \n          623,  623,  623,  623,    0,  626,  626,  626,  623,  623, \n          623,  623,  623,  623,  623,  626,  626,  623,  626,  626, \n          626,  626,  626,    0,  623,  178,    0,  623,  623,  623, \n          626,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  626,  626,  626,  626,  626,  626,  626,  626, \n          626,  626,  626,  626,  626,  626,  107,    0,  626,  626, \n          626,  626,  623,  135,  626,  623,  623,  626,  623,  623, \n          626,  623,  626,  623,  626,  623,  626,  623,  626,  626, \n          626,  626,  626,  626,  626,  623,  626,  626,  626,    0, \n          623,  623,  623,  623,  623,  623,    0,    0,    0,  623, \n          626,  623,  623,  622,  623,  623,  623,  623,    0,    0, \n            0,    0,  135,    0,    0,  112,    0,  623,  623,  623, \n          626,  624,  624,  624,    0,  624,  627,  627,  627,  624, \n          624,  627,  627,  627,  624,  627,  624,  624,  624,  624, \n          624,  624,  624,    0,  627,  627,  627,  624,  624,  624, \n          624,  624,  624,  624,  627,  627,  624,  627,  627,  627, \n          627,  627,    0,  624,  112,    0,  624,  624,  624,  627, \n          624,  624,  624,  624,  624,  624,  624,  624,  624,  624, \n          624,  627,  627,  627,  627,  627,  627,  627,  627,  627, \n          627,  627,  627,  627,  627,    0,  516,  627,  627,  627, \n          627,  624,    0,  627,  624,  624,  627,  624,  624,  627, \n          624,  627,  624,  627,  624,  627,  624,  627,  627,  627, \n          627,  627,  627,  627,  624,  627,  627,  627,    0,  624, \n          624,  624,  624,  624,  624,    0,    0,  320,  624,  627, \n          624,  624,    0,  624,  624,  624,  624,  320,    0,    0, \n            0,    0,    0,    0,    0,    0,  624,  624,  624,  627, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  178,    0,  178,  178,  178,  178,  178,    0, \n            0,  320,    0,  178,    0,    0,    0,    0,    0,    0, \n            0,  126,  622,    0,  526,  320,  320,    0,  127,    0, \n          320,    0,  526,    0,    0,    0,  178,  178,    0,    0, \n            0,    0,    0,    0,  178,  178,  178,  178,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  320,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          622,    0,    0,    0,    0,    0,    0,  622,  622,    0, \n            0,    0,    0,  622,    0,    0,    0,    0,    0,  135, \n          178,  135,  135,  135,  135,  135,    0,    0,    0,    0, \n          135,    0,  112,    0,  622,    0,  439,    0,    0,    0, \n            0,  515,    0,    0,    0,    0,  439,    0,    0,  515, \n            0,    0,    0,  135,  135,    0,    0,    0,    0,    0, \n            0,  135,  135,  135,  135,    0,    0,    0,    0,    0, \n            0,    0,  386,  387,  388,  389,  390,  391,  392,    0, \n          439,  395,  396,    0,    0,    0,    0,    0,  399,  400, \n            0,    0,    0,  516,    0,  439,    0,    0,    0,  439, \n          516,  516,    0,    0,  401,    0,  402,  135,  403,  404, \n          405,  406,  407,  408,  409,    0,  410,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  439,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  136,    0, \n            0,    0,    0,    0,  622,  622,  622,    0,  622,  320, \n          320,  320,  622,  622,  320,  320,  320,  622,  320,  622, \n          622,  622,  622,  622,  622,  622,    0,    0,  320,  320, \n          622,  622,  622,  622,  622,  622,  622,  320,  320,  622, \n          320,  320,  320,  320,  320,    0,  622,  136,    0,  622, \n          622,  622,  320,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  320,  320,  320,  320,  320,  320, \n          320,  320,  320,  320,  320,  320,  320,  320,    0,    0, \n          320,  320,  320,  320,  622,  545,  320,  622,  622,  320, \n          622,  622,  320,  622,  320,  622,  320,  622,  320,  622, \n          320,  320,  320,  320,  320,  320,  320,  622,  320,  411, \n          320,    0,  622,  622,  622,  622,  622,  622,    0,    0, \n            0,  622,  320,  622,  622,    0,  622,  622,  622,  622, \n            0,    0,    0,    0,  545,    0,    0,  115,    0,  622, \n          622,  622,  320,  287,  287,  287,    0,  287,  439,  439, \n          439,  287,  287,  439,  439,  439,  287,  439,  287,  287, \n          287,  287,  287,  287,  287,    0,  439,  439,  439,  287, \n          287,  287,  287,  287,  287,  287,  439,  439,  287,  439, \n          439,  439,  439,  439,    0,  287,  115,    0,  287,  287, \n          287,    0,  287,  287,  287,  287,  287,  287,  287,  287, \n          287,  287,  287,  439,  439,  439,  439,  439,  439,  439, \n          439,  439,  439,  439,  439,  439,  439,  411,  519,  439, \n          439,  439,  439,  287,    0,  439,  287,    0,  439,  287, \n          287,  439,  287,  439,  287,  439,  287,  439,  287,  439, \n          439,  439,  439,  439,  439,  439,  287,  439,  439,  439, \n            0,  287,  287,  287,  287,  287,  287,    0,    0,  647, \n          287,    0,  287,  287,    0,  287,  287,  287,  287,  647, \n            0,    0,    0,    0,    0,    0,    0,    0,  287,  287, \n          287,  439,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  136,    0,  136,  136,  136,  136, \n          136,    0,    0,  647,    0,  136,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  518,    0,  647,    0, \n            0,    0,  647,    0,  518,    0,    0,    0,  136,  136, \n            0,    0,    0,    0,    0,    0,  136,  136,  136,  136, \n            0,    0,    0,  796,    0,    0,    0,    0,    0,    0, \n          647,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  386,  387,  388,  389,  390,  391,  392, \n          393,  394,  395,  396,    0,  397,  398,    0,    0,  399, \n          400,  545,  136,  545,  545,  545,  545,  545,    0,    0, \n            0,    0,  545,    0,  115,  401,    0,  402,  327,  403, \n          404,  405,  406,  407,  408,  409,    0,  410,  327,    0, \n            0,    0,    0,    0,    0,  545,    0,    0,    0,    0, \n            0,    0,    0,  545,  545,  545,  545,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  327,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  519,    0,  327,    0,    0, \n            0,  327,  519,  519,    0,    0,    0,    0,    0,  545, \n            0,  386,  387,  388,  389,  390,  391,  392,  393,  394, \n          395,  396,    0,  397,  398,    0,    0,  399,  400,  327, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  401,    0,  402,    0,  403,  404,  405, \n          406,  407,  408,  409,    0,  410,  287,  287,  287,    0, \n          287,  647,  647,  647,  287,  287,  647,  647,  647,  287, \n          647,  287,  287,  287,  287,  287,  287,  287,    0,  647, \n          647,  647,  287,  287,  287,  287,  287,  287,  287,  647, \n          647,  287,  647,  647,  647,  647,  647,    0,  287,    0, \n            0,  287,  287,  287,    0,  287,  287,  287,  287,  287, \n          287,  287,  287,  287,  287,  287,  647,  647,  647,  647, \n          647,  647,  647,  647,  647,  647,  647,  647,  647,  647, \n          258,    0,  647,  647,  647,  647,  287,  625,  647,  287, \n          258,  647,  287,  287,  647,  287,  647,  287,  647,  287, \n          647,  287,  647,  647,  647,  647,  647,  647,  647,  287, \n          647,  647,  647,    0,  287,  287,  287,  287,  287,  287, \n            0,  625,    0,  287,  258,  287,  287,    0,  287,  287, \n          287,  287,    0,    0,    0,    0,  625,    0,  258,  258, \n            0,  287,  287,  287,  647,  287,  287,  287,    0,  287, \n          327,  327,  327,  287,  287,  327,  327,  327,  287,  327, \n          287,  287,  287,  287,  287,  287,  287,    0,  625,  327, \n          327,  287,  287,  287,  287,  287,  287,  287,  327,  327, \n          287,  327,  327,  327,  327,  327,    0,  287,    0,    0, \n          287,  287,  287,    0,  287,  287,  287,  287,  287,  287, \n          287,  287,  287,  287,  287,  327,  327,  327,  327,  327, \n          327,  327,  327,  327,  327,  327,  327,  327,  327,    0, \n            0,  327,  327,  327,  327,  287,    0,  327,  287,    0, \n          327,  287,  287,  327,  287,  327,  287,  327,  287,  327, \n          287,  327,  327,  327,  327,  327,  327,  327,  287,  327, \n          515,  327,    0,  287,  287,  287,  287,  287,  287,    0, \n          515,    0,  287,    0,  287,  287,    0,  287,  287,  287, \n          287,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          287,  287,  287,  327,  550,    0,  551,  552,  553,  554, \n          555,    0,    0,    0,   92,  556,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  515, \n            0,  111,    0,  515,    0,    0,    0,    0,  557,    0, \n            0,    0,    0,    0,    0,    0,  559,  560,  561,  562, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  515,  258,  258,  258,    0,    0,  258,  258,  258, \n            0,  258,    0,    0,    0,    0,    0,  625,    0,    0, \n            0,  258,  258,    0,    0,    0,    0,    0,    0,    0, \n          258,  258,  563,  258,  258,  258,  258,  258,    0,    0, \n            0,    0,    0,    0,    0,  258,    0,    0,    0,  518, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  518, \n            0,    0,    0,    0,    0,  625,    0,    0,    0,    0, \n            0,    0,  625,  625,    0,    0,    0,    0,  621,  258, \n            0,    0,  258,    0,    0,  258,    0,  258,    0,    0, \n            0,    0,    0,   95,    0,    0,  625,    0,    0,  625, \n            0,    0,    0,  258,    0,  635,  629,    0,  518,  636, \n          114,    0,  518,  188,  189,  258,  190,  191,  192,  193, \n          194,  195,  196,    0,    0,  197,  198,    0,    0,    0, \n          199,  200,  201,  202,    0,  258,    0,    0,    0,    0, \n          518,    0,    0,    0,    0,    0,    0,  204,  205,    0, \n          206,  207,  208,  209,  210,  211,  212,  213,  214,  215, \n          216,    0,    0,  217,    0,    0,    0,  618,  618,  618, \n            0,  618,  515,  515,  515,  618,  618,    0,  515,  515, \n          618,  515,  618,  618,  618,  618,  618,  618,  618,    0, \n          618,    0,    0,  618,  618,  618,  618,  618,  618,  618, \n          515,  515,  618,  515,  515,  515,  515,  515,    0,  618, \n            0,    0,  618,  618,  618,    0,  618,  618,  618,  618, \n          618,  618,  618,  618,  618,  618,  618,  515,  515,  515, \n          515,  515,  515,  515,  515,  515,  515,  515,  515,  515, \n          515,    0,    0,  515,  515,  515,  515,  618,  527,  111, \n          618,  618,  515,  618,  618,    0,  618,    0,  618,  515, \n          618,  515,  618,  515,  515,  515,  515,  515,  515,  515, \n          618,  515,  618,  515,    0,  618,  618,  618,  618,  618, \n          618,    0,  881,    0,  618,  881,  618,  618,    0,  618, \n          618,  618,  618,    0,  893,    0,    0,    0,  111,    0, \n          129,    0,  618,  618,  618,  515,  619,  619,  619,    0, \n          619,  518,  518,  518,  619,  619,    0,  518,  518,  619, \n          518,  619,  619,  619,  619,  619,  619,  619,    0,  619, \n          515,    0,  619,  619,  619,  619,  619,  619,  619,  518, \n          518,  619,  518,  518,  518,  518,  518,    0,  619,  129, \n            0,  619,  619,  619,    0,  619,  619,  619,  619,  619, \n          619,  619,  619,  619,  619,  619,  518,  518,  518,  518, \n          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, \n            0,  310,  518,  518,  518,  518,  619,  530,    0,  619, \n          619,  518,  619,  619,    0,  619,    0,  619,  518,  619, \n          518,  619,  518,  518,  518,  518,  518,  518,  518,  619, \n          518,  619,  518,    0,  619,  619,  619,  619,  619,  619, \n            0,    0,  625,  619,    0,  619,  619,    0,  619,  619, \n          619,  619,  625,    0,    0,    0,    0,    0,    0,    0, \n            0,  619,  619,  619,  518,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  106,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  625,    0,  125,    0,  625,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  893,    0,    0,  893,    0, \n          881,    0,  893,    0,    0,    0,  111,    0,    0,    0, \n            0,    0,    0,  625,    0,    0,    0,    0,    0,  618, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  129,    0,    0, \n            0,  621,    0,    0,    0,    0,    0,  515,    0,    0, \n            0,  621,    0,    0,  515,  515,    0,    0,    0,    0, \n          618,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          893,    0,  893,    0,  893,    0,    0,  893,    0,    0, \n            0,  618,    0,    0,    0,  105,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  310,    0, \n          621,    0,  124,  893,  621,  310,  310,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  621,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  621, \n          621,  621,    0,  621,  625,  625,  625,  621,  621,    0, \n          625,  625,  621,  625,  621,  621,  621,  621,  621,  621, \n          621,    0,  625,    0,    0,  621,  621,  621,  621,  621, \n          621,  621,  625,  625,  621,  625,  625,  625,  625,  625, \n            0,  621,    0,    0,  621,  621,  621,    0,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  625, \n          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, \n          625,  625,  625,    0,    0,  625,  625,  625,  625,  621, \n            0,  114,  621,  621,  625,  621,  621,    0,  621,    0, \n          621,  625,  621,  625,  621,  625,  625,  625,  625,  625, \n          625,  625,  621,  625,  625,  625,    0,  621,  621,  621, \n          621,  621,  621, \n      };\n   }\n\n   private static final short[] yyTable2() {\n      return new short[] {\n\n            0,    0,    0,  621,    0,  621,  621,    0,  621,  621, \n          621,  621,    0,    0,    0,    0,    0,  114,    0,  128, \n            0,  621,  621,  621,  625,  621,  621,  621,    0,  621, \n          621,  621,  621,  621,  621,    0,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,    0,  621,  518, \n            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,    0,  621,  128,    0, \n          621,  621,  621,    0,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,    0, \n          321,  621,  621,  621,  621,  621,    0,    0,  621,  621, \n          621,  621,  621,    0,  621,    0,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,    0,  621,  621,  621,  621,  621,  621,    0, \n            0,  622,  621,    0,  621,  621,    0,  621,  621,  621, \n          621,  622,    0,    0,    0,    0,    0,    0,    0,    0, \n          621,  621,  621,  621,    0,    0,  620,  621,    0,    0, \n          622,    0,    0,    0,  188,  189,    0,  190,  191,  192, \n          193,  194,  195,  196,    0,  107,  197,  198,    0,    0, \n            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, \n          622,  304,  126,    0,  622,    0,    0,    0,  204,  205, \n            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, \n          215,  216,    0,    0,  217,  114,    0,    0,    0,    0, \n            0,    0,  622,    0,    0,    0,    0,    0,  619,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  128,    0,    0,    0, \n          625,    0,    0,    0,    0,    0,  518,    0,    0,    0, \n          625,    0,    0,  518,  518,    0,    0,    0,    0,  619, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          619,    0,    0,    0,  625,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  321,    0,  625, \n            0,  125,    0,  625,  321,  321,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  625,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  622,  622, \n          622,    0,  622,  622,  622,  622,  622,  622,    0,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n            0,  622,    0,    0,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, \n          622,    0,    0,  622,  622,  622,    0,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,    0,    0,  622,  622,  622,  622,  622,    0, \n          125,  622,  622,  622,  622,  622,    0,  622,    0,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, \n          622,  622,    0,    0,    0,  622,    0,  622,  622,    0, \n          622,  622,  622,  622,    0,    0,    0,    0,    0,  125, \n            0,    0,    0,  622,  622,  622,  622,  621,  621,  621, \n            0,  621,  625,  625,  625,  621,  621,    0,  625,  625, \n          621,  625,  621,  621,  621,  621,  621,  621,  621,    0, \n          625,  625,    0,  621,  621,  621,  621,  621,  621,  621, \n          625,  625,  621,  625,  625,  625,  625,  625,    0,  621, \n            0,    0,  621,  621,  621,    0,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  625,  625,  625, \n          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, \n          625,    0,    0,  625,  625,  625,  625,  621,    0,    0, \n          621,  621,  625,  621,  621,    0,  621,    0,  621,  625, \n          621,  625,  621,  625,  625,  625,  625,  625,  625,  625, \n          621,  625,  625,  625,    0,  621,  621,  621,  621,  621, \n          621,    0,    0,  621,  621,    0,  621,  621,    0,  621, \n          621,  621,  621,  621,    0,    0,    0,    0,    0,    0, \n            0,    0,  621,  621,  621,  625,    0,    0,  628,  629, \n            0,    0,  630,    0,    0,    0,  188,  189,    0,  190, \n          191,  192,  193,  194,  195,  196,    0,  621,  197,  198, \n            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, \n            0,    0,  621,  304,  124,    0,  621,    0,    0,    0, \n          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, \n          213,  214,  215,  216,    0,    0,  217,  125,    0,    0, \n            0,    0,    0,    0,  621,    0,    0,    0,    0,    0, \n          625,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  622,    0,    0,    0,    0,    0,  625,    0, \n            0,    0,  622,    0,    0,  625,  625,    0,    0,    0, \n            0,  621,    0,    0,  669,  621,    0,    0,  670,    0, \n            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, \n          195,  196,  625,    0,  197,  198,  622,    0,    0,  199, \n          200,  201,  202,    0,    0,    0,    0,    0,    0,  304, \n            0,  622,    0,  126,    0,  622,  204,  205,    0,  206, \n          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, \n            0,    0,  217,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  622,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          621,  621,  621,    0,  621,  621,  621,  621,  621,  621, \n            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,    0,  621,    0,    0,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,    0,  621,    0,    0,  621,  621,  621,    0,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,    0,    0,  621,  621,  621,  621, \n          621,    0,  124,  621,  621,  621,  621,  621,    0,  621, \n            0,  621,  621,  621,  621,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  621,    0,  621,  621, \n          621,  621,  621,  621,    0,    0,    0,  621,    0,  621, \n          621,    0,  621,  621,  621,  621,    0,    0,    0,    0, \n            0,  124,    0,    0,    0,  621,  621,  621,  621,  622, \n          622,  622,    0,  622,  622,  622,  622,  622,  622,    0, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,    0,  622,  621,    0,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n            0,  622,    0,    0,  622,  622,  622,    0,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,    0,    0,  622,  622,  622,  622,  622, \n            0,    0,  622,  622,  622,  622,  622,    0,  622,    0, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,    0,  622,  622,  622, \n          622,  622,  622,    0,    0,  320,  622,    0,  622,  622, \n            0,  622,  622,  622,  622,  320,    0,    0,  101,    0, \n            0,    0,    0,    0,  622,  622,  622,  622,    0,    0, \n          635,  629,    0,    0,  636,    0,    0,    0,  188,  189, \n            0,  190,  191,  192,  193,  194,  195,  196,    0,  108, \n          197,  198,  101,    0,    0,  199,  200,  201,  202,    0, \n            0,    0,    0,    0,  320,  304,  127,    0,  320,  101, \n            0,    0,  204,  205,    0,  206,  207,  208,  209,  210, \n          211,  212,  213,  214,  215,  216,    0,    0,  217,  124, \n            0,    0,    0,    0,    0,    0,  320,    0,    0,  524, \n            0,    0,  621,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  320,    0,    0,    0,    0,    0, \n          621,    0,    0,    0,  320,    0,    0,  621,  621,    0, \n            0,    0,    0,  621,    0,    0,  687,  621,    0,    0, \n          688,    0,    0,    0,  188,  189,    0,  190,  191,  192, \n          193,  194,  195,  196,  621,    0,  197,  198,  320,    0, \n            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, \n            0,  304,    0,  320,    0,  127,    0,  320,  204,  205, \n            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, \n          215,  216,    0,    0,  217,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  320,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  622,  622,  622,    0,  622,  320,  320,  320, \n          622,  622,    0,  320,  320,  622,  320,  622,  622,  622, \n          622,  622,  622,  622,    0,    0,    0,  101,  622,  622, \n          622,  622,  622,  622,  622,  320,  320,  622,  320,  320, \n          320,  320,  320,    0,  622,    0,    0,  622,  622,  622, \n            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  320,  320,  320,  320,  320,  320,  320,  320, \n          320,  320,  320,  320,  320,  320,  524,    0,  320,  320, \n          320,  320,  622,  524,  524,  622,  622,  320,  622,  622, \n          101,  622,    0,  622,  320,  622,  320,  622,  320,  320, \n          320,  320,  320,  320,  320,  622,  320,  647,  320,    0, \n          622,  622,  622,  622,  622,  622,    0,  647,    0,  622, \n            0,  622,  622,    0,  622,  622,  622,  622,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  622,  622,  622, \n          320,  622,  622,  622,    0,  622,  320,  320,  320,  622, \n          622,    0,  320,  320,  622,  320,  622,  622,  622,  622, \n          622,  622,  622,    0,    0,    0,  647,  622,  622,  622, \n          622,  622,  622,  622,  320,  320,  622,  320,  320,  320, \n          320,  320,    0,  622,    0,    0,  622,  622,  622,    0, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  320,  320,  320,  320,  320,  320,  320,  320,  320, \n          320,  320,  320,  320,  320,    0,    0,  320,  320,  320, \n          320,  622,    0,    0,  622,  622,  320,  622,  622,    0, \n          622,    0,  622,  320,  622,  320,  622,  320,  320,  320, \n          320,  320,  320,  320,  622,  320,  440,  320,    0,  622, \n          622,  622,  622,  622,  622,    0,  440,    0,  622,    0, \n          622,  622,    0,  622,  622,  622,  622,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  622,  622,  622,  320, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  440,  440,    0,  123,    0,  440, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  440,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  126,    0,    0,    0, \n            0,    0,    0,    0,  287,  287,  287,    0,  287,  647, \n          647,  647,  287,  287,  647,  647,  647,  287,  647,  287, \n          287,  287,  287,  287,  287,  287,    0,  647,  647,    0, \n          287,  287,  287,  287,  287,  287,  287,  647,  647,  287, \n          647,  647,  647,  647,  647,  126,  287,    0,    0,  287, \n          287,  287,    0,  287,  287,  287,  287,  287,  287,  287, \n          287,  287,  287,  287,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  647,    0,  622,    0,    0, \n            0,    0,  647,  647,  287,    0,    0,  287,    0,  647, \n          287,  287,    0,  287,    0,  287,    0,  287,    0,  287, \n            0,  439,    0,    0,    0,    0,    0,  287,    0,  647, \n          647,  439,  287,  287,  287,  287,  287,  287,    0,    0, \n            0,  287,    0,  287,  287,    0,  287,  287,  287,  287, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  287, \n          287,  287,  647,    0,    0,  439,    0,    0,  440,  440, \n          440,    0,    0,  440,  440,  440,    0,  440,    0,  439, \n          439,    0,    0,    0,  439,    0,  440,  440,  440,    0, \n            0,    0,    0,    0,    0,    0,  440,  440,    0,  440, \n          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, \n            0,  440,  439,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  440,  440,  440,  440,  440,  440,  440, \n          440,  440,  440,  440,  440,  440,  440,    0,    0,  440, \n          440,  440,  440,    0,  521,  440,    0,    0,  440,    0, \n            0,  440,    0,  440,  521,  440,    0,  440,    0,  440, \n          440,  440,  440,  440,  440,  440,    0,  440,  440,  440, \n            0,    0,    0,  126,    0,    0,    0,    0,    0,    0, \n            0,  440,    0,    0,    0,    0,  622,    0,  521,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  440,  521,  521,    0,  117,    0,  521,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  622,  521,    0,    0,    0,    0, \n            0,  622,  622,    0,    0,    0,    0,  622,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  520,    0,    0,    0,    0,    0,    0,  622,    0, \n            0,  520,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  439,  439,  439,    0,    0,  439,  439, \n          439,    0,  439,    0,    0,    0,    0,    0,    0,    0, \n            0,  439,  439,  439,    0,  520,    0,    0,    0,    0, \n            0,  439,  439,    0,  439,  439,  439,  439,  439,  520, \n          520,    0,  116,    0,  520,    0,  439,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  439,  439, \n          439,  439,  439,  439,  439,  439,  439,  439,  439,  439, \n          439,  439,  520,    0,  439,  439,  439,  439,    0,    0, \n          439,    0,    0,  439,    0,    0,  439,    0,  439,    0, \n          439,  103,  439,    0,  439,  439,  439,  439,  439,  439, \n          439,    0,  439,  439,  439,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  439,    0,    0,    0, \n            0,    0,    0,    0,    0,  103,  521,  521,  521,    0, \n            0,  521,  521,  521,    0,  521,  439,    0,    0,    0, \n            0,    0,  103,    0,    0,  521,  521,    0,    0,    0, \n            0,    0,    0,    0,  521,  521,    0,  521,  521,  521, \n          521,  521,    0,    0,    0,    0,    0,    0,    0,  521, \n          522,    0,  526,    0,    0,    0,    0,    0,    0,    0, \n          522,  521,  521,  521,  521,  521,  521,  521,  521,  521, \n          521,  521,  521,  521,  521,    0,    0,  521,  521,  521, \n          521,    0,  533,  521,    0,    0,  521,    0,    0,  521, \n            0,  521,    0,  521,  522,  521,    0,  521,  521,  521, \n          521,  521,  521,  521,    0,  521,    0,  521,  522,  522, \n            0,  118,    0,  522,    0,    0,    0,    0,    0,  521, \n            0,    0,    0,  520,  520,  520,    0,    0,  520,  520, \n          520,    0,  520,    0,    0,    0,    0,    0,    0,  521, \n            0,  522,  520,  520,    0,    0,    0,    0,    0,    0, \n            0,  520,  520,    0,  520,  520,  520,  520,  520,    0, \n            0,    0,    0,    0,    0,    0,  520,  523,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  523,  520,  520, \n          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, \n          520,  520,    0,    0,  520,  520,  520,  520,    0,  532, \n          520,    0,    0,  520,    0,    0,  520,    0,  520,    0, \n          520,  523,  520,    0,  520,  520,  520,  520,  520,  520, \n          520,    0,  520,    0,  520,  523,  523,    0,  119,    0, \n          523,    0,    0,    0,    0,    0,  520,    0,    0,    0, \n          103,    0,   94,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  520,    0,  523,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,   94,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  526, \n          525,    0,    0,   94,    0,    0,  526,  526,    0,    0, \n          525,    0,    0,  103,    0,    0,    0,    0,    0,    0, \n            0,    0,  522,  522,  522,    0,    0,  522,  522,  522, \n            0,  522,    0,  517,    0,    0,    0,    0,    0,    0, \n            0,  522,  522,    0,  525,    0,    0,    0,    0,    0, \n          522,  522,    0,  522,  522,  522,  522,  522,  525,  525, \n            0,  121,    0,  525,    0,  522,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  522,  522,  522, \n          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, \n          522,  525,    0,  522,  522,  522,  522,    0,  534,  522, \n            0,    0,  522,   93,    0,  522,    0,  522,    0,  522, \n            0,  522,    0,  522,  522,  522,  522,  522,  522,  522, \n           57,  522,    0,  522,    0,    0,    0,    0,    0,    0, \n           57,    0,    0,    0,    0,  522,    0,   93,    0,  523, \n          523,  523,    0,    0,  523,  523,  523,    0,  523,    0, \n            0,    0,    0,    0,   93,  522,    0,    0,  523,  523, \n            0,    0,    0,    0,    0,    0,    0,  523,  523,    0, \n          523,  523,  523,  523,  523,    0,    0,    0,    0,   57, \n            0,    0,  523,  524,  516,    0,    0,    0,    0,    0, \n            0,    0,    0,  524,  523,  523,  523,  523,  523,  523, \n          523,  523,  523,  523,  523,  523,  523,  523,    0,    0, \n          523,  523,  523,  523,    0,  535,  523,    0,    0,  523, \n            0,   94,  523,    0,  523,    0,  523,  524,  523,    0, \n          523,  523,  523,  523,  523,  523,  523,    0,  523,    0, \n          523,  524,  524,    0,  120,    0,  524,    0,    0,    0, \n            0,    0,  523,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  525,  525,  525,    0,    0,  525,  525,  525, \n          517,  525,  523,    0,  524,    0,    0,  517,  517,    0, \n            0,  525,  525,    0,   94,    0,    0,    0,    0,    0, \n          525,  525,    0,  525,  525,  525,  525,  525,    0,    0, \n            0,    0,    0,    0,    0,  525,  526,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  526,  525,  525,  525, \n          525,  525,  525,  525,  525,  525,  525,  525,  525,  525, \n          525,    0,    0,  525,  525,  525,  525,    0,  537,  525, \n            0,    0,  525,    0,    0,  525,    0,  525,    0,  525, \n          526,  525,    0,  525,  525,  525,  525,  525,  525,  525, \n            0,  525,    0,  525,  526,  526,    0,  122,    0,  526, \n            0,    0,   93,    0,    0,  525,    0,    0,    0,    0, \n            0,    0,   57,   57,   57,    0,    0,   57,   57,   57, \n            0,   57,    0,    0,    0,  525,    0,  526,    0,    0, \n            0,   57,    0,    0,    0,    0,    0,    0,    0,    0, \n           57,   57,    0,   57,   57,   57,   57,   57,    0,    0, \n            0,  516,    0,  517,    0,    0,    0,    0,  516,  516, \n            0,    0,    0,  517,    0,   93,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  524,  524,  524,    0,    0, \n          524,  524,  524,    0,  524,    0,    0,    0,    0,    0, \n            0,    0,   57,    0,  524,  524,    0,  517,    0,    0, \n            0,    0,    0,  524,  524,    0,  524,  524,  524,  524, \n          524,  517,  517,   57,  113,    0,  517,    0,  524,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, \n          524,  524,  524,  524,  517,   57,  524,  524,  524,  524, \n            0,  536,  524,    0,    0,  524,    0,    0,  524,    0, \n          524,    0,  524,   96,  524,    0,  524,  524,  524,  524, \n          524,  524,  524,    0,  524,    0,  524,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  524,    0, \n            0,    0,    0,    0,    0,    0,    0,   96,  526,  526, \n          526,    0,    0,  526,  526,  526,    0,  526,  524,    0, \n            0,    0,    0,    0,   96,    0,    0,  526,  526,    0, \n            0,    0,    0,    0,    0,    0,  526,  526,    0,  526, \n          526,  526,  526,  526,    0,    0,    0,    0,    0,    0, \n            0,  526,  516,    0,  519,    0,    0,    0,    0,    0, \n            0,    0,  516,  526,  526,  526,  526,  526,  526,  526, \n          526,  526,  526,  526,  526,  526,  526,    0,    0,  526, \n          526,  526,  526,    0,  538,  526,    0,    0,  526,    0, \n            0,  526,    0,  526,    0,  526,  516,  526,    0,  526, \n          526,  526,  526,  526,  526,  526,    0,  526,    0,  526, \n          516,  516,    0,  112,    0,  516,    0,    0,    0,    0, \n            0,  526,    0,    0,    0,  517,  517,  517,    0,    0, \n          517,  517,  517,    0,  517,    0,    0,    0,    0,    0, \n            0,  526,    0,  516,  517,  517,    0,    0,    0,    0, \n            0,    0,    0,  517,  517,    0,  517,  517,  517,  517, \n          517,    0,    0,    0,    0,    0,    0,    0,  517,  519, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  519, \n          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, \n          517,  517,  517,  517,    0,    0,  517,  517,  517,  517, \n            0,  529,  517,    0,    0,  517,    0,    0,  517,    0, \n          517,    0,  517,  519,  517,    0,  517,  517,  517,  517, \n          517,  517,  517,    0,  517,    0,  517,  519,  519,    0, \n          115,    0,  519,    0,    0,    0,    0,    0,  517,    0, \n            0,    0,   96,    0,  110,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  517,    0, \n          519,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  110,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  519,  647,    0,    0,  110,    0,    0,  519,  519, \n            0,    0,  647,    0,    0,   96,    0,    0,    0,    0, \n            0,    0,    0,    0,  516,  516,  516,    0,    0,  516, \n          516,  516,    0,  516,    0,  310,    0,    0,    0,    0, \n            0,    0,    0,  516,  516,    0,  647,    0,    0,    0, \n            0,    0,  516,  516,    0,  516,  516,  516,  516,  516, \n          647,  647,    0,    0,    0,  647,    0,  516,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  516, \n          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, \n          516,  516,  516,  647,    0,  516,  516,  516,  516,    0, \n          528,  516,    0,    0,  516,  109,    0,  516,    0,  516, \n            0,  516,    0,  516,    0,  516,  516,  516,  516,  516, \n          516,  516,   58,  516,    0,  516,    0,    0,    0,    0, \n            0,    0,   58,    0,    0,    0,    0,  516,    0,  109, \n            0,  519,  519,  519,    0,    0,  519,  519,  519,    0, \n          519,    0,    0,    0,    0,    0,  109,  516,    0,    0, \n          519,  519,    0,    0,    0,    0,    0,    0,    0,  519, \n          519,    0,  519,  519,  519,  519,  519,    0,    0,    0, \n            0,   58,    0,    0,  519,  310,  321,    0,    0,    0, \n            0,    0,    0,    0,    0,  310,  519,  519,  519,  519, \n          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, \n            0,    0,  519,  519,  519,  519,    0,  531,  519,    0, \n            0,  519,    0,  110,  519,    0,  519,    0,  519,  310, \n          519,    0,  519,  519,  519,  519,  519,  519,  519,    0, \n          519,    0,  519,  310,  310,    0,  129,    0,  310,    0, \n            0,    0,    0,    0,  519,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  647,  647,  647,    0,    0,  647, \n          647,  647,  310,  647,  519,    0,  310,    0,    0,  310, \n          310,    0,  647,  647,  647,    0,  110,    0,    0,    0, \n            0,    0,  647,  647,    0,  647,  647,  647,  647,  647, \n            0,    0,    0,    0,    0,    0,    0,  647,  321,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  321,  647, \n          647,  647,  647,  647,  647,  647,  647,  647,  647,  647, \n          647,  647,  647,    0,    0,  647,  647,  647,  647,    0, \n            0,  647,    0,    0,  647,    0,    0,  647,    0,  647, \n            0,  647,  321,  647,    0,  647,  647,  647,  647,  647, \n          647,  647,    0,  647,  647,  647,  321,  321,    0,  128, \n            0,  321,    0,    0,  109,    0,    0,  647,    0,    0, \n            0,    0,    0,    0,   58,   58,   58,    0,    0,   58, \n           58,   58,    0,   58,    0,    0,    0,  647,    0,  321, \n            0,    0,    0,   58,    0,    0,    0,    0,    0,    0, \n            0,    0,   58,   58,    0,   58,   58,   58,   58,   58, \n            0,    0,    0,  321,    0,  463,    0,    0,    0,    0, \n          321,  321,    0,    0,    0,  463,    0,  109,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  310,  310,  310, \n            0,    0,  310,  310,  310,    0,  310,    0,    0,    0, \n            0,    0,    0,    0,   58,    0,  310,  310,    0,  463, \n            0,    0,    0,    0,    0,  310,  310,    0,  310,  310, \n          310,  310,  310,  463,  463,   58,    0,    0,  463,    0, \n          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  310,  310,  310,  310,  310,  310,  310,  310, \n          310,  310,  310,  310,  310,  310,  463,   58,  310,  310, \n          310,  310,    0,    0,  310,    0,    0,  310,    0,    0, \n          310,    0,  310,    0,  310,    0,  310,    0,  310,  310, \n          310,  310,  310,  310,  310,    0,  310,    0,  310,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          321,  321,  321,    0,    0,  321,  321,  321,    0,  321, \n          310,    0,    0,    0,    0,    0,    0,    0,    0,  321, \n          321,    0,    0,    0,    0,    0,    0,    0,  321,  321, \n            0,  321,  321,  321,  321,  321,    0,    0,    0,    0, \n            0,    0,    0,  321,  332,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  332,  321,  321,  321,  321,  321, \n          321,  321,  321,  321,  321,  321,  321,  321,  321,    0, \n            0,  321,  321,  321,  321,    0,    0,  321,    0,    0, \n          321,    0,    0,  321,    0,  321,    0,  321,  332,  321, \n            0,  321,  321,  321,  321,  321,  321,  321,    0,  321, \n            0,  321,  332,  332,    0,    0,    0,  332,    0,    0, \n            0,    0,    0,  321,    0,    0,    0,  463,  463,  463, \n            0,    0,  463,  463,  463,    0,  463,    0,    0,    0, \n            0,    0,    0,  321,    0,  332,  463,  463,    0,    0, \n            0,    0,    0,    0,    0,  463,  463,    0,  463,  463, \n          463,  463,  463,    0,    0,    0,    0,    0,    0,    0, \n          463,  260,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  260,  463,  463,  463,  463,  463,  463,  463,  463, \n          463,  463,  463,  463,  463,  463,    0,    0,  463,  463, \n          463,  463,    0,    0,  463,    0,    0,  463,    0,    0, \n          463,    0,  463,    0,  463,  260,  463,    0,  463,  463, \n          463,  463,  463,  463,  463,    0,  463,    0,  463,  260, \n          260,    0,    0,    0,  260,    0,    0,    0,  690,  629, \n          463,    0,  691,    0,    0,    0,  188,  189,    0,  190, \n          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, \n          463,    0,  363,  199,  200,  201,  202,    0,    0,    0, \n            0,    0,    0,  304,    0,    0,    0,    0,    0,    0, \n          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, \n          213,  214,  215,  216,  327,    0,  217,    0,    0,    0, \n            0,    0,    0,    0,  327,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  332,  332,  332,    0, \n            0,  332,  332,  332,    0,  332,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  332,  332,    0,  327,    0, \n            0,    0,    0,    0,  332,  332,    0,  332,  332,  332, \n          332,  332,  327,  327,    0,    0,    0,  327,    0,  332, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  332,  332,  332,  332,  332,  332,  332,  332,  332, \n          332,  332,  332,  332,  332,  327,    0,  332,  332,  332, \n          332,    0,    0,  332,    0,    0,  332,    0,    0,  332, \n            0,  332,    0,  332,    0,  332,    0,  332,  332,  332, \n          332,  332,  332,  332,  298,  332,    0,  332,    0,    0, \n            0,    0,    0,    0,  298,    0,    0,    0,    0,  332, \n            0,    0,    0,  260,  260,  260,    0,    0,  260,  260, \n          260,    0,  260,    0,    0,    0,    0,    0,    0,  332, \n            0,    0,  260,  260,    0,    0,    0,    0,  294,    0, \n            0,  260,  260,    0,  260,  260,  260,  260,  260,    0, \n            0,    0,    0,  298,    0,    0,  260,  510,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  510,  260,  260, \n          260,  260,  260,  260,  260,  260,  260,  260,  260,  363, \n          260,  260,    0,    0,  260,  260,  363,  363,    0,    0, \n          260,    0,    0,  260,    0,    0,  260,    0,  260,    0, \n          260,  510,  260,    0,  260,  260,  260,  260,  260,  260, \n          260,    0,  260,    0,  260,  510,  510,    0,    0,    0, \n          510,    0,    0,    0,    0,    0,  260,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  327,  327,  327,    0, \n            0,  327,  327,  327,    0,  327,  260,    0,  510,    0, \n            0,    0,    0,    0,    0,  327,  327,    0,    0,    0, \n            0,    0,    0,    0,  327,  327,    0,  327,  327,  327, \n          327,  327,    0,    0,    0,    0,    0,    0,    0,  327, \n          359,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          359,  327,  327,  327,  327,  327,  327,  327,  327,  327, \n          327,  327,  327,  327,  327,    0,    0,  327,  327,  327, \n          327,    0,    0,  327,    0,    0,  327,    0,    0,  327, \n            0,  327,    0,  327,  359,  327,    0,  327,  327,  327, \n          327,  327,  327,  327,    0,  327,    0,  327,    0,  359, \n            0,    0,    0,  359,    0,    0,    0,    0,    0,  327, \n            0,    0,    0,    0,    0,    0,  298,  298,  298,    0, \n            0,  298,  298,  298,    0,  298,    0,    0,    0,  327, \n            0,  359,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  360,    0,    0,    0,  298,  298,  298, \n          298,  298,    0,  360,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  510, \n          510,  510,    0,    0,  510,  510,  510,  360,  510,    0, \n            0,    0,    0,  298,    0,    0,  298,    0,  510,  510, \n            0,    0,  360,    0,    0,    0,  360,  510,  510,    0, \n          510,  510,  510,  510,  510,    0,    0,  298,    0,    0, \n            0,    0,  510,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  360,  510,  510,  510,  510,  510, \n          510,  510,  510,  510,  510,  510,  510,  510,    0,  298, \n          510,  510,  510,  510,    0,  324,  510,    0,    0,  510, \n            0,    0,  510,    0,  510,  324,  510,    0,  510,    0, \n          510,  510,  510,  510,  510,  510,  510,    0,  510,    0, \n          510,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  510,    0,    0,    0,    0,    0,    0,  324, \n            0,    0,  359,  359,  359,    0,    0,  359,  359,  359, \n            0,  359,  510,    0,  324,    0,    0,    0,  324,    0, \n            0,  359,  359,    0,    0,    0,    0,    0,    0,    0, \n          359,  359,    0,  359,  359,  359,  359,  359,    0,    0, \n            0,    0,    0,    0,    0,    0,  324,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  359,  359,  359, \n          359,  359,  359,  359,  359,  359,  359,  359,  359,  359, \n          359,    0,    0,  359,  359,  359,  359,    0,    0,  359, \n            0,    0,  359,    0,    0,  359,    0,  359,    0,  359, \n            0,  359,   45,  359,  359,  359,  359,  359,  359,  359, \n            0,  359,   45,  359,    0,  360,  360,  360,    0,    0, \n          360,  360,  360,    0,  360,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  360,  360,    0,    0,    0,    0, \n            0,    0,    0,  360,  360,  359,  360,  360,  360,  360, \n          360,    0,    0,    0,    0,    0,    0,    0,    0,  241, \n            0,   45,    0,    0,    0,    0,    0,    0,    0,  241, \n          360,  360,  360,  360,  360,  360,  360,  360,  360,  360, \n          360,  360,  360,  360,    0,    0,  360,  360,  360,  360, \n            0,    0,  360,    0,    0,  360,    0,    0,  360,    0, \n          360,    0,  360,  241,  360,    0,  360,  360,  360,  360, \n          360,  360,  360,    0,  360,    0,  360,  241,  241,    0, \n            0,    0,  241,    0,    0,    0,    0,  324,  324,  324, \n            0,    0,  324,  324,  324,    0,  324,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  324,  324,  360,    0, \n            0,    0,    0,    0,    0,  324,  324,    0,  324,  324, \n          324,  324,  324,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  324,  324,  324,  324,  324,  324,  324,  324, \n          324,  324,  324,  324,  324,  324,  238,    0,  324,  324, \n          324,  324,    0,    0,  324,    0,  238,  324,    0,    0, \n          324,    0,  324,    0,  324,    0,  324,    0,  324,  324, \n          324,  324,  324,  324,  324,    0,  324,    0,  324,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          238,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  238,  238,    0,    0,    0,  238, \n          324,    0,    0,    0,   45,   45,   45,    0,    0,    0, \n           45,   45,    0,   45,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   45,   45,   45,   45,  235, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  235, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  241,  241,  241,    0,    0,  241,  241,  241,    0, \n          241,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          241,  241,    0,  235,   45,    0,    0,    0,    0,  241, \n          241,    0,  241,  241,  241,  241,  241,  235,  235,    0, \n            0,    0,  235,    0,  241,   45,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  241,  241,  241, \n          241,  241,  241,  241,  241,  241,  241,    0,  241,  241, \n            0,    0,  241,  241,    0,    0,    0,   45,  241,    0, \n            0,  241,    0,    0,  241,    0,  241,    0,  241,    0, \n          241,    0,  241,  241,  241,  241,  241,  241,  241,    0, \n          241,    0,  241,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  241,    0,  237,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  237,    0,    0,    0, \n            0,    0,    0,    0,  241,    0,    0,    0,  238,  238, \n          238,    0,    0,  238,  238,  238,    0,  238,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  238,  238,    0, \n          237,    0,    0,    0,    0,    0,  238,  238,    0,  238, \n          238,  238,  238,  238,  237,  237,    0,    0,    0,  237, \n            0,  238,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  238,  238,  238,  238,  238,  238, \n          238,  238,  238,  238,    0,  238,  238,    0,    0,  238, \n          238,    0,    0,    0,    0,  238,    0,    0,  238,    0, \n            0,  238,    0,  238,    0,  238,    0,  238,    0,  238, \n          238,  238,  238,  238,  238,  238,    0,  238,    0,  238, \n            0,  235,  235,  235,    0,    0,  235,  235,  235,    0, \n          235,  238,  236,    0,    0,    0,    0,    0,    0,    0, \n          235,  235,  236,    0,    0,    0,    0,    0,    0,  235, \n          235,  238,  235,  235,  235,  235,  235,    0,    0,    0, \n            0,    0,    0,    0,  235,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  236,  235,  235,  235, \n          235,  235,  235,  235,  235,  235,  235,    0,  235,  235, \n          236,  236,  235,  235,    0,  236,    0,    0,  235,    0, \n            0,  235,    0,    0,  235,    0,  235,    0,  235,    0, \n          235,    0,  235,  235,  235,  235,  235,  235,  235,    0, \n          235,    0,  235,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  235,    0,    0,    0,    0,    0, \n            0,  239,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  239,    0,    0,  235,    0,    0,    0,  237,  237, \n          237,    0,    0,  237,  237,  237,    0,  237,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  237,  237,    0, \n            0,    0,    0,    0,    0,  239,  237,  237,    0,  237, \n          237,  237,  237,  237,    0,    0,    0,    0,    0,  239, \n          239,  237,    0,    0,  239,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  237,  237,  237,  237,  237,  237, \n          237,  237,  237,  237,    0,  237,  237,    0,    0,  237, \n          237,    0,    0,    0,    0,  237,    0,    0,  237,    0, \n            0,  237,    0,  237,    0,  237,    0,  237,    0,  237, \n          237,  237,  237,  237,  237,  237,    0,  237,  440,  237, \n            0,    0,    0,    0,    0,    0,    0,    0,  440,    0, \n            0,  237,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  237,    0,    0,  236,  236,  236,    0,    0,  236, \n          236,  236,  104,  236,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  236,  236,    0,    0,  440,    0,  123, \n            0,  440,  236,  236,    0,  236,  236,  236,  236,  236, \n            0,    0,    0,   36,    0,    0,    0,  236,    0,    0, \n            0,    0,    0,   36,    0,    0,    0,    0,    0,  440, \n          236,  236,  236,  236,  236,  236,  236,  236,  236,  236, \n            0,  236,  236,    0,    0,  236,  236,    0,    0,    0, \n            0,  236,    0,    0,  236,    0,    0,  236,    0,  236, \n            0,  236,    0,  236,    0,  236,  236,  236,  236,  236, \n          236,  236,   36,  236,    0,  236,    0,    0,    0,    0, \n            0,    0,    0,  239,  239,  239,    0,  236,  239,  239, \n          239,    0,  239,    0,  272,    0,    0,    0,    0,    0, \n            0,    0,  239,  239,  272,    0,    0,  236,    0,    0, \n            0,  239,  239,    0,  239,  239,  239,  239,  239,    0, \n            0,    0,    0,    0,    0,    0,  239,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  267,  239, \n          239,  239,  239,  239,  239,  239,  239,  239,  239,  440, \n          239,  239,    0,  272,  239,  239,    0,    0,    0,  440, \n          239,    0,    0,  239,    0,    0,  239,    0,  239,    0, \n          239,    0,  239,    0,  239,  239,  239,  239,  239,  239, \n          239,    0,  239,    0,  239,    0,    0,    0,    0,    0, \n            0,    0,    0,  440,    0,    0,  239,    0,    0,    0, \n          440,  440,  440,    0,    0,    0,  440,  440,  440,  440, \n          123,    0,  440,    0,    0,    0,  239,    0,  440,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  440,  440, \n            0,  440,  440,  440,  440,  440,    0,    0,    0,    0, \n          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  440,  440,  440,  440,  440, \n          440,  440,  440,  440,  440,  440,  440,  440,  440,  521, \n            0,  440,  440,  440,  440,   36,   36,   36,    0,  521, \n          440,   36,   36,    0,   36,    0,    0,  440,    0,  440, \n            0,  440,  440,  440,  440,  440,  440,  440,    0,  440, \n          440,  440,    0,    0,    0,    0,   36,   36,   36,   36, \n           36,    0,    0,   98,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  521,    0, \n          117,    0,  521,  440,    0,    0,    0,    0,    0,    0, \n            0,    0,    0, \n      };\n   }\n\n   private static final short[] yyTable3() {\n      return new short[] {\n\n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   36,  272,  272,  272,    0,  521,    0,  272, \n          272,    0,  272,    0,    0,    0,    0,    0,    0,  520, \n            0,    0,    0,   36,    0,    0,    0,    0,    0,  520, \n            0,  272,  272,    0,  272,  272,  272,  272,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   36,    0,    0,  440,  440, \n          440,    0,    0,   97,  440,  440,    0,  440,    0,    0, \n            0,    0,    0,    0,    0,    0,  440,    0,  520,    0, \n          116,    0,  520,  272,    0,    0,  440,  440,    0,  440, \n          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  272,    0,    0,    0,    0,    0, \n          520,    0,    0,  440,  440,  440,  440,  440,  440,  440, \n          440,  440,  440,  440,  440,  440,  440,  522,    0,  440, \n          440,  440,  440,    0,    0,    0,  272,  522,  440,    0, \n            0,    0,    0,    0,    0,  440,    0,  440,    0,  440, \n          440,  440,  440,  440,  440,  440,    0,  440,  440,  440, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   99,    0,    0,    0,    0,    0,    0,  521,  521, \n          521,    0,    0,    0,  521,  521,  522,  521,  118,    0, \n          522,  440,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  521,  521,    0,  521, \n          521,  521,  521,  521,    0,    0,    0,    0,  522,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  521,  521,  521,  521,  521,  521,  521, \n          521,  521,  521,  521,  521,  521,  521,    0,    0,  521, \n          521,  521,  521,    0,  533,    0,    0,    0,  521,    0, \n            0,    0,    0,    0,    0,  521,    0,  521,    0,  521, \n          521,  521,  521,  521,  521,  521,    0,  521,    0,  521, \n            0,  520,  520,  520,    0,    0,    0,  520,  520,    0, \n          520,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  520, \n          520,  521,  520,  520,  520,  520,  520,    0,    0,    0, \n          523,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          523,    0,    0,    0,    0,    0,  520,  520,  520,  520, \n          520,  520,  520,  520,  520,  520,  520,  520,  520,  520, \n            0,    0,  520,  520,  520,  520,    0,  532,    0,    0, \n            0,  520,    0,    0,  100,    0,    0,    0,  520,    0, \n          520,    0,  520,  520,  520,  520,  520,  520,  520,  523, \n          520,  119,  520,  523,    0,    0,    0,    0,    0,  522, \n          522,  522,    0,    0,    0,  522,  522,    0,  522,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  523,    0,    0,  520,    0,    0,  522,  522,    0, \n          522,  522,  522,  522,  522,    0,    0,    0,  525,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  525,    0, \n            0,    0,    0,    0,  522,  522,  522,  522,  522,  522, \n          522,  522,  522,  522,  522,  522,  522,  522,    0,    0, \n          522,  522,  522,  522,    0,  534,    0,    0,    0,  522, \n            0,    0,  102,    0,    0,    0,  522,    0,  522,    0, \n          522,  522,  522,  522,  522,  522,  522,  525,  522,  121, \n          522,  525,    0,    0,    0,    0,    0,    0,    0,    0, \n          700,  621,    0,    0,  701,    0,    0,    0,  188,  189, \n            0,  190,  191,  192,  193,  194,  195,  196,    0,  525, \n          197,  198,  522,    0,    0,  199,  200,  201,  202,    0, \n            0,  524,    0,    0,    0,  304,    0,    0,    0,    0, \n            0,  524,  204,  205,    0,  206,  207,  208,  209,  210, \n          211,  212,  213,  214,  215,  216,    0,    0,  217,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  101,    0,    0,    0,    0, \n            0,    0,  523,  523,  523,    0,    0,    0,  523,  523, \n          524,  523,  120,    0,  524,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          523,  523,    0,  523,  523,  523,  523,  523,    0,    0, \n            0,    0,  524,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  523,  523,  523, \n          523,  523,  523,  523,  523,  523,  523,  523,  523,  523, \n          523,  526,    0,  523,  523,  523,  523,    0,  535,    0, \n            0,  526,  523,    0,    0,    0,    0,    0,    0,  523, \n            0,  523,    0,  523,  523,  523,  523,  523,  523,  523, \n            0,  523,    0,  523,    0,    0,    0,    0,    0,    0, \n          525,  525,  525,    0,    0,  103,  525,  525,    0,  525, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          526,    0,  122,    0,  526,  523,    0,    0,  525,  525, \n            0,  525,  525,  525,  525,  525,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  526,    0,    0,  525,  525,  525,  525,  525, \n          525,  525,  525,  525,  525,  525,  525,  525,  525,    0, \n            0,  525,  525,  525,  525,    0,  537,    0,    0,    0, \n          525,    0,    0,    0,    0,    0,    0,  525,    0,  525, \n            0,  525,  525,  525,  525,  525,  525,  525,    0,  525, \n            0,  525,    0,  524,  524,  524,    0,    0,    0,  524, \n          524,    0,  524,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  524,  524,  525,  524,  524,  524,  524,  524,    0, \n            0,    0,  517,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  517,    0,    0,    0,    0,    0,  524,  524, \n          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, \n          524,  524,    0,    0,  524,  524,  524,  524,    0,  536, \n            0,    0,    0,  524,    0,    0,   94,    0,    0,    0, \n          524,    0,  524,    0,  524,  524,  524,  524,  524,  524, \n          524,  517,  524,  113,  524,  517,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  526,  526,  526,    0,    0,    0,  526, \n          526,    0,  526,  517,    0,    0,  524,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  526,  526,    0,  526,  526,  526,  526,  526,    0, \n            0,    0,  516,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  516,    0,    0,    0,    0,    0,  526,  526, \n          526,  526,  526,  526,  526,  526,  526,  526,  526,  526, \n          526,  526,    0,    0,  526,  526,  526,  526,    0,  538, \n            0,    0,    0,  526,    0,    0,   93,    0,    0,    0, \n          526,    0,  526,    0,  526,  526,  526,  526,  526,  526, \n          526,  516,  526,  112,  526,  516,    0,    0,    0,    0, \n            0,    0,    0,    0,  703,  629,    0,    0,  704,    0, \n            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, \n          195,  196,    0,  516,  197,  198,  526,    0,    0,  199, \n          200,  201,  202,    0,    0,  519,    0,    0,    0,  304, \n            0,    0,    0,    0,    0,  519,  204,  205,    0,  206, \n          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, \n            0,    0,  217,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  517,  517,  517,    0,    0,   96, \n          517,  517,    0,  517,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  519,    0,  115,    0,  519,    0, \n            0,    0,  517,  517,    0,  517,  517,  517,  517,  517, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  519,    0,    0,  517, \n          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, \n          517,  517,  517,    0,    0,  517,  517,  517,  517,    0, \n          529,    0,    0,    0,  517,    0,    0,    0,    0,    0, \n            0,  517,    0,  517,    0,  517,  517,  517,  517,  517, \n          517,  517,  246,  517,    0,  517,    0,    0,    0,    0, \n            0,    0,  246,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  516,  516,  516,    0,    0,    0, \n          516,  516,    0,  516,    0,    0,    0,  517,    0,    0, \n            0,    0,    0,    0,    0,    0,  246,    0,    0,    0, \n            0,    0,  516,  516,    0,  516,  516,  516,  516,  516, \n          246,  246,    0,    0,    0,  246,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  516, \n          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, \n          516,  516,  516,    0,    0,  516,  516,  516,  516,    0, \n          528,    0,    0,    0,  516,    0,    0,    0,    0,    0, \n            0,  516,    0,  516,    0,  516,  516,  516,  516,  516, \n          516,  516,    0,  516,    0,  516,    0,  519,  519,  519, \n            0,    0,    0,  519,  519,    0,  519,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  519,  519,  516,  519,  519, \n          519,  519,  519,    0,    0,    0,  310,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  310,    0,    0,    0, \n            0,    0,  519,  519,  519,  519,  519,  519,  519,  519, \n          519,  519,  519,  519,  519,  519,    0,    0,  519,  519, \n          519,  519,    0,  531,    0,    0,    0,  519,    0,    0, \n          110,    0,    0,    0,  519,    0,  519,    0,  519,  519, \n          519,  519,  519,  519,  519,  310,  519,  129,  519,  310, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  299,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  299,    0,    0,    0,  310,    0,    0, \n          519,    0,    0,    0,  246,  246,  246,    0,    0,  246, \n          246,  246,    0,  246,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  246,  246,    0,    0,  295,    0,    0, \n            0,    0,  246,  246,    0,  246,  246,  246,  246,  246, \n            0,  321,  299,    0,    0,    0,    0,  246,    0,    0, \n            0,  321,    0,    0,    0,    0,    0,    0,    0,  246, \n          246,  246,  246,  246,    0,    0,  246,  246,  246,  246, \n            0,  246,  246,    0,    0,  246,  246,    0,    0,    0, \n            0,  246,    0,    0,  246,  109,    0,  246,    0,  246, \n            0,  246,    0,  246,    0,  246,  246,  246,  246,    0, \n          321,  246,  128,  246,  321,  246,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  246,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  321,    0,    0,    0,    0,  246,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  233,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  233,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  310,  310, \n          310,    0,    0,    0,  310,  310,    0,  310,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  233,    0,    0,    0,    0,  310,  310,    0,  310, \n          310,  310,  310,  310,    0,  233,  233,    0,    0,    0, \n          233,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  310,  310,  310,  310,  310,  310,  310, \n          310,  310,  310,  310,  310,  310,  310,    0,    0,  310, \n          310,  310,  310,    0,    0,  299,  299,  299,  310,    0, \n          299,  299,  299,    0,  299,  310,  234,  310,    0,  310, \n          310,  310,  310,  310,  310,  310,  234,  310,    0,  310, \n            0,    0,    0,    0,    0,    0,  299,  299,  299,  299, \n          299,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          234,  310,    0,  321,  321,  321,    0,    0,    0,  321, \n          321,    0,  321,    0,  234,  234,    0,    0,    0,  234, \n            0,    0,  299,    0,    0,  299,    0,    0,    0,    0, \n            0,  321,  321,    0,  321,  321,  321,  321,  321,    0, \n            0,    0,    0,    0,    0,    0,  299,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  321,  321, \n          321,  321,  321,  321,  321,  321,  321,  321,  321,  321, \n          321,  321,    0,    0,  321,  321,  321,  321,  299,    0, \n            0,    0,    0,  321,    0,    0,    0,    0,    0,    0, \n          321,    0,  321,    0,  321,  321,  321,  321,  321,  321, \n          321,    0,  321,  297,  321,    0,    0,    0,    0,  233, \n          233,  233,    0,  297,  233,  233,  233,    0,  233,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  233,  233, \n            0,    0,    0,    0,    0,    0,  321,  233,  233,    0, \n          233,  233,  233,  233,  233,    0,    0,  292,    0,    0, \n            0,    0,  233,  310,    0,    0,    0,    0,    0,    0, \n            0,    0,  297,  310,    0,  233,  233,  233,  233,  233, \n          233,  233,  233,  233,  233,    0,  233,  233,    0,    0, \n          233,  233,    0,    0,    0,    0,  233,    0,    0,  233, \n            0,    0,  233,    0,  233,    0,    0,  310,  233,    0, \n            0,    0,  233,  233,  233,  233,  233,    0,  233,    0, \n          233,    0,  310,    0,  129,    0,  310,    0,  234,  234, \n          234,    0,  233,  234,  234,  234,    0,  234,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  234,  234,    0, \n            0,    0,  233,    0,  310,    0,  234,  234,    0,  234, \n          234,  234,  234,  234,    0,    0,    0,    0,    0,    0, \n            0,  234,  254,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  254,    0,  234,  234,  234,  234,  234,  234, \n          234,  234,  234,  234,    0,  234,  234,    0,    0,  234, \n          234,    0,    0,    0,    0,  234,    0,    0,  234,    0, \n            0,  234,    0,  234,    0,    0,  254,  234,    0,    0, \n            0,  234,  234,  234,  234,  234,    0,  234,    0,  234, \n          254,  254,    0,    0,    0,  254,    0,    0,    0,    0, \n            0,  234,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  234,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  297,  297,  297,    0,    0, \n            0,  297,  297,    0,  297,    0,    0,    0,    0,  255, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  255, \n            0,    0,    0,    0,    0,    0,  297,  297,  297,  297, \n          297,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  310,  310,  310,    0,    0, \n            0,  310,  310,  255,  310,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  255,  255,    0, \n            0,    0,  255,  310,  310,  297,  310,  310,  310,  310, \n          310,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  297,    0,    0,    0, \n          310,  310,  310,  310,  310,  310,  310,  310,  310,  310, \n          310,  310,  310,  310,    0,    0,  310,  310,  310,  310, \n            0,    0,    0,    0,    0,  310,    0,    0,  297,    0, \n            0,    0,  310,    0,  310,    0,  310,  310,  310,  310, \n          310,  310,  310,    0,  310,    0,  310,    0,    0,    0, \n            0,    0,    0,    0,  254,  254,  254,    0,    0,  254, \n          254,  254,    0,  254,    0,  244,    0,    0,    0,    0, \n            0,    0,    0,  254,  254,  244,    0,    0,  310,    0, \n            0,    0,  254,  254,    0,  254,  254,  254,  254,  254, \n            0,    0,    0,    0,    0,    0,    0,  254,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  244, \n          254,  254,  254,  254,  254,  254,  254,  254,  254,  254, \n            0,  254,  254,  244,  244,  254,  254,    0,  244,    0, \n            0,  254,    0,    0,  254,    0,    0,  254,    0,  254, \n            0,    0,    0,  254,    0,    0,    0,    0,    0,  254, \n          254,  254,    0,  254,    0,  254,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  254,    0,    0, \n            0,  255,  255,  255,    0,    0,  255,  255,  255,    0, \n          255,    0,  242,    0,    0,    0,    0,  254,    0,    0, \n          255,  255,  242,    0,    0,    0,    0,    0,    0,  255, \n          255,    0,  255,  255,  255,  255,  255,    0,    0,    0, \n            0,    0,    0,    0,  255,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  242,  255,  255,  255, \n          255,  255,  255,  255,  255,  255,  255,    0,  255,  255, \n          242,  242,  255,  255,    0,  242,    0,    0,  255,    0, \n            0,  255,    0,    0,  255,    0,  255,    0,    0,    0, \n          255,    0,    0,    0,    0,    0,  255,  255,  255,    0, \n          255,    0,  255,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  255,    0,    0,    0,    0,    0, \n            0,  243,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  243,    0,    0,  255,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  244,  244,  244, \n            0,    0,  244,  244,  244,  243,  244,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  244,  244,    0,  243, \n          243,    0,    0,    0,  243,  244,  244,    0,  244,  244, \n          244,  244,  244,    0,    0,    0,    0,    0,    0,    0, \n          244,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  244,  244,  244,  244,  244,  244,  244, \n          244,  244,  244,    0,  244,  244,    0,    0,    0,    0, \n            0,    0,    0,    0,  244,    0,    0,  244,  265,    0, \n          244,    0,  244,    0,    0,    0,  244,    0,  265,    0, \n            0,    0,  244,  244,  244,    0,  244,    0,  244,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          244,    0,    0,    0,  242,  242,  242,    0,    0,  242, \n          242,  242,  265,  242,    0,    0,    0,    0,    0,    0, \n          244,    0,    0,  242,  242,    0,  265,  265,    0,    0, \n            0,  265,  242,  242,    0,  242,  242,  242,  242,  242, \n            0,    0,    0,    0,    0,    0,    0,  242,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          242,  242,  242,  242,  242,  242,  242,  242,  242,  242, \n            0,  242,  242,    0,    0,    0,    0,    0,    0,    0, \n            0,  242,    0,    0,  242,    0,    0,  242,    0,  242, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  242, \n          242,  242,    0,  242,    0,  242,    0,    0,    0,    0, \n            0,    0,    0,  243,  243,  243,    0,  242,  243,  243, \n          243,    0,  243,    0,  266,    0,    0,    0,    0,    0, \n            0,    0,  243,  243,  266,    0,    0,  242,    0,    0, \n            0,  243,  243,    0,  243,  243,  243,  243,  243,    0, \n            0,    0,    0,    0,    0,    0,  243,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  266,  243, \n          243,  243,  243,  243,  243,  243,  243,  243,  243,    0, \n          243,  243,  266,  266,    0,    0,    0,  266,    0,    0, \n          243,    0,    0,  243,    0,    0,  243,    0,  243,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  243,  243, \n          243,    0,  243,    0,  243,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  243,    0,    0,    0, \n          265,  265,  265,    0,    0,  265,  265,  265,    0,  265, \n            0,  245,    0,    0,    0,    0,  243,    0,    0,  265, \n          265,  245,    0,    0,    0,    0,    0,    0,  265,  265, \n            0,  265,  265,  265,  265,  265,    0,    0,    0,    0, \n            0,    0,    0,  265,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  245,  265,  265,  265,  265, \n          265,  265,  265,  265,  265,  265,    0,  265,  265,  245, \n          245,    0,    0,    0,  245,    0,    0,  265,    0,    0, \n          265,    0,    0,  265,    0,  265,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  265,  265,    0,    0,    0, \n            0,  265,    0,    0,    0,    0,    0,    0,  247,    0, \n            0,    0,    0,  265,    0,    0,    0,    0,  247,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  265,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  247,    0,    0,    0,  266,  266,  266,    0, \n            0,  266,  266,  266,    0,  266,  247,  247,    0,    0, \n            0,  247,    0,    0,    0,  266,  266,    0,    0,    0, \n            0,    0,    0,    0,  266,  266,    0,  266,  266,  266, \n          266,  266,    0,    0,    0,    0,  248,    0,    0,  266, \n            0,    0,    0,    0,    0,    0,  248,    0,    0,    0, \n            0,    0,  266,  266,  266,  266,  266,  266,  266,  266, \n          266,  266,    0,  266,  266,    0,    0,    0,    0,    0, \n            0,    0,    0,  266,    0,    0,  266,    0,    0,  266, \n          248,  266,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  266,  266,    0,  248,  248,    0,  266,    0,  248, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  266, \n            0,    0,    0,  245,  245,  245,    0,    0,  245,  245, \n          245,    0,  245,    0,  249,    0,    0,    0,    0,  266, \n            0,    0,  245,  245,  249,    0,    0,    0,    0,    0, \n            0,  245,  245,    0,  245,  245,  245,  245,  245,    0, \n            0,    0,    0,    0,    0,    0,  245,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  249,    0, \n            0,    0,    0,    0,    0,  245,  245,    0,    0,    0, \n          245,  245,  249,  249,    0,    0,    0,  249,    0,    0, \n          245,    0,    0,  245,    0,    0,  245,    0,  245,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          247,  247,  247,    0,  245,  247,  247,  247,    0,  247, \n            0,  256,    0,    0,    0,    0,  245,    0,    0,  247, \n          247,  256,    0,    0,    0,    0,    0,    0,  247,  247, \n            0,  247,  247,  247,  247,  247,  245,    0,    0,    0, \n            0,    0,    0,  247,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  256,    0,    0,    0,    0, \n            0,    0,  247,  247,    0,    0,    0,  247,  247,  256, \n          256,    0,    0,    0,  256,    0,    0,  247,    0,    0, \n          247,    0,    0,  247,    0,  247,    0,    0,  248,  248, \n          248,    0,    0,  248,  248,  248,    0,  248,    0,  250, \n            0,  247,    0,    0,    0,    0,    0,  248,  248,  250, \n            0,    0,    0,  247,    0,    0,  248,  248,    0,  248, \n          248,  248,  248,  248,    0,    0,    0,    0,    0,    0, \n            0,  248,    0,  247,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  250,    0,    0,    0,    0,    0,    0, \n          248,  248,    0,    0,    0,  248,  248,  250,  250,    0, \n            0,    0,  250,    0,    0,  248,    0,    0,  248,    0, \n            0,  248,    0,  248,    0,    0,  249,  249,  249,    0, \n            0,  249,  249,  249,    0,  249,    0,  251,    0,  248, \n            0,    0,    0,    0,    0,  249,  249,  251,    0,    0, \n            0,  248,    0,    0,  249,  249,    0,  249,  249,  249, \n          249,  249,    0,    0,    0,    0,    0,    0,    0,  249, \n            0,  248,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,    0,    0,    0,    0,  249,  249, \n            0,    0,    0,  249,  249,  251,  251,    0,    0,    0, \n          251,    0,    0,  249,    0,    0,  249,    0,    0,  249, \n            0,  249,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  256,  256,  256,    0,  249,  256,  256, \n          256,    0,  256,    0,  257,    0,    0,    0,    0,  249, \n            0,    0,  256,  256,  257,    0,    0,    0,    0,    0, \n            0,  256,  256,    0,  256,  256,  256,  256,  256,  249, \n            0,    0,    0,    0,    0,    0,  256,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  257,    0, \n            0,    0,    0,    0,    0,  256,  256,    0,    0,    0, \n          256,  256,  257,  257,    0,    0,    0,  257,    0,    0, \n          256,    0,    0,  256,    0,    0,  256,    0,  256,    0, \n            0,  250,  250,  250,    0,    0,  250,  250,  250,    0, \n          250,    0,  231,    0,  256,    0,    0,    0,    0,    0, \n          250,  250,  231,    0,    0,    0,  256,    0,    0,  250, \n          250,    0,  250,  250,  250,  250,  250,    0,    0,    0, \n            0,    0,    0,    0,  250,    0,  256,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  231,    0,    0,    0, \n            0,    0,    0,  250,  250,    0,    0,    0,  250,  250, \n          231,  231,    0,    0,    0,  231,    0,    0,  250,    0, \n            0,  250,    0,    0,  250,    0,  250,    0,    0,  251, \n          251,  251,    0,    0,  251,  251,  251,    0,  251,    0, \n          232,    0,  250,    0,    0,    0,    0,    0,  251,  251, \n          232,    0,    0,    0,  250,    0,    0,  251,  251,    0, \n          251,  251,  251,  251,  251,    0,    0,    0,    0,    0, \n            0,    0,  251,    0,  250,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  232,    0,    0,    0,    0,    0, \n            0,  251,  251,    0,    0,    0,  251,  251,  232,  232, \n            0,    0,    0,  232,    0,    0,  251,    0,    0,  251, \n            0,    0,  251,    0,  251,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  257,  257,  257,  273, \n          251,  257,  257,  257,    0,  257,    0,    0,    0,  273, \n            0,    0,  251,    0,    0,  257,  257,    0,    0,    0, \n            0,    0,    0,    0,  257,  257,    0,  257,  257,  257, \n          257,  257,  251,    0,    0,    0,    0,    0,    0,  257, \n            0,    0,    0,  273,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  273,  273,  257, \n            0,    0,    0,  257,  257,    0,    0,    0,    0,    0, \n            0,    0,    0,  257,    0,    0,  257,    0,    0,  257, \n            0,  257,    0,    0,  231,  231,  231,    0,  259,  231, \n          231,  231,    0,  231,    0,    0,    0,  257,  259,    0, \n            0,    0,    0,  231,  231,    0,    0,    0,    0,  257, \n            0,    0,  231,  231,    0,  231,  231,  231,  231,  231, \n            0,    0,    0,    0,    0,    0,    0,  231,    0,  257, \n            0,    0,  259,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  259,  259,    0,    0, \n          224,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,  231,    0,    0,  231,    0,    0,  231,    0,  231, \n            0,    0,  232,  232,  232,    0,    0,  232,  232,  232, \n            0,  232,    0,    0,    0,  231,    0,    0,    0,    0, \n            0,  232,  232,    0,  224,    0,    0,  231,    0,    0, \n          232,  232,    0,  232,  232,  232,  232,  232,  224,  224, \n            0,    0,    0,    0,    0,  232,    0,  231,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  267,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  267,  232, \n            0,    0,  232,    0,    0,  232,    0,  232,    0,    0, \n            0,  273,  273,  273,    0,    0,  273,  273,  273,    0, \n          273,    0,    0,  232,    0,    0,    0,    0,    0,    0, \n          273,  273,  267,    0,    0,  232,    0,    0,    0,  273, \n          273,    0,  273,  273,  273,  273,  273,  267,    0,    0, \n            0,    0,    0,    0,  273,  232,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  272, \n            0,    0,    0,    0,    0,    0,    0,    0,  273,  272, \n            0,  273,    0,    0,  273,    0,  273,    0,    0,    0, \n          259,  259,  259,    0,    0,  259,  259,  259,    0,  259, \n            0,    0,  273,    0,    0,    0,    0,    0,    0,  259, \n          259,    0,    0,  272,  273,    0,    0,    0,  259,  259, \n            0,  259,  259,  259,  259,  259,    0,  272,  272,    0, \n            0,    0,    0,  259,  273,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  224,  224,  224,  294,    0,  224,  224,  224, \n            0,  224,    0,    0,    0,  294,    0,  259,    0,    0, \n          259,  224,  224,  259,    0,  259,    0,    0,    0,    0, \n          224,  224,    0,  224,  224,  224,  224,  224,    0,    0, \n            0,  259,  648,    0,    0,  224,    0,    0,    0,  294, \n            0,    0,  648,  259,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  294,    0,    0,    0,    0,    0, \n            0,    0,    0,  259,    0,    0,    0,    0,    0,  224, \n            0,    0,  224,    0,    0,  224,    0,  224,    0,    0, \n          267,  267,  267,    0,    0,  267,  267,  267,    0,  267, \n            0,  648,    0,  224,    0,    0,    0,    0,    0,  267, \n          267,    0,    0,    0,    0,  224,    0,    0,  267,  267, \n            0,  267,  267,  267,  267,  267,    0,    0,    0,    0, \n           61,    0,    0,  267,    0,  224,    0,    0,    0,    0, \n           61,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  267,    0,    0, \n          267,    0,    0,  267,    0,  267,    0,    0,    0,    0, \n            0,  272,  272,  272,    0,    0,  272,  272,  272,   61, \n          272,  267,   65,    0,    0,    0,    0,    0,    0,    0, \n          272,  272,   65,  267,    0,    0,    0,    0,    0,  272, \n          272,    0,  272,  272,  272,  272,    0,    0,    0,    0, \n            0,    0,    0,  267,  272,    0,    0,    0,    0,    0, \n            0,    0,    0,   63,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,   63,    0,    0,    0,    0,    0,   25, \n            0,   65,    0,    0,    0,    0,    0,    0,  272,   25, \n            0,  272,    0,    0,  272,    0,  272,  294,  294,  294, \n            0,    0,  294,  294,  294,    0,  294,    0,    0,    0, \n            0,    0,  272,    0,    0,    0,  294,  294,    0,    0, \n            0,    0,   63,    0,  272,  294,  294,    0,  294,  294, \n          294,  294,  294,    0,  648,  648,  648,    0,   25,  648, \n          648,  648,    0,  648,  272,    0,    0,    0,    0,    0, \n            0,    0,    0,  648,  648,    0,    0,    0,    0,    0, \n            0,    0,  648,  648,    0,  648,  648,  648,  648,  648, \n            0,    0,    0,    0,    0,    0,    0,  294,    0,    0, \n          294,    0,  294,    0,    0,    0,    0,    0,  308,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  294,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  648,    0,    0,  648,    0,  648, \n            0,    0,   61,   61,   61,    0,    0,   61,   61,   61, \n          294,   61,    0,    0,    0,  648,    0,    0,    0,    0, \n            0,   61,   61,    0,    0,    0,    0,    0,    0,    0, \n           61,   61,    0,   61,   61,   61,   61,   61,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  648,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   65,   65,   65,    0,    0,   65, \n           65,   65,    0,   65,    0,    0,    0,    0,    0,    0, \n            0,    0,   61,   65,   65,   61,    0,    0,    0,    0, \n            0,    0,   65,   65,    0,   65,   65,   65,   65,   65, \n            0,    0,    0,   61,    0,   63,   63,   63,  130,    0, \n           63,   63,   63,    0,   63,    0,    0,    0,    0,    0, \n            0,   25,   25,   25,   63,   63,    0,   25,   25,    0, \n           25,    0,    0,   63,   63,   61,   63,   63,   63,   63, \n           63,    0,    0,    0,   65,    0,    0,   65,    0,    0, \n            0,    0,   25,   25,   25,   25,   25,  130,    0,    0, \n            0,    0,    0,    0,    0,   65,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   63,    0,    0,   63,  515, \n            0,    0,    0,    0,    0,    0,    0,   65,    0,    0, \n            0,   25,    0,    0,    0,    0,   63,    0,    0,    0, \n            0,    0,    0,    0,    0,    4,    5,    6,    0,    8, \n            0,    0,   25,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,   15,   16,   17,   18,    0,   63,    0, \n            0,   19,   20,   21,  239,  240,  241,  242,  131,    0, \n          118,    0,    0,    0,   25,    0,    0,   28,    0,    0, \n          243,  244,  245,    0,  246,   35,  247,  248,  249,  250, \n          285,   40,   41,   42,   43,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  251,    0,  131,  131,    0, \n            0,   46,   47,    0,   48,    0,  286,    0,  287,    0, \n           50,    0,    0,    0,    0,    0,    0,    0,  288,    0, \n            0,    0,    0,   52,  289,   54,   55,   56,   57,  518, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n           65,   66,  290,    0,  130,  130,  130,  130,  130,  130, \n          130,  130,  130,  130,  130,    0,    0,  130,  130,    0, \n          130,  130,  130,  130,  130,  130,  130,    0,  618,    0, \n            0,  130,  130,  130,  130,  130,  130,  130,  130,    0, \n          130,    0,    0,    0,    0,    0,  130,  130,    0,  130, \n          130,  130,  130,    0,  130,  130,  130,  130,  130,  130, \n            0,  130,  130,  130,  130,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  515,    0,    0,    0, \n            0,    0,    0,  515,  515,  130,    0,  130,  130,  618, \n            0,  130,  130,    0,  130,    0,  130,    0,    0,    0, \n          130,    0,    0,    0,    0,  130,    0,    0,  130,    0, \n          618,    0,    0,  130,  130,  130,  130,  130,  130,  625, \n            0,    0,  130,    0,  130,  130,    0,  130,  130,  130, \n          130,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          130,  130,    0,    0,  131,  131,  131,  131,  131,  131, \n          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, \n          131,  131,  131,  131,  131,  131,  131,    0,  619,    0, \n            0,  131,  131,  131,  131,  131,  131,  131,  131,    0, \n          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, \n          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, \n            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  518,    0,    0,    0, \n            0,    0,    0,  518,  518,  131,    0,  131,  131,  619, \n            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, \n          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, \n          619,    0,    0,  131,  131,  131,  131,  131,  131,  320, \n            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, \n          131,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          131,  131,    0,    0,  130,  130,  130,  130,  130,  130, \n          130,  130,  130,  130,  130,    0,    0,  130,  130,    0, \n          130,  130,  130,  130,  130,  130,  130,    0,  625,    0, \n            0,  130,  130,  130,  130,  130,  130,  130,  131,    0, \n          130,    0,    0,    0,    0,    0,  130,  130,    0,  130, \n          130,  130,  130,    0,  130,  130,  130,  130,  130,  130, \n            0,  130,  130,  130,  130,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  625,    0,    0,    0, \n            0,    0,    0,  625,  625,  130,    0,  131,  130,  621, \n            0,  130,  130,    0,  130,    0,  130,    0,    0,    0, \n          130,    0,    0,    0,    0,  130,    0,    0,  130,    0, \n          625,    0,    0,  130,  130,  130,  130,  130,  130,  321, \n            0,    0,  130,    0,  130,  130,    0,  130,  130,  130, \n          130,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          130,  130,    0,    0,  131,  131,  131,  131,  131,  131, \n          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, \n          131,  131,  131,  131,  131,  131,  131,    0,    0,    0, \n            0,  131,  131,  131,  131,  131,  131,  131,  364,    0, \n          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, \n          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, \n            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  320,    0,    0,    0, \n            0,    0,    0,  320,  320,  131,    0,  364,  131,  622, \n            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, \n          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, \n            0,    0,    0,  131,  131,  131,  131,  131,  131,    0, \n            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, \n          131,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          131,  131,    0,    0,  131,  131,  131,  131,  131,  131, \n          131,  131,  131,  131,  131,    0,    0,  131,  131,    0, \n          131,  131,  131,  131,  131,  131,  131,    0,    0,    0, \n            0,  131,  131,  131,  131,  131,  131,  131,  312,    0, \n          131,    0,    0,    0,    0,    0,  131,  131,    0,  131, \n          131,  131,  131,    0,  131,  131,  131,  131,  131,  131, \n            0,  131,  131,  131,  131,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  321,    0,    0,    0, \n            0,    0,    0,  321,  321,  131,    0,  312,  131,    0, \n            0,  131,  131,    0,  131,    0,  131,    0,    0,    0, \n          131,    0,    0,    0,    0,  131,    0,    0,  131,    0, \n            0,    0,    0,  131,  131,  131,  131,  131,  131,    0, \n            0,    0,  131,    0,  131,  131,    0,  131,  131,  131, \n          131,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          131,  131,    0,    0,  364,  364,  364,  364,  364,  364, \n          364,  364,  364,  364,  364,    0,  364,  364,  364,  364, \n          364,  364,  364,  364,  364,  364,  364,    0,    0,    0, \n            0,  364,  364,  364,  364,  364,  364,  364,  543,    0, \n          364,    0,    0,    0,    0,    0,  364,  364,    0,  364, \n          364,  364,  364,    0,  364,  364,  364,  364,  364,  364, \n            0,  364,  364,  364,  364,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  364,    0,  543,  364,    0, \n            0,  364,  364,    0,  364,    0,  364,    0,    0,    0, \n          364,    0,    0,    0,    0,    0,    0,    0,  364,    0, \n            0,    0,    0,  364,  364,  364,  364,  364,  364,    0, \n            0,    0,  364,    0,  364,  364,    0,  364,  364,  364, \n          364,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          364,  364,    0,    0,  312,  312,  312,  312,  312,  312, \n          312,  312,  312,  312,  312,    0,    0,  312,  312,    0, \n          312,  312,  312,  312,  312,  312,  312,    0,    0,    0, \n            0,  312,  312,  312,  312,  312,  312,  312,  647,    0, \n          312,    0,    0,    0,    0,    0,  312,  312,    0,  312, \n          312,  312,  312,    0,  312,  312,  312,  312,  312,  312, \n            0,  312,  312,  312,  312,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  312,    0,  647,  312,    0, \n            0,  312,  312,    0,  312,    0,  312,    0,    0,    0, \n          312,    0,    0,    0,    0,    0,    0,    0,  312,    0, \n           18,    0,    0,  312,  312,  312,  312,  312,  312,    0, \n            0,    0,  312,    0,  312,  312,    0,  312,  312,  312, \n          312,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          312,  312,    0,    0,  543,  543,  543,  543,  543,  543, \n          543,  543,  543,  543,  543,    0,    0,  543,  543,    0, \n          543,  543,  543,  543,  543,  543,  543,    0,  647,    0, \n            0,  543,  543,  543,  543,  543,  543,  543,    0,    0, \n          543,    0,    0,    0,    0,    0,  543,  543,    0,  543, \n          543,  543,  543,    0,  543,  543,  543,  543,  543,  543, \n            0,  543,  543,  543,  543,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  647,    0,    0, \n            0,    0,    0,    0,    0,  543,    0,    0,  543,    0, \n            0,  543,  543,    0,  543,    0,  543,    0,    0,    0, \n          543,    0,    0,    0,    0,    0,    0,    0,  543,    0, \n            0,    0,    0,  543,  543,  543,  543,  543,  543,    0, \n            0,    0,  543,    0,  543,  543,    0,  543,  543,  543, \n          543,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          543,  543,    0,    0,  647,  647,  647,  647,  647,  647, \n          647,  647,  647,  647,  647,    0,    0,  647,  647,    0, \n          647,  647,  647, \n      };\n   }\n\n   private static final short[] yyTable4() {\n      return new short[] {\n\n          647,  647,  647,  647,  647,    0,    0,    0,  647,  647, \n          647,  647,  647,  647,  647,    0,    0,  647,    0,    0, \n            0,    0,    0,  647,  647,    0,  647,  647,  647,  647, \n            0,  647,  647,  647,  647,  647,  647,    0,  647,  647, \n          647,  647,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  647,    0,    0,    0,    0,    0,    0, \n            0,    0,  647,    0,    0,  647,    0,    0,  647,  647, \n            0,  647,    0,  647,    0,    0,    0,  647,    0,    0, \n            0,    0,    0,    0,    0,  647,    0,    0,    0,    0, \n          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, \n            0,  647,  647,    0,  647,  647,  647,  647,    0,    0, \n            0,  647,  647,  647,  647,  647,  647,  647,  647,  647, \n          647,  647,    0,    0,    0,  647,    0,  647,  647,  647, \n          647,  647,  647,  647,  314,    0,    0,    0,  647,  647, \n          647,  647,  647,  647,  647,    0,    0,  647,    0,    0, \n            0,    0,    0,  647,  647,    0,  647,  647,  647,  647, \n            0,  647,  647,  647,  647,  647,  647,    0,  647,  647, \n          647,  647,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  647,    0,    0,  647,    0,    0,  647,  647, \n            0,  647,    0,  647,    0,    0,    0,  647,    0,    0, \n            0,    0,    0,    0,    0,  647,    0,    0,    0,    0, \n          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, \n            0,  647,  647,    0,  647,  647,  647,  647,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  647,  647,    0, \n          647,  647,  647,  647,  647,  647,    0,    0,    0,  647, \n          647,    0,    0,  260,  647,    0,  647,  647,  647,  647, \n          647,  647,  647,    0,    0,    0,    0,  647,  647,  647, \n          647,  647,  647,  647,    0,    0,  647,    0,    0,    0, \n            0,    0,  647,  647,    0,  647,  647,  647,  647,    0, \n          647,  647,  647,  647,  647,  647,    0,  647,  647,  647, \n          647,    0,  259,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  647,    0,    0,  647,    0,    0,  647,  647,    0, \n          647,    0,  647,    0,    0,    0,  647,    0,    0,    0, \n            0,    0,    0,    0,  647,    0,    0,  647,    0,  647, \n          647,  647,  647,  647,  647,    0,    0,    0,  647,    0, \n          647,  647,    0,  647,  647,  647,  647,    0,    0,    0, \n            0,  316,  316,  316,  316,  316,  647,  647,    0,  316, \n          316,    0,  308,    0,  316,    0,  316,  316,  316,  316, \n          316,  316,  316,    0,    0,    0,    0,  316,  316,  316, \n          316,  316,  316,  316,    0,    0,  316,    0,    0,    0, \n            0,    0,  316,  316,    0,  316,  316,  316,  316,    0, \n          316,  316,  316,  316,  316,  316,    0,  316,  316,  316, \n          316,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  316,    0,    0,  316,    0,  314,  316,  316,    0, \n          316,    0,  316,    0,    0,    0,  316,    0,    0,    0, \n            0,    0,    0,    0,  316,    0,    0,    0,    0,  316, \n          316,  316,  316,  316,  316,    0,    0,    0,  316,    0, \n          316,  316,    0,  316,  316,  316,  316,    0,    0,    0, \n            4,    5,    6,    0,    8,    0,  316,  316,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, \n           17,   18,    0,    0,    0,    0,   19,   20,   21,  239, \n          240,  241,  242,    0,    0,   26,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  243,  244,  245,    0,  246, \n           35,  247,  248,  249,  250,  353,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          251,    0,    0,  131,    0,    0,   46,   47,    0,   48, \n            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,    0,    0,    4, \n            5,    6,    0,    8,    0,   65,   66,    9,   10,    0, \n            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, \n           18,    0,    0,    0,    0,   19,   20,   21,  239,  240, \n          241,  242,    0,    0,   26,    0,    0,    0,    0,    0, \n            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, \n          247,  248,  249,  250,  654,   40,   41,   42,   43,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, \n            0,    0,  131,    0,    0,   46,   47,    0,   48,    0, \n            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, \n            0,    0,   51,    0,    0,    0,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   65,   66,    0,    0,    4,    5, \n            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,  109,  110,   17,   18, \n            0,    0,    0,    0,  111,  112,  113,  340,  341,  342, \n          343,    0,    0,  118,    0,    0,    0,    0,    0,    0, \n          119,    0,    0,  344,  345,  346,    0,  347,   35,  348, \n          349,  350,  351,    0,   40,    0,    0,  128,  471,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  352,    0, \n            0,  131,    0,    0,   46,   47,    0,   48,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,    0,    0,    4,    5,    6, \n            0,    8,    0,   65,   66,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,  109,  110,   17,   18,    0, \n            0,    0,    0,  111,  112,  113,  340,  341,  342,  343, \n            0,    0,  118,    0,    0,    0,    0,    0,    0,  119, \n            0,    0,  344,  345,  346,    0,  347,   35,  348,  349, \n          350,  351,    0,   40,    0,    0,  128,  471,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  352,    0,    0, \n          131,    0,    0,   46,   47,    0,   48,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,    0,    0,    4,    5,    6,    7, \n            8,    0,   65,   66,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,   15,   16,   17,   18,    0,    0, \n            0,    0,   19,   20,   21,   22,   23,   24,   25,    0, \n            0,   26,    0,    0,    0,    0,    0,   27,   28,   29, \n           30,   31,   32,   33,    0,   34,   35,   36,   37,   38, \n           39,    0,   40,   41,   42,   43,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,   44,    0,    0,   45, \n            0,    0,   46,   47,    0,   48,    0,   49,    0,    0, \n            0,   50,    0,    0,    0,    0,    0,    0,    0,   51, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,    0,    0,    4,    5,    6,    7,  321, \n            0,   65,   66,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,   15,   16,   17,   18,    0,    0,    0, \n            0,   19,   20,   21,   22,   23,   24,   25,    0,    0, \n           26,    0,    0,    0,    0,    0,   27,   28,    0,   30, \n           31,   32,   33,    0,   34,   35,   36,   37,   38,   39, \n            0,   40,   41,   42,   43,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   44,    0,    0,   45,    0, \n            0,   46,   47,    0,   48,    0,   49,    0,    0,    0, \n           50,    0,    0,    0,    0,    0,    0,    0,   51,    0, \n            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,    0,    3,    4,    5,    6,    7,    8,    0, \n           65,   66,    9,   10,    0,    0,    0,   11,    0,   12, \n           13,   14,   15,   16,   17,   18,    0,    0,    0,    0, \n           19,   20,   21,   22,   23,   24,   25,    0,    0,   26, \n            0,    0,    0,    0,    0,   27,   28,   29,   30,   31, \n           32,   33,    0,   34,   35,   36,   37,   38,   39,    0, \n           40,   41,   42,   43,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   44,    0,    0,   45,    0,    0, \n           46,   47,    0,   48,    0,   49,    0,    0,    0,   50, \n            0,    0,    0,    0,    0,    0,    0,   51,    0,    0, \n            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, \n            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, \n            0,    0,  320,    4,    5,    6,    7,  321,    0,   65, \n           66,    9,   10,    0,    0,    0,   11,    0,   12,   13, \n           14,   15,   16,   17,   18,    0,    0,    0,    0,   19, \n           20,   21,   22,   23,   24,   25,    0,    0,   26,    0, \n            0,    0,    0,    0,   27,   28,    0,   30,   31,   32, \n           33,    0,   34,   35,   36,   37,   38,   39,    0,   40, \n           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,   44,    0,    0,  322,    0,    0,   46, \n           47,    0,   48,    0,   49,    0,    0,    0,   50,    0, \n            0,    0,    0,    0,    0,    0,   51,    0,    0,    0, \n            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, \n           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, \n            0,  320,    4,    5,    6,    7,  321,    0,   65,   66, \n            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, \n           15,   16,   17,   18,    0,    0,    0,    0,   19,   20, \n           21,   22,   23,   24,   25,    0,    0,   26,    0,    0, \n            0,    0,    0,   27,   28,    0,   30,   31,   32,   33, \n            0,   34,   35,   36,   37,   38,   39,    0,   40,   41, \n           42,   43,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   44,    0,    0,   45,    0,    0,   46,   47, \n            0,   48,    0,   49,    0,    0,    0,   50,    0,    0, \n            0,    0,    0,    0,    0,   51,    0,    0,    0,    0, \n           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, \n            0,   59,   60,    0,   61,   62,   63,   64,    0,    0, \n            0,    4,    5,    6,    0,    8,    0,   65,   66,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,  286,    0,  287,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,  708,    0,  287,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,  287,  287,  287,    0,  287,   65,   66,  290,  287, \n          287,    0,    0,    0,  287,    0,  287,  287,  287,  287, \n          287,  287,  287,    0,    0,    0,    0,  287,  287,  287, \n          287,  287,  287,  287,    0,    0,  287,    0,    0,    0, \n            0,    0,    0,  287,    0,    0,  287,  287,  287,    0, \n          287,  287,  287,  287,  287,  287,  287,  287,  287,  287, \n          287,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  287,    0,    0,  287,    0,    0,  287,  287,    0, \n          287,    0,  287,    0,  287,    0,  287,    0,    0,    0, \n            0,    0,    0,    0,  287,    0,    0,    0,    0,  287, \n          287,  287,  287,  287,  287,    0,    0,    0,  287,    0, \n          287,  287,    0,  287,  287,  287,  287,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,  287,  287,  287,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,  286,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,    0,    0,  287,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,  708,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,   65,   66,  290,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,  285,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n          289,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            0,    4,    5,    6,    7,    8,   65,   66,  290,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, \n            0,    0,   27,   28,   29,   30,   31,   32,   33,    0, \n           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, \n           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            4,    5,    6,    7,    8,    0,   65,   66,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, \n           17,   18,    0,    0,    0,    0,   19,   20,   21,   22, \n           23,   24,   25,    0,    0,   26,    0,    0,    0,    0, \n            0,   27,   28,    0,   30,   31,   32,   33,    0,   34, \n           35,   36,   37,   38,   39,    0,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n           44,    0,    0,   45,    0,    0,   46,   47,    0,   48, \n            0,   49,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,    0,    0,    4, \n            5,    6,    0,    8,    0,   65,   66,    9,   10,    0, \n            0,    0,   11,    0,   12,   13,   14,  109,  110,   17, \n           18,    0,    0,    0,    0,  111,  112,  113,  239,  240, \n          241,  242,    0,    0,  118,    0,    0,    0,    0,    0, \n            0,   28,    0,    0,  243,  244,  245,    0,  246,   35, \n          247,  248,  249,  250,    0,   40,   41,   42,   43,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  251, \n            0,    0,  131,  506,    0,   46,   47,    0,   48,    0, \n            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, \n            0,    0,  288,    0,    0,    0,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,    0,    0,    4,    5, \n            6,    0,    8,    0,   65,   66,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, \n            0,    0,    0,    0,   19,   20,   21,  239,  240,  241, \n          242,    0,    0,  118,    0,    0,    0,    0,    0,    0, \n           28,    0,    0,  243,  244,  245,    0,  246,   35,  247, \n          248,  249,  250,    0,   40,   41,   42,   43,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, \n            0,  131,    0,    0,   46,   47,    0,   48,    0,  646, \n            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, \n            0,  288,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,    0,    0,    4,    5,    6, \n            0,    8,    0,   65,   66,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,  109,  110,   17,   18,    0, \n            0,    0,    0,  111,  112,  113,  239,  240,  241,  242, \n            0,    0,  118,    0,    0,    0,    0,    0,    0,   28, \n            0,    0,  243,  244,  245,    0,  246,   35,  247,  248, \n          249,  250,    0,   40,   41,   42,   43,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  251,    0,    0, \n          131,    0,    0,   46,   47,    0,   48,    0,  286,    0, \n            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, \n          288,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,    0,    0,    4,    5,    6,    0, \n            8,    0,   65,   66,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,  109,  110,   17,   18,    0,    0, \n            0,    0,  111,  112,  113,  239,  240,  241,  242,    0, \n            0,  118,    0,    0,    0,    0,    0,    0,   28,    0, \n            0,  243,  244,  245,    0,  246,   35,  247,  248,  249, \n          250,    0,   40,   41,   42,   43,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  251,    0,    0,  131, \n            0,    0,   46,   47,    0,   48,    0,  646,    0,    0, \n            0,   50,    0,    0,    0,    0,    0,    0,    0,  288, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,    0,    0,    4,    5,    6,    0,    8, \n            0,   65,   66,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,  109,  110,   17,   18,    0,    0,    0, \n            0,  111,  112,  113,  239,  240,  241,  242,    0,    0, \n          118,    0,    0,    0,    0,    0,    0,   28,    0,    0, \n          243,  244,  245,    0,  246,   35,  247,  248,  249,  250, \n            0,   40,   41,   42,   43,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  251,    0,    0,  131,    0, \n            0,   46,   47,    0,   48,    0,  924,    0,    0,    0, \n           50,    0,    0,    0,    0,    0,    0,    0,  288,    0, \n            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,    0,    0,    4,    5,    6,    0,    8,    0, \n           65,   66,    9,   10,    0,    0,    0,   11,    0,   12, \n           13,   14,  109,  110,   17,   18,    0,    0,    0,    0, \n          111,  112,  113,  239,  240,  241,  242,    0,    0,  118, \n            0,    0,    0,    0,    0,    0,   28,    0,    0,  243, \n          244,  245,    0,  246,   35,  247,  248,  249,  250,    0, \n           40,   41,   42,   43,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  251,    0,    0,  131,    0,    0, \n           46,   47,    0,   48,    0,  708,    0,    0,    0,   50, \n            0,    0,    0,    0,    0,    0,    0,  288,    0,    0, \n            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, \n            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, \n            0,    0,    0,  636,  636,  636,    0,  636,    0,   65, \n           66,  636,  636,    0,    0,    0,  636,    0,  636,  636, \n          636,  636,  636,  636,  636,    0,    0,    0,    0,  636, \n          636,  636,  636,  636,  636,  636,    0,    0,  636,    0, \n            0,    0,    0,    0,    0,  636,    0,    0,  636,  636, \n          636,    0,  636,  636,  636,  636,  636,  636,    0,  636, \n          636,  636,  636,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  636,    0,    0,  636,  636,    0,  636, \n          636,    0,  636,    0,    0,    0,    0,    0,  636,    0, \n            0,    0,    0,    0,    0,    0,  636,    0,    0,    0, \n            0,  636,  636,  636,  636,  636,  636,    0,    0,    0, \n          636,    0,  636,  636,    0,  636,  636,  636,  636,    0, \n            0,    0,    4,    5,    6,    0,    8,    0,  636,  636, \n            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, \n           15,   16,   17,   18,    0,    0,    0,    0,   19,   20, \n           21,  239,  240,  241,  242,    0,    0,   26,    0,    0, \n            0,    0,    0,    0,   28,    0,    0,  243,  244,  245, \n            0,  246,   35,  247,  248,  249,  250,    0,   40,   41, \n           42,   43,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  251,    0,    0,  131,    0,    0,   46,   47, \n            0,   48,    0,    0,    0,    0,    0,   50,    0,    0, \n            0,    0,    0,    0,    0,   51,    0,    0,    0,    0, \n           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, \n            0,   59,   60,    0,   61,   62,   63,   64,    0,    0, \n            0,    4,    5,    6,    0,    8,    0,   65,   66,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,  109, \n          110,   17,   18,    0,    0,    0,    0,  111,  112,  113, \n          239,  240,  241,  242,    0,    0,  118,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  243,  244,  245,    0, \n          246,   35,  247,  248,  249,  250,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  251,    0,    0,  131,    0,    0,   46,   47,    0, \n           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,  288,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,    0,    0, \n            4,    5,    6,    0,    8,    0,   65,   66,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, \n           17,   18,    0,    0,    0,    0,   19,   20,   21,  239, \n          240,  241,  242,    0,    0,  118,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  243,  244,  245,    0,  246, \n           35,  247,  248,  249,  250,    0,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          251,    0,    0,  131,    0,    0,   46,   47,    0,   48, \n            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  288,    0,    0,    0,    0,   52,   53, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,    0,    0,  636, \n          636,  636,    0,  636,    0,   65,   66,  636,  636,    0, \n            0,    0,  636,    0,  636,  636,  636,  636,  636,  636, \n          636,    0,    0,    0,    0,  636,  636,  636,  636,  636, \n          636,  636,    0,    0,  636,    0,    0,    0,    0,    0, \n            0,  636,    0,    0,  636,  636,  636,    0,  636,  636, \n          636,  636,  636,  636,    0,  636,  636,  636,  636,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  636, \n            0,    0,  636,    0,    0,  636,  636,    0,  636,    0, \n            0,    0,    0,    0,  636,    0,    0,    0,    0,    0, \n            0,    0,  636,    0,    0,    0,    0,  636,  636,  636, \n          636,  636,  636,    0,    0,    0,  636,    0,  636,  636, \n            0,  636,  636,  636,  636,    0,    0,    0,    4,    5, \n            6,    0,    8,    0,  636,  636,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,  109,  110,   17,   18, \n            0,    0,    0,    0,  111,  112,  113,  114,  115,  116, \n          117,    0,    0,  118,    0,    0,    0,    0,    0,    0, \n          119,    0,    0,  120,  121,  122,    0,  123,   35,  124, \n          125,  126,  127,    0,   40,    0,    0,  128,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  129,    0,    0,    0,  130,    0, \n            0,  131,    0,    0,   46,   47,    0,   48,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,    0,    0,    4,    5,    6, \n            0,    8,    0,   65,   66,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,  109,  110,   17,   18,    0, \n            0,    0,    0,  111,  112,  113,  267,  268,  269,  270, \n            0,    0,  118,    0,    0,    0,    0,    0,    0,  119, \n            0,    0,  271,  272,  273,    0,  274,   35,  275,  276, \n          277,  278,    0,   40,    0,    0,  128,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  279,    0,    0, \n           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,    0,    0,    4,    5,    6,    0, \n            8,    0,   65,   66,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,  109,  110,   17,   18,    0,    0, \n            0,    0,  111,  112,  113,  340,  341,  342,  343,    0, \n            0,  118,    0,    0,    0,    0,    0,    0,  119,    0, \n            0,  344,  345,  346,    0,  347,   35,  348,  349,  350, \n          351,    0,   40,    0,    0,  128,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  352,    0,    0,  427, \n            0,    0,   46,   47,    0,   48,    0,  428,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,    0,    0,    4,    5,    6,    0,    8, \n            0,   65,   66,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,  109,  110,   17,   18,    0,    0,    0, \n            0,  111,  112,  113,  114,  115,  116,  117,    0,    0, \n          118,    0,    0,    0,    0,    0,    0,  119,    0,    0, \n          120,  121,  122,    0,  123,   35,  124,  125,  126,  127, \n            0,   40,    0,    0,  128,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  130,    0,    0,  131,    0, \n            0,   46,   47,    0,   48,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,    0,    0,    4,    5,    6,    0,    8,    0, \n           65,   66,    9,   10,    0,    0,    0,   11,    0,   12, \n           13,   14,  109,  110,   17,   18,    0,    0,    0,    0, \n          111,  112,  113,  340,  341,  342,  343,    0,    0,  118, \n            0,    0,    0,    0,    0,    0,  119,    0,    0,  344, \n          345,  346,    0,  347,   35,  348,  349,  350,  351,    0, \n           40,    0,    0,  128,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  352,    0,    0,  427,    0,    0, \n           46,   47,    0,   48,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, \n            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, \n            0,    0,    0,    4,    5,    6,    0,    8,    0,   65, \n           66,    9,   10,    0,    0,    0,   11,    0,   12,   13, \n           14,  109,  110,   17,   18,    0,    0,    0,    0,  111, \n          112,  113,  114,  115,  116,  117,    0,    0,  118,    0, \n            0,    0,    0,    0,    0,  119,    0,    0,  120,  121, \n          122,    0,  984,   35,  124,  125,  985,  127,    0,   40, \n            0,    0,  128,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  986,    0,    0,  131,    0,    0,   46, \n           47,    0,   48,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, \n           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, \n            0,    0,    4,    5,    6,    0,    8,    0,   65,   66, \n            9,   10,    0,    0,    0,   11,    0,   12,   13,   14, \n          109,  110,   17,   18,    0,    0,    0,    0,  111,  112, \n          113,  997,  998,  999, 1000,    0,    0,  118,    0,    0, \n            0,    0,    0,    0,  119,    0,    0, 1001, 1002, 1003, \n            0, 1004,   35, 1005, 1006, 1007, 1008,    0,   40,    0, \n            0,  128,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0, 1009,    0,    0,  131,    0,    0,   46,   47, \n            0,   48,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n           52,   53,   54,   55,   56,   57,    0,    0,    0,   58, \n            0,   59,   60,    0,   61,   62,   63,   64,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,   65,   66,  139, \n          140,  141,  142,  143,  144,  145,  146,  147,  148,  149, \n          150,  151,  152,  153,  154,  155,  156,  157,  158,  159, \n          160,  161,  162,    0,    0,  163,  164,  165,  223,  224, \n          225,  226,  170,  171,  172,  173,  174,  175,  176,  177, \n          178,  179,  180,  181,  227,  228,  229,    0,  230,  186, \n          310,    0,  231,    0,    0,    0,  188,  189,    0,  190, \n          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, \n            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, \n          213,  214,  215,  216,    0,    0,  217,   52,  139,  140, \n          141,  142,  143,  144,  145,  146,  147,  148,  149,  150, \n          151,  152,  153,  154,  155,  156,  157,  158,  159,  160, \n          161,  162,    0,    0,  163,  164,  165,  223,  224,  225, \n          226,  170,  171,  172,  173,  174,  175,  176,  177,  178, \n          179,  180,  181,  227,  228,  229,    0,  230,  186,    0, \n            0,  231,    0,    0,    0,  188,  189,    0,  190,  191, \n          192,  193,  194,  195,  196,    0,    0,  197,  198,    0, \n            0,    0,  199,  200,  201,  202,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  204, \n          205,    0,  206,  207,  208,  209,  210,  211,  212,  213, \n          214,  215,  216,    0,    0,  217,   52,  139,  140,  141, \n          142,  143,  144,  145,  146,  147,  148,  149,  150,  151, \n          152,  153,  154,  155,  156,  157,  158,  159,  160,  161, \n          162,    0,    0,  163,  164,  165,  166,  167,  168,  169, \n          170,  171,  172,  173,  174,  175,  176,  177,  178,  179, \n          180,  181,  182,  183,  184,    0,  185,  186,  124,  125, \n          187,  127,    0,    0,  188,  189,    0,  190,  191,  192, \n          193,  194,  195,  196,    0,    0,  197,  198,    0,    0, \n            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, \n            0,  203,    0,    0,    0,    0,    0,    0,  204,  205, \n            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, \n          215,  216,    0,    0,  217,  139,  140,  141,  142,  143, \n          144,  145,  146,  147,  148,  149,  150,  151,  152,  153, \n          154,  155,  156,  157,  158,  159,  160,  161,  162,    0, \n            0,  163,  164,  165,  223,  224,  225,  226,  170,  171, \n          172,  173,  174,  175,  176,  177,  178,  179,  180,  181, \n          227,  228,  229,    0,  230,  186,  360,  361,  231,  362, \n            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, \n          195,  196,    0,    0,  197,  198,    0,    0,    0,  199, \n          200,  201,  202,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  204,  205,    0,  206, \n          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, \n            0,    0,  217,  139,  140,  141,  142,  143,  144,  145, \n          146,  147,  148,  149,  150,  151,  152,  153,  154,  155, \n          156,  157,  158,  159,  160,  161,  162,    0,    0,  163, \n          164,  165,  223,  224,  225,  226,  170,  171,  172,  173, \n          174,  175,  176,  177,  178,  179,  180,  181,  227,  228, \n          229,    0,  230,  186,    0,    0,  231,    0,    0,    0, \n          188,  189,    0,  190,  191,  192,  193,  194,  195,  196, \n            0,    0,  197,  198,    0,    0,    0,  199,  200,  201, \n          202,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  204,  205,    0,  206,  207,  208, \n          209,  210,  211,  212,  213,  214,  215,  216,  731,  621, \n          217,    0,  732,    0,    0,    0,  188,  189,    0,  190, \n          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, \n            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, \n            0,    0,    0,  304,    0,    0,    0,    0,    0,    0, \n          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, \n          213,  214,  215,  216,  734,  629,  217,    0,  735,    0, \n            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, \n          195,  196,    0,    0,  197,  198,    0,    0,    0,  199, \n          200,  201,  202,    0,    0,    0,    0,    0,    0,  304, \n            0,    0,    0,    0,    0,    0,  204,  205,    0,  206, \n          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, \n          919,  621,  217,    0,  920,    0,    0,    0,  188,  189, \n            0,  190,  191,  192,  193,  194,  195,  196,    0,    0, \n          197,  198,    0,    0,    0,  199,  200,  201,  202,    0, \n            0,    0,    0,    0,    0,  304,    0,    0,    0,    0, \n            0,    0,  204,  205,    0,  206,  207,  208,  209,  210, \n          211,  212,  213,  214,  215,  216,  922,  629,  217,    0, \n          923,    0,    0,    0,  188,  189,    0,  190,  191,  192, \n          193,  194,  195,  196,    0,    0,  197,  198,    0,    0, \n            0,  199,  200,  201,  202,    0,    0,    0,    0,    0, \n            0,  304,    0,    0,    0,    0,    0,    0,  204,  205, \n            0,  206,  207,  208,  209,  210,  211,  212,  213,  214, \n          215,  216, 1078,  621,  217,    0, 1079,    0,    0,    0, \n          188,  189,    0,  190,  191,  192,  193,  194,  195,  196, \n            0,    0,  197,  198,    0,    0,    0,  199,  200,  201, \n          202,    0,    0,    0,    0,    0,    0,  304,    0,    0, \n            0,    0,    0,    0,  204,  205,    0,  206,  207,  208, \n          209,  210,  211,  212,  213,  214,  215,  216, 1081,  621, \n          217,    0, 1082,    0,    0,    0,  188,  189,    0,  190, \n          191,  192,  193,  194,  195,  196,    0,    0,  197,  198, \n            0,    0,    0,  199,  200,  201,  202,    0,    0,    0, \n            0,    0,    0,  304,    0,    0,    0,    0,    0,    0, \n          204,  205,    0,  206,  207,  208,  209,  210,  211,  212, \n          213,  214,  215,  216, 1084,  629,  217,    0, 1085,    0, \n            0,    0,  188,  189,    0,  190,  191,  192,  193,  194, \n          195,  196,    0,    0,  197,  198,    0,    0,    0,  199, \n          200,  201,  202,    0,    0,    0,    0,    0,    0,  304, \n            0,    0,    0,    0,    0,    0,  204,  205,    0,  206, \n          207,  208,  209,  210,  211,  212,  213,  214,  215,  216, \n            0,    0,  217, \n      };\n   }\n\n   private static final short[] yyCheck1() {\n      return new short[] {\n\n           26,   74,   28,    2,    3,    4,    5,  100,    6,  468, \n            9,   10,   11,    3,    7,   14,   15,   16,   51,  296, \n           19,   27,   88,    6,    7,   91,   49,  508,   15,   16, \n           11,  258,   19,   10,   27,  448,   10,   10,   11,   15, \n           16,  488,    7,   19,   27,  580,   45,  473,  485,    0, \n           49,  488,   51,   10,   52,   21,   10,   10,  424,   10, \n           47,   48,   27,  335,  366,  431,  368,  339,   10,   52, \n            2,    3,   15,   16,   45,  418,   19,   10,  430,   10, \n          527,   10,   59,  673,   32,  372,    4,    5,   10,    0, \n          105,    0,  417,  119,  419,   59,   14,   10,  423,  689, \n           10,  100,   59,  446,   47,  130,   59,   10,   59,   10, \n           10,   44,  702,   10,  864,   10,   10,   21,   59,  462, \n           10,  105,  447,   10,  105,  772,   59,  758,   59,   10, \n          129,   49,  131,  476,   44,  980,  461,   59,  463,  280, \n          960,  107,   10,  733,   44,   10,   59,  113,   10,   59, \n          307,    0,  477,  683,  308,  558,   59,  322,   59,   59, \n          341,   10,  692,  341,   59,   59,   43,   10,  342,   59, \n           10,  137,  329,  330,   10,   10,   10,   10,   59,  342, \n          482,   10,  100,   10,  305,  359,  511,  362,  254,   10, \n          310,   59,  535,  312,   59,   10,  359,   59,  317,  282, \n           10,   44,  280,  107,   44,    2,    3,    4,    5,   44, \n           59,  536,   10,  305,  280,   44,   59,   14,   32,   59, \n          497,  362,  376,  377,   59,   61,   59, 1072,   10,  587, \n           59,  350,  351,    9,   10,   11,   10,   10,   59,  238, \n          887, 1061,   10,   32,  725,   10,  548,   10,   45,   59, \n          316,  128,   49,   10,  375,  668,   10,  424,  366,  426, \n          353,  619,  427,  341,  431,  678,  265,  266,   10,  716, \n           10,  558,   10, 1023,  677,  394,  679,  261,  715,  716, \n          261,  583,  345,  375,  362,   10,   10,   61,  354,  373, \n           44,  557,  265,  266,  378,  308,  309,   10,  311,   32, \n          363,   10,  301,  100,  303,  304,   44,   61,  307,  324, \n          309,  784,  328,  317,  301,  314,  303,  790,   10,  335, \n          336,  320,   10,  322,  373,  301,   32,  303,  304,  378, \n          682,  921,  331,  490,  131,   44,  967,   61,  290,  291, \n          324,  498,  499,  324,   10,  349,   59,  882,  306,  353, \n          354,  322,  310,  129,  353,   10,  891,  267,  301,  516, \n          303,  896,   32,  376,  377,   44,  267,  780,  342,   61, \n          264,  345,  267,   61,  264,  269,   45,  271,  281,  269, \n          379,  380,  381,  382,  383,  384,  385,  341,  320,   44, \n          677,  424,  679,  426,  807,  359,  264,  430,  431,  331, \n          342,  342,  359,  345,   59,  428,  379,  380,  381,  382, \n          363,  342,  363,  342,  840,  781,  782,  947,  395,  418, \n          445,  787,  788,  371,  372,  424,  359,  426,  427,  428, \n          378,  430,  431,  710,  433,  353,  419,  359,  339,  741, \n          423,  238,  418,  433,  537,  342,  359,  446,  345,  448, \n          449,  383,  363,  419,  363,  798,  427,  729,  345,  359, \n          459,  342,  131,  462,  447,  305,  768,  694,  467,  756, \n          446,  758,  797,  269,  799,  271,  305,  476,  744,  745, \n          463,  447,  537,  426,  305,  772,  462,  430,  947,  265, \n          266,  472,  473, 1083,  477,  305,  653,  463,  485,  505, \n          476,  433,  342,   10,  951,  279,  342,  506, 1043,  508, \n          428,  477,  505,  342,  951,  342,  359,  314,  345,  676, \n          519,  342,  505,  320,  359,  322,  469,  342,  511,    2, \n            3,  307,  342,  309,  331,  375,  535,  524,  537,  338, \n          505,   14,  908,   61,  342,  511,  375,   91,   10,    2, \n          263,  264,   59,  536,  375,  279,  353,  371,  372,  535, \n          342,  654,   10,  720,  378,  375,  756,  844,  342,  342, \n          536,  728,   45,   10,  342,  641,  508,  342,   61,  342, \n          571,  572,   44,  996,   91,  342,  383,  279,  342,   10, \n          616,  279,  749,   10,   47,   48,  862,   59,  864,  654, \n          342,  627,  342,  379,  380,  381,  382,   44,  384,  385, \n          338,  372,  267,   61,  781,  782,   10,  342,  342,  537, \n          787,  788,   59,  341,  290,  291,  325,  424,  357,  426, \n          427,  428,   10,  800,  431,   10,  433,  730,   59,  371, \n          372,  373,  322,  323,   61,  314,  378,  673,  268,  269, \n          342,  448,   44,  322,  342,  654,  813,  623,  131,  310, \n          359,  338,  459,  689,  396,  631,   10,   61,  667,  668, \n          467,  637,   61,  449,   10,  681,  702,  357,  358,  678, \n          967,  338,  680,   61,  339,  666,   61,  271,  681,  976, \n          956,  957,   59,  980,  667,    2,    3,  680,  681,  310, \n           44,  350,  351,  279,  861,  671,  705,  733,  674,  936, \n         1053,  508,  805,   15,   16,  942,  681,   19,  339,  623, \n           44,  794,  519,   44,  750,   61,  725,  631,  715, 1054, \n          506,  730,  705,  637,  328,  756,  654,  758,   45,  682, \n          537,  908,  336,  263,  264,  362,  772,  317,  781,  782, \n          805,  772,   44,  317,  787,  788,  338, 1023,  427, 1025, \n          267,   10,  263,  264,   44,  238,  345,  800,  269,   61, \n          342,  961,  363,  280,  310,  774,  862,   44,  777,   44, \n          347,  780,  781,  782,  328, 1072,  976,  341,  787,  788, \n          459,  335,  336,  725, 1060,   44,  795,  558,  467,  798, \n          341,  800,   44,  262,  264,  342,  805,  264,  807,  267, \n           59,   44,  730,  371,  372,   44,  799,  363,   44,  362, \n          378,  328,  798,  822,  131,  383,  825,  808,  335,  336, \n          306,  279,  306,  799,  815,   44,   91,  836,  837,  838, \n           44,  314,   91,  305,   44,   10,  267,  320,   44,  322, \n          306,  304,  825,   91,   44,  362,   61,  654,  331,  840, \n          363,  887,  279,  795,   44,  264,  338,  338,  305,  338, \n          956,  668,  871,  872,  338,  908,   61,  868, 1068,   44, \n          342,  678,  297,  874,  875,  279,  877,  805,  879,   44, \n           44,  667,  424,  264,  342,  921,   61,  359,  897,  431, \n          269,  279,   44,  338,  279,  342,  338,  338,  338,  908, \n          383,   91,  264,  375,  363,   32,  677,   44,  679,   32, \n           58,  345,  359,   44,  338,  342,   91,  363,  725,  705, \n          264,  238,  464,  730,  466,   10,  935,  264,  375, 1025, \n          939,  738,  339,  279, 1010,   91,  967,  263,  342,   91, \n          264,  424,  338,  426,  427,  976,  264,   44,  431,  980, \n          433,  371,  372,  373,  342,  418,   44,  342,  378,   10, \n           91,  371,  372,  373, 1060,  448,  363,  774,  378,  897, \n          777,  513,  342,  780,  781,  782,  459,  279,   59,  988, \n          787,  788,   44,  446,  467,   44,   44,  996,  795,  301, \n           44,  303, 1028,  800,   44,   44,  342,  314,  805,  462, \n          807,   44,   10,  320, 1013,  322, 1015,  935,   59,   44, \n           44,  359, 1021,  476,  331,  822,  306,   61,  308,  309, \n          310,  311,  264,  264,  264,  508,  264,   44,  363,  836, \n          837,  838, 1033, 1034, 1035, 1036,  519,  264,  359,  825, \n          310, 1072,  310,   44, 1053,  508,   44, 1083,   91, 1058, \n           44,   59,   10,   44,  306,   44,  308,  309,  310,  311, \n          988, 1054,   44,  328,  871,  872,  383, 1053,  264,  328, \n          335,  336,  535,  264,   44,  395,  335,  336, 1054,  271, \n          328,  345,  341,   91,  363,  341,   44,  335,  336,  279, \n          897, 1092,   10,  271,  345,  774,   10,  363,  777,  345, \n          359,  908,   58,   61,  279,    0,   10,  424,  342,  426, \n          427,  264,  345,   70,  431,   10,  433,  289,   10,   54, \n            5,  583,  585, 1056,  587,  519,    6,  279,  935,  637, \n           44,  448,  939,   91,  379,  380,  381,  382,  328,  934, \n          756,   59,  459,  822,  772,  335,  336,   61,  279,  280, \n          467,  341,   44,  328,  760,   59,  619,  836,  837,  838, \n          335,  336,   44,  978,   59,  976,  341,  342,  631,   61, \n          793, 1055,  328,   91,  637,   91,  328,   91,   14,  335, \n          336,  988,  744,  335,  336,  668,  664,   91, 1061,  996, \n           89,  508,  871,  872,   -1,  678,   -1,  328,   -1,   91, \n           -1,   -1,  519,   -1,  335,  336, 1013,   44, 1015,   91, \n          341,  674,   -1,  264, 1021,   -1,   -1,  268,  269,  682, \n          683,  306,  685,  308,  309,  310,  311,  312,   10,  692, \n           -1,  362,  317,   -1,   -1,   -1,  279,  280,   -1,  781, \n          782,   -1,  725,   -1,   -1,  787,  788,   -1,   91,   -1, \n           -1, 1058,   -1,   -1,   91,  340,   -1,   10,   91,  267, \n          939,   -1,  725,  348,  349,  350,  351,   -1,   -1,   10, \n           -1,   -1,    0,   -1,   -1,   15,   16,   59,   -1,   19, \n           -1,   10,   10,   -1,   -1,  328,  828,  829,   -1,  831, \n          832,  774,  335,  336,  777,   -1,   -1,  780,  781,  782, \n           -1,   41,   42,   -1,  787,  788,   59,   47,   48,  394, \n           50,   51,  795,   10,   -1,   44,   44,  800,   59,  362, \n          328,  279,  280,   -1,  807,   -1,   -1,  335,  336,   -1, \n           59,   59,   -1,  341, 1013,  798, 1015,   -1,   -1,  822, \n           91,   -1, 1021,   -1,   10,   44,   -1,   44,   -1,  267, \n           91,  668,   -1,  836,  837,  838,   10,  820,   -1,   -1, \n          823,  678,   91,  267,   61,  279,  280,  262,  263,  264, \n          328,   91,  267,  268,  269,   -1,  271,  335,  336, 1058, \n           -1,   -1,   -1,  341,  342,   -1,  281,  279,  871,  872, \n           44,   -1,   91,   59,   91,  290,  291,  279,  293,  294, \n          295,  296,  297,   -1,  362,   -1,   -1,   61,  725,   -1, \n          328,   -1,  328,   -1,  328,   -1,   -1,  335,  336,  335, \n          336,  335,  336,   -1,  328,  908,   -1,  341,  342,    4, \n            5,  335,  336,  328,   -1,   -1,  328,   91,   -1,   14, \n          335,  336,  279,  335,  336,   -1,  328,  342,  362,   -1, \n          342,   -1,  935,  335,  336,   -1,  939,  774,   -1,   10, \n          777,   -1,   -1,  780,  781,  782,   41,   42,  363,   -1, \n          787,  788,   47,   48,   49,   50,   -1,   -1,  795,   48, \n          262,  263,  264,  800,  947,  328,  268,  269,   -1,  271, \n          807,  328,  335,  336,   -1,  328,   -1,   -1,  335,  336, \n          395,   -1,  335,  336,   -1,  822,   -1,   -1,   59,  262, \n          263,  264,    0,  996,   -1,  268,  269,   -1,  271,  836, \n          837,  838,   10,   -1,   -1,  100,  267,   -1,   -1,   -1, \n         1013,   -1, 1015,   -1,  262,  263,  264,   -1, 1021,  267, \n          268,  269,   -1,  271,   -1,  285,  286,  287,  288,   -1, \n          290,  280,   -1,   -1,  871,  872,   -1,   -1,   -1,   -1, \n          342,  301,   -1,  303,  304,  293,  294,  295,  296,  297, \n           10,   59,  312,   -1,   -1, 1058,   -1,  328,   -1,   -1, \n          279,  363,  279,   -1,  335,  336,   -1,  328,   -1,  342, \n         1053,  908,   -1, 1056,  335,  336,  262,  263,  264,  328, \n           -1,   -1,   -1,  269,   44,   -1,  335,  336,  328,   -1, \n          363,  339,  341,  395,  342,  335,  336,  371,  372,  373, \n           -1,   61,  939,   -1,  378,  279,  280,   -1,   -1,  328, \n          359,  328,   -1,  362,   -1,  363,  335,  336,  335,  336, \n           -1,   -1,  395,   -1,   -1,  342,  386,  387,  388,  389, \n          390,   91,   -1,  393,  394,  395,  396,  397,  398,  399, \n          400,  401,  402,  403,  404,  405,  406,  395,   -1,  409, \n          410,  411,  412,   44,  328,   -1,   -1,   -1,  418,  996, \n          420,  335,  336,   -1,  424,   -1,  426,  341,  342,   -1, \n          430,  431,   -1,   -1,   -1,   -1, 1013,  306, 1015,  308, \n          309,  310,  311,   -1, 1021,   -1,  446,   -1,  362,   -1, \n          285,  286,  287,  288,   -1,  290,  285,  286,  287,   -1, \n           91,  290,  462,    0,  464,  465,  466,  753,   -1,  469, \n           -1,  340,  758,   10,   -1,   -1,  476,  312,   -1,   44, \n           -1, 1058,   -1,   -1,  484,  485,  772,   -1,  488,  371, \n          372,  373,   -1,   -1,   -1,  306,  378,  308,  309,  310, \n          311,  312,   -1,  371,  372,  373,  317,   44,   -1,   -1, \n          378,   -1,  512,  513,  262,  263,  264,  328,  353,  267, \n          268,  269,   59,  271,  524,  336,   91,  527,   -1,  340, \n          341,   -1,   -1,  281,   -1,  535,   -1,  348,  349,  350, \n          351,   -1,  290,  291,   10,  293,  294,  295,  296,  297, \n           -1,  386,  387,  388,  389,  390,   -1,   -1,  393,  394, \n          395,  396,  397,  398,  399,  400,  401,  402,  403,  404, \n          405,  406,   44,   10,  409,  410,  411,  412,   44,  279, \n          280,  581,   -1,  394,   10,  420,   10,   -1,   10,  371, \n          372,  373,   -1,  428,  342,   61,  378,  426,   44,   -1, \n           -1,  430,   -1,   10,   -1,   -1,   -1,   44,   -1,  306, \n           -1,  308,  309,  310,  311,  363,   -1,   -1,   44,   91, \n           44,   -1,   44,   -1,   61,   91,   -1,   -1,  328,  464, \n          465,  466,   -1,   59,  469,  335,  336,   61,   -1,   61, \n          469,  341,  342,  340,   -1,   91,  646,  395,  279,  484, \n          485,  348,   59,  488,   91,  484,  485,   -1,   -1,  488, \n           -1,   -1,  362,   -1,   -1,   91,   10,   91,  306,   91, \n          308,  309,  310,  311,   -1,   -1,   -1,  512,  513,  965, \n           -1,  967,  682,  969,   91,   -1,   -1,  973,   -1,  524, \n           -1,   -1,  527,   -1,  980,  524,   -1,  328,  527,   -1, \n           44,   -1,  537,   -1,  335,  336,  706,   -1,  708,  293, \n          294,  295,  296,  297,  279,  715,  716,   61,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   10,  760, \n          267,  268,  269,  306,  271,  308,  309,  310,  311,   -1, \n           -1,  772,   -1,   44,  281,  282,  581,   91,   -1,   -1, \n           -1,   -1,  581,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,    0,  328,   -1,   -1,  766,  340,   -1,   -1, \n          335,  336,   10,   -1,   -1,  348,   -1,   59, 1064,   -1, \n           -1,  781,  782,   44, 1070,   10, 1072,  787,  788, 1075, \n           91,   -1,   -1,   44,   -1,   -1,  796,   -1,  798,   -1, \n          800,   -1,  802,   -1,   -1,  342,   -1,  279,  345,   -1, \n          347,  646,   10,  279,  280, 1101,   -1,  646,   -1,  654, \n           -1,   59,   -1,   -1,   -1,   -1,  363,   -1,  828,  829, \n           91,  831,  832,  279,   59,  835,   -1,   -1,   -1,   -1, \n           91,   -1,  279,  280,   -1,   -1,   -1,  682,   -1,   -1, \n           -1,   -1,   -1,  682,  280,  279,  328,  279,  395,   -1, \n          267,   59,  328,  335,  336,   -1,   91,   -1,   -1,  335, \n          336,  706,   -1,  708,   -1,  341,  342,  706,   -1,  708, \n          715,  716,  328,   -1,   -1,   -1,  715,  716,   -1,  335, \n          336,  328,   -1,   91,   -1,  730,  362,    0,  335,  336, \n           -1,  901,  328,   -1,  328,  342,  328,   10,  908,  335, \n          336,  335,  336,  335,  336,  341,   -1,   -1,  342,   -1, \n          342,  328,   -1,   -1,  924,  362,   -1,  317,  335,  336, \n           -1,  766,   -1,  359,  888,  279,  362,  766,  892,   -1, \n           -1,   44,  973,   -1,  944,  976,   -1,  978,   -1,  980, \n           -1,  951,   -1,   -1,   -1,   58,   59,   -1,   61,  349, \n           63,  796,   -1,  353,  354,  355,  356,  802,   -1,   -1, \n          805,   -1,   -1,  802,   -1,   -1,   -1,   -1,  279,  280, \n          262,  263,  264,   -1,  328,  267,  268,  269,   91,  271, \n           -1,  335,  336,  828,  829,   -1,  831,  832,  342,  281, \n          835,   -1,   -1,   -1,   -1,   -1,  835,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,  279,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,  328,  279,  267, \n          268,  269,   -1,  271,  335,  336,   -1, 1068,    0, 1070, \n          341, 1072,  267,  281, 1075,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,   -1, 1053,   -1,  293,  294,  295,  296,  297, \n          342,  362,  897,   -1,   -1,   -1,  901,  328,   -1,  267, \n         1101,   -1,   -1,   -1,  335,  336,   -1,  328,   -1,   -1, \n           -1,  363,   44, 1037,  335,  336, 1040, 1041,   -1,  924, \n         1044, 1045,   -1,   -1,   -1,  924,   58,   59,   -1,   61, \n          935,   63,   -1,  328,  342,   -1,   -1,   -1,   -1,  944, \n          335,  336,   -1,  395,   -1,   -1,  951,   -1,   -1,   -1, \n           -1,   -1,  951,   -1,   -1,  363,   -1,   10,   -1,   91, \n          328,   -1,   -1,   -1,   -1,   -1,   -1,  335,  336, 1093, \n         1094, 1095, 1096,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1, 1105,   -1,  988,  257,  258,  259,  395,  261,  262, \n          263,  264,  265,  266,  267,  268,  269,  270,  271,  272, \n          273,  274,  275,  276,  277,  278,   59,  280,  281,  282, \n          283,  284,  285,  286,  287,  288,  289,  290,  291,  292, \n          293,  294,  295,  296,  297,   -1,  299,   -1,   -1,  302, \n          303,  304,  305,  306,  307,  308,  309,  310,  311,  312, \n          313,  314,  315,  316,  317,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,   10,   -1, \n          333,  334,  335,  336,  337,  338,  339,  340,  341,  342, \n          343,  344,  345,  346,  347,  348,  349,  350,  351,  352, \n          353,  354,  355,  356,  357,  358,  359,  360,  361,  362, \n          363,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           44,  374,  375,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   63,   -1,   -1,   -1,  772,   -1,   -1,   -1,  392, \n          393,  394,  395,   -1,   -1,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,  267,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   91,  280,  281, \n          282,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   -1,   -1, \n          302,  303,  304,  305,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   44, \n           -1,  333,  334,  335,  336,  337,  338,  339,  340,  341, \n          342,  343,  344,  345,  346,  347,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,    0,  374,  375,  376,  377,   91,  379,  380,  381, \n          382,   10,   -1,  306,  317,  308,  309,  310,  311,  312, \n          392,  393,  394,  395,  317,   -1,   -1,   -1,   -1,   -1, \n          333,  334,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  336,   -1,   44,  349,  340,  341,   -1, \n          353,  354,  355,  356,   -1,  348,  349,  350,  351,   58, \n           59,   -1,   61,   -1,   63,   -1,  306,   -1,  308,  309, \n          310,  311,  312,   -1,   -1,   -1,  973,  317,   -1,  976, \n           -1,  978,   -1,  980,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,  279,  262,  263,  264,   -1, \n          340,  394,  268,  269,   -1,  271,  262,  263,  264,   -1, \n          350,  351,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, \n            0,  333,  334,   -1,  328,   -1,   -1,   -1,   -1,   -1, \n           10,  335,  336,   -1,  394,   -1,   -1,  349,   -1,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           -1, 1068,   -1, 1070,   -1, 1072,  342,   -1, 1075,   -1, \n           -1,   -1,   -1,   -1,   44,   -1,  342,   -1,   -1,  317, \n           -1,   -1,   -1,   -1,  279,   -1,   -1,  363,   58,   59, \n           -1,   61,   -1,   63, 1101,  333,  334,  363,   -1,   -1, \n           -1,  306,   -1,  308,  309,  310,  311,  312,   -1,   -1, \n           -1,  349,  317,  351,   -1,  353,  354,  355,  356,  395, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  395, \n           -1,   -1,   -1,  328,   -1,  340,  341,   -1,   -1,   -1, \n          335,  336,   10,  348,  349,  350,  351,   -1,  257,  258, \n          259,   -1,  261,  262,  263,  264,  265,  266,  267,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n           -1,  280,  281,  282,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,  394, \n          299,   59,   -1,  302,  303,  304,  305,  306,  307,  308, \n          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   44,   -1,  333,  334,  335,  336,  337,   10, \n          339,  340,  341,  342,  343,  344,  345,  346,  347,  348, \n          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,  375,  376,  377,   91, \n          379,  380,  381,  382,   -1,   -1,   -1,   -1,   59,   -1, \n           -1,   10,   -1,  392,  393,  394,  395,  257,  258,  259, \n           -1,  261,  262,  263,  264,  265,  266,  267,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,  281,  282,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, \n           59,   -1,  302,  303,  304,  305,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   91,  333,  334,  335,  336,  337,   -1,  339, \n          340,  341,  342,  343,  344,  345,  346,  347,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,    0,  374,  375,  376,  377,   -1,  379, \n          380,  381,  382,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  392,  393,  394,  395,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,   -1, \n          308,  309,  310,  311,  312,   -1,   -1,   44,   -1,  317, \n           -1,   -1,   -1,  317,   -1,   -1,   -1,  279,  280,   -1, \n          328,   58,   59,   -1,   61,   -1,   63,   -1,  336,  333, \n          334,   -1,  340,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,  350,  351,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,   -1,   91,  359,   -1,  361,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,  306,  394,  308,  309,  310, \n          311,  312,   -1,   -1,   -1,   -1,  317,   -1,  267,   -1, \n          362,   -1,    0,   -1,   -1,   -1,   -1,  328,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,  336,   -1,   -1,   -1,  340, \n          341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,  350, \n          351,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,   -1,  328, \n           58,   59,   -1,  333,  334,   63,  335,  336,   -1,   -1, \n           -1,   -1,   -1,  394,   -1,   -1,   -1,   -1,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n          257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, \n          267,  268,  269,  270,  271,  272,  273,  274,  275,  276, \n          277,  278,   -1,  280,  281,  282,  283,  284,  285,  286, \n          287,  288,  289,  290,  291,  292,  293,  294,  295,  296, \n          297,   -1,  299,   59,   -1,  302,  303,  304,  305,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   44,   -1,  333,  334,  335,  336, \n          337,   10,  339,  340,  341,  342,  343,  344,  345,  346, \n          347,  348,  349,  350,  351,  352,  353,  354,  355,  356, \n          357,  358,  359,  360,  361,  362,  363,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,  375,  376, \n          377,   91,  379,  380,  381,  382,   -1,   -1,   -1,   -1, \n           59,   -1,   -1,   10,   -1,  392,  393,  394,  395,  257, \n          258,  259,   -1,  261,  262,  263,  264,  265,  266,  267, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,   -1,  280,  281,  282,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n           -1,  299,   59,   -1,  302,  303,  304,  305,  306,  307, \n          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   91,  333,  334,  335,  336,  337, \n           -1,  339,  340,  341,  342,  343,  344,  345,  346,  347, \n          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,    0,  374,  375,  376,  377, \n           -1,  379,  380,  381,  382,   10,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  392,  393,  394,  395,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          306,   -1,  308,  309,  310,  311,  312,   -1,   -1,   44, \n           -1,  317,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279, \n          280,  317,  328,   58,   59,   -1,  322,  323,   63,   -1, \n          336,   -1,   -1,   -1,  340,  341,   -1,  333,  334,   -1, \n           -1,   -1,  348,  349,  350,  351,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  349,   -1,  351,   91,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,   -1,  328,   -1, \n           -1,   -1,   -1,   -1,   -1,  335,  336,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,   -1,   -1,   -1,  306,  394,  308, \n          309,  310,  311,  312,   -1,   -1,   -1,   -1,  317,   -1, \n          267,   -1,  362,   -1,    0,   -1,   -1,   -1,   -1,  328, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,  336,   -1,   -1, \n           -1,  340,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348, \n          349,  350,  351,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,   44,  326, \n          327,   -1,   -1,   -1,   -1,   -1,  333,  334,   -1,   -1, \n           -1,  328,   58,   59,   -1,   -1,   -1,   63,  335,  336, \n           -1,   -1,  349,   -1,  351,  394,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  257,  258,  259,   -1,  261,  262,  263,  264, \n          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, \n          275,  276,  277,  278,   -1,  280,  281,  282,  283,  284, \n          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, \n          295,  296,  297,   -1,  299,   59,   -1,  302,  303,  304, \n          305,  306,  307,  308,  309,  310,  311,  312,  313,  314, \n          315,  316,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   44,   -1,  333,  334, \n          335,  336,  337,   10,  339,  340,  341,  342,  343,  344, \n          345,  346,  347,  348,  349,  350,  351,  352,  353,  354, \n          355,  356,  357,  358,  359,  360,  361,  362,  363,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n          375,  376,  377,   91,  379,  380,  381,  382,   -1,   -1, \n           -1,   -1,   59,   -1,   -1,   10,   -1,  392,  393,  394, \n          395,  257,  258,  259,   -1,  261,  262,  263,  264,  265, \n          266,  267,  268,  269,  270,  271,  272,  273,  274,  275, \n          276,  277,  278,   -1,  280,  281,  282,  283,  284,  285, \n          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, \n          296,  297,   -1,  299,   59,   -1,  302,  303,  304,  305, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   91,  333,  334,  335, \n          336,  337,   -1,  339,  340,  341,  342,  343,  344,  345, \n          346,  347,  348,  349,  350,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,  362,  363,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,    0,  374,  375, \n          376,  377,   -1,  379,  380,  381,  382,   10,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  306,   -1,  308,  309,  310,  311,  312,   -1, \n           -1,   44,   -1,  317,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  279,  280,   -1,  328,   58,   59,   -1,   61,   -1, \n           63,   -1,  336,   -1,   -1,   -1,  340,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,  348,  349,  350,  351,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          328,   -1,   -1,   -1,   -1,   -1,   -1,  335,  336,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,  306, \n          394,  308,  309,  310,  311,  312,   -1,   -1,   -1,   -1, \n          317,   -1,  267,   -1,  362,   -1,    0,   -1,   -1,   -1, \n           -1,  328,   -1,   -1,   -1,   -1,   10,   -1,   -1,  336, \n           -1,   -1,   -1,  340,  341,   -1,   -1,   -1,   -1,   -1, \n           -1,  348,  349,  350,  351,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, \n           44,  326,  327,   -1,   -1,   -1,   -1,   -1,  333,  334, \n           -1,   -1,   -1,  328,   -1,   59,   -1,   -1,   -1,   63, \n          335,  336,   -1,   -1,  349,   -1,  351,  394,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261,  262, \n          263,  264,  265,  266,  267,  268,  269,  270,  271,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,  281,  282, \n          283,  284,  285,  286,  287,  288,  289,  290,  291,  292, \n          293,  294,  295,  296,  297,   -1,  299,   59,   -1,  302, \n          303,  304,  305,  306,  307,  308,  309,  310,  311,  312, \n          313,  314,  315,  316,  317,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, \n          333,  334,  335,  336,  337,   10,  339,  340,  341,  342, \n          343,  344,  345,  346,  347,  348,  349,  350,  351,  352, \n          353,  354,  355,  356,  357,  358,  359,  360,  361,   63, \n          363,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,  375,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   -1,   -1,   -1,   59,   -1,   -1,   10,   -1,  392, \n          393,  394,  395,  257,  258,  259,   -1,  261,  262,  263, \n          264,  265,  266,  267,  268,  269,  270,  271,  272,  273, \n          274,  275,  276,  277,  278,   -1,  280,  281,  282,  283, \n          284,  285,  286,  287,  288,  289,  290,  291,  292,  293, \n          294,  295,  296,  297,   -1,  299,   59,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,  312,  313, \n          314,  315,  316,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   63,   91,  333, \n          334,  335,  336,  337,   -1,  339,  340,   -1,  342,  343, \n          344,  345,  346,  347,  348,  349,  350,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  362,  363, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,    0, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   10, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393, \n          394,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  306,   -1,  308,  309,  310,  311, \n          312,   -1,   -1,   44,   -1,  317,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   59,   -1, \n           -1,   -1,   63,   -1,  336,   -1,   -1,   -1,  340,  341, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,  350,  351, \n           -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, \n          334,  306,  394,  308,  309,  310,  311,  312,   -1,   -1, \n           -1,   -1,  317,   -1,  267,  349,   -1,  351,    0,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   10,   -1, \n           -1,   -1,   -1,   -1,   -1,  340,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  348,  349,  350,  351,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  328,   -1,   59,   -1,   -1, \n           -1,   63,  335,  336,   -1,   -1,   -1,   -1,   -1,  394, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,   -1,  329,  330,   -1,   -1,  333,  334,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,  257,  258,  259,   -1, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,   -1,  280, \n          281,  282,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,  293,  294,  295,  296,  297,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,  312,  313,  314,  315,  316,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n            0,   -1,  333,  334,  335,  336,  337,   10,  339,  340, \n           10,  342,  343,  344,  345,  346,  347,  348,  349,  350, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,  362,  363,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   44,   -1,  374,   44,  376,  377,   -1,  379,  380, \n          381,  382,   -1,   -1,   -1,   -1,   59,   -1,   58,   59, \n           -1,  392,  393,  394,  395,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,  267,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   -1,   91,  281, \n          282,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,  337,   -1,  339,  340,   -1, \n          342,  343,  344,  345,  346,  347,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n            0,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           10,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,  394,  395,  306,   -1,  308,  309,  310,  311, \n          312,   -1,   -1,   -1,   44,  317,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59, \n           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,  340,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,  350,  351, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   91,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   -1,   -1,  280,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,  394,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1, \n           -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,  359,   -1,   -1,  362, \n           -1,   -1,   -1,  363,   -1,  306,  307,   -1,   59,  310, \n           61,   -1,   63,  314,  315,  375,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,  395,   -1,   -1,   -1,   -1, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,  337,  338,   10, \n          340,  341,  342,  343,  344,   -1,  346,   -1,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,  760,   -1,  374,  763,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  772,   -1,   -1,   -1,   59,   -1, \n           10,   -1,  392,  393,  394,  395,  257,  258,  259,   -1, \n          261,  262,  263,  264,  265,  266,   -1,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,   -1,  280, \n           91,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,  293,  294,  295,  296,  297,   -1,  299,   59, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,  312,  313,  314,  315,  316,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n           -1,   91,  333,  334,  335,  336,  337,  338,   -1,  340, \n          341,  342,  343,  344,   -1,  346,   -1,  348,  349,  350, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,  362,  363,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,    0,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  392,  393,  394,  395,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  973,   -1,   -1,  976,   -1, \n          978,   -1,  980,   -1,   -1,   -1,  267,   -1,   -1,   -1, \n           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  280, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1, \n           -1,   10,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1, \n          341,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n         1068,   -1, 1070,   -1, 1072,   -1,   -1, 1075,   -1,   -1, \n           -1,  362,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1, \n           59,   -1,   61, 1101,   63,  335,  336,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,  262,  263,  264,  265,  266,   -1, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,   -1,  280,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, \n           -1,   10,  340,  341,  342,  343,  344,   -1,  346,   -1, \n          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, \n          368,  369,  370, \n      };\n   }\n\n   private static final short[] yyCheck2() {\n      return new short[] {\n\n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,   -1,   -1,   -1,   -1,   59,   -1,   10, \n           -1,  392,  393,  394,  395,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,   91, \n           -1,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   59,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           91,  333,  334,  335,  336,  337,   -1,   -1,  340,  341, \n          342,  343,  344,   -1,  346,   -1,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,    0,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,  394,  395,   -1,   -1,  306,  307,   -1,   -1, \n          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, \n          320,  321,  322,  323,   -1,   44,  326,  327,   -1,   -1, \n           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, \n           59,  341,   61,   -1,   63,   -1,   -1,   -1,  348,  349, \n           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,   -1,   -1,  364,  267,   -1,   -1,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  280,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1, \n            0,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           10,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          362,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   59, \n           -1,   61,   -1,   63,  335,  336,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258, \n          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n           -1,  280,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,  337,   -1, \n           10,  340,  341,  342,  343,  344,   -1,  346,   -1,  348, \n          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,   -1,   -1,   -1,   -1,   59, \n           -1,   -1,   -1,  392,  393,  394,  395,  257,  258,  259, \n           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,   91,   -1,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,  337,   -1,   -1, \n          340,  341,  342,  343,  344,   -1,  346,   -1,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,    0,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  392,  393,  394,  395,   -1,   -1,  306,  307, \n           -1,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   44,  326,  327, \n           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   59,  341,   61,   -1,   63,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,   -1,   -1,  364,  267,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1, \n          280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,  328,   -1, \n           -1,   -1,   10,   -1,   -1,  335,  336,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,  306,  307,   -1,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,  362,   -1,  326,  327,   44,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, \n           -1,   59,   -1,   61,   -1,   63,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, \n           -1,  268,  269,  270,  271,  272,  273,  274,  275,  276, \n          277,  278,   -1,  280,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,  290,  291,  292,  293,  294,  295,  296, \n          297,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n          337,   -1,   10,  340,  341,  342,  343,  344,   -1,  346, \n           -1,  348,  349,  350,  351,  352,  353,  354,  355,  356, \n          357,  358,  359,  360,  361,  362,  363,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1, \n           -1,   59,   -1,   -1,   -1,  392,  393,  394,  395,  257, \n          258,  259,   -1,  261,  262,  263,  264,  265,  266,   -1, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,   -1,  280,   91,   -1,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, \n           -1,   -1,  340,  341,  342,  343,  344,   -1,  346,   -1, \n          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,    0,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   10,   -1,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,  392,  393,  394,  395,   -1,   -1, \n          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, \n           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   44, \n          326,  327,   44,   -1,   -1,  331,  332,  333,  334,   -1, \n           -1,   -1,   -1,   -1,   59,  341,   61,   -1,   63,   61, \n           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,   -1,   -1,  364,  267, \n           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   91, \n           -1,   -1,  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n          328,   -1,   -1,   -1,   10,   -1,   -1,  335,  336,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,  306,  307,   -1,   -1, \n          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, \n          320,  321,  322,  323,  362,   -1,  326,  327,   44,   -1, \n           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, \n           -1,  341,   -1,   59,   -1,   61,   -1,   63,  348,  349, \n           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  257,  258,  259,   -1,  261,  262,  263,  264, \n          265,  266,   -1,  268,  269,  270,  271,  272,  273,  274, \n          275,  276,  277,  278,   -1,   -1,   -1,  279,  283,  284, \n          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, \n          295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,  312,  313,  314, \n          315,  316,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,  328,   -1,  333,  334, \n          335,  336,  337,  335,  336,  340,  341,  342,  343,  344, \n          342,  346,   -1,  348,  349,  350,  351,  352,  353,  354, \n          355,  356,  357,  358,  359,  360,  361,    0,  363,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   10,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394, \n          395,  257,  258,  259,   -1,  261,  262,  263,  264,  265, \n          266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   59,  283,  284,  285, \n          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, \n          296,  297,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,  337,   -1,   -1,  340,  341,  342,  343,  344,   -1, \n          346,   -1,  348,  349,  350,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,    0,  363,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   10,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  394,  395, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261,  262, \n          263,  264,  265,  266,  267,  268,  269,  270,  271,  272, \n          273,  274,  275,  276,  277,  278,   -1,  280,  281,   -1, \n          283,  284,  285,  286,  287,  288,  289,  290,  291,  292, \n          293,  294,  295,  296,  297,   59,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,  312, \n          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  328,   -1,   91,   -1,   -1, \n           -1,   -1,  335,  336,  337,   -1,   -1,  340,   -1,  342, \n          343,  344,   -1,  346,   -1,  348,   -1,  350,   -1,  352, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,  360,   -1,  362, \n          363,   10,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  392, \n          393,  394,  395,   -1,   -1,   44,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   58, \n           59,   -1,   -1,   -1,   63,   -1,  280,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,    0,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,  362,  363, \n           -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,  280,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  395,   58,   59,   -1,   61,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  328,   91,   -1,   -1,   -1,   -1, \n           -1,  335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,  362,   -1, \n           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  280,  281,  282,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   58, \n           59,   -1,   61,   -1,   63,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   91,   -1,  333,  334,  335,  336,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n          349,   10,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,  362,  363,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,  395,   -1,   -1,   -1, \n           -1,   -1,   61,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n            0,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, \n           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,  395, \n           -1,   91,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n          349,   44,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,   -1,  363,   58,   59,   -1,   61,   -1, \n           63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n          279,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   91,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328, \n            0,   -1,   -1,   61,   -1,   -1,  335,  336,   -1,   -1, \n           10,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   44,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   58,   59, \n           -1,   61,   -1,   63,   -1,  305,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   91,   -1,  333,  334,  335,  336,   -1,  338,  339, \n           -1,   -1,  342,   10,   -1,  345,   -1,  347,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n            0,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,   -1,   -1,   -1,   -1,  375,   -1,   44,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, \n           -1,   -1,   -1,   -1,   61,  395,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   59, \n           -1,   -1,  305,    0,   91,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   10,  317,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, \n          333,  334,  335,  336,   -1,  338,  339,   -1,   -1,  342, \n           -1,  279,  345,   -1,  347,   -1,  349,   44,  351,   -1, \n          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, \n          363,   58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, \n           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n          328,  271,  395,   -1,   91,   -1,   -1,  335,  336,   -1, \n           -1,  281,  282,   -1,  342,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   58,   59,   -1,   61,   -1,   63, \n           -1,   -1,  279,   -1,   -1,  375,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,  395,   -1,   91,   -1,   -1, \n           -1,  281,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,  328,   -1,    0,   -1,   -1,   -1,   -1,  335,  336, \n           -1,   -1,   -1,   10,   -1,  342,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  342,   -1,  281,  282,   -1,   44,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   58,   59,  363,   61,   -1,   63,   -1,  305,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   91,  395,  333,  334,  335,  336, \n           -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, \n          347,   -1,  349,   10,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,  395,   -1, \n           -1,   -1,   -1,   -1,   61,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   91,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,  395,   -1,   91,  281,  282,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, \n          347,   -1,  349,   44,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,  363,   58,   59,   -1, \n           61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1, \n           -1,   -1,  279,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  328,    0,   -1,   -1,   61,   -1,   -1,  335,  336, \n           -1,   -1,   10,   -1,   -1,  342,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           58,   59,   -1,   -1,   -1,   63,   -1,  305,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   91,   -1,  333,  334,  335,  336,   -1, \n          338,  339,   -1,   -1,  342,   10,   -1,  345,   -1,  347, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,    0,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,  375,   -1,   44, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,   -1,   -1,   -1,   -1,   61,  395,   -1,   -1, \n          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,   59,   -1,   -1,  305,    0,   91,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n           -1,   -1,  333,  334,  335,  336,   -1,  338,  339,   -1, \n           -1,  342,   -1,  279,  345,   -1,  347,   -1,  349,   44, \n          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, \n          361,   -1,  363,   58,   59,   -1,   61,   -1,   63,   -1, \n           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,  328,  271,  395,   -1,   91,   -1,   -1,  335, \n          336,   -1,  280,  281,  282,   -1,  342,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,  362,  363,   58,   59,   -1,   61, \n           -1,   63,   -1,   -1,  279,   -1,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,  395,   -1,   91, \n           -1,   -1,   -1,  281,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,  328,   -1,    0,   -1,   -1,   -1,   -1, \n          335,  336,   -1,   -1,   -1,   10,   -1,  342,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  342,   -1,  281,  282,   -1,   44, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   58,   59,  363,   -1,   -1,   63,   -1, \n          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   91,  395,  333,  334, \n          335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, \n          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n          395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, \n           -1,   -1,   -1,  395,   -1,   91,  281,  282,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, \n          345,   -1,  347,   -1,  349,   44,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   58, \n           59,   -1,   -1,   -1,   63,   -1,   -1,   -1,  306,  307, \n          375,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n          395,   -1,   91,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,    0,   -1,  364,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   58,   59,   -1,   -1,   -1,   63,   -1,  305, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   91,   -1,  333,  334,  335, \n          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,    0,  361,   -1,  363,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,  395, \n           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   59,   -1,   -1,  305,    0,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n          349,   44,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,   -1,  363,   58,   59,   -1,   -1,   -1, \n           63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,  395,   -1,   91,   -1, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   59, \n           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,  395, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,    0,   -1,   -1,   -1,  293,  294,  295, \n          296,  297,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   44,  271,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,  281,  282, \n           -1,   -1,   59,   -1,   -1,   -1,   63,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,  363,   -1,   -1, \n           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,   -1,  395, \n          333,  334,  335,  336,   -1,    0,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   10,  349,   -1,  351,   -1, \n          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, \n          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,  395,   -1,   59,   -1,   -1,   -1,   63,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           -1,  351,    0,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   10,  363,   -1,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  290,  291,  395,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, \n          347,   -1,  349,   44,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,  363,   58,   59,   -1, \n           -1,   -1,   63,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  395,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,    0,   -1,  333,  334, \n          335,  336,   -1,   -1,  339,   -1,   10,  342,   -1,   -1, \n          345,   -1,  347,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   -1,  363,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63, \n          395,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   -1,   44,  342,   -1,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   58,   59,   -1, \n           -1,   -1,   63,   -1,  305,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, \n           -1,   -1,  333,  334,   -1,   -1,   -1,  395,  339,   -1, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1, \n          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, \n          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  375,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  395,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   58,   59,   -1,   -1,   -1,   63, \n           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, \n          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,  375,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, \n          291,  395,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, \n           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1, \n          351,   -1,  353,  354,  355,  356,  357,  358,  359,   -1, \n          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,  395,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   58, \n           59,  305,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, \n          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,    0,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  395,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   59,   -1,   61, \n           -1,   63,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,    0,   -1,   -1,   -1,  305,   -1,   -1, \n           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   91, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   59,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,  375,  267,  268, \n          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,    0, \n          329,  330,   -1,   59,  333,  334,   -1,   -1,   -1,   10, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,  375,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,   -1,  268,  269,   59,  271, \n           61,   -1,   63,   -1,   -1,   -1,  395,   -1,  280,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,    0, \n           -1,  333,  334,  335,  336,  262,  263,  264,   -1,   10, \n          342,  268,  269,   -1,  271,   -1,   -1,  349,   -1,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n          362,  363,   -1,   -1,   -1,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1, \n           61,   -1,   63,  395,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1, \n      };\n   }\n\n   private static final short[] yyCheck3() {\n      return new short[] {\n\n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  342,  262,  263,  264,   -1,   91,   -1,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,  290,  291,   -1,  293,  294,  295,  296,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  395,   -1,   -1,  262,  263, \n          264,   -1,   -1,   44,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  280,   -1,   59,   -1, \n           61,   -1,   63,  342,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1, \n           91,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,    0,   -1,  333, \n          334,  335,  336,   -1,   -1,   -1,  395,   10,  342,   -1, \n           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,  362,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   59,  271,   61,   -1, \n           63,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   91,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1, \n           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           -1,  262,  263,  264,   -1,   -1,   -1,  268,  269,   -1, \n          271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290, \n          291,  395,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,   -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n           -1,   -1,  333,  334,  335,  336,   -1,  338,   -1,   -1, \n           -1,  342,   -1,   -1,   44,   -1,   -1,   -1,  349,   -1, \n          351,   -1,  353,  354,  355,  356,  357,  358,  359,   59, \n          361,   61,  363,   63,   -1,   -1,   -1,   -1,   -1,  262, \n          263,  264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,  395,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,  317,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,   -1,   -1, \n          333,  334,  335,  336,   -1,  338,   -1,   -1,   -1,  342, \n           -1,   -1,   44,   -1,   -1,   -1,  349,   -1,  351,   -1, \n          353,  354,  355,  356,  357,  358,  359,   59,  361,   61, \n          363,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, \n           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   91, \n          326,  327,  395,   -1,   -1,  331,  332,  333,  334,   -1, \n           -1,    0,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1, \n           -1,   10,  348,  349,   -1,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,   -1,   -1,  364,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268,  269, \n           59,  271,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,    0,   -1,  333,  334,  335,  336,   -1,  338,   -1, \n           -1,   10,  342,   -1,   -1,   -1,   -1,   -1,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,   44,  268,  269,   -1,  271, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           59,   -1,   61,   -1,   63,  395,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,  338,   -1,   -1,   -1, \n          342,   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           -1,  363,   -1,  262,  263,  264,   -1,   -1,   -1,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  290,  291,  395,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, \n           -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1,   -1, \n          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   59,  361,   61,  363,   63,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,  268, \n          269,   -1,  271,   91,   -1,   -1,  395,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,   -1,  338, \n           -1,   -1,   -1,  342,   -1,   -1,   44,   -1,   -1,   -1, \n          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   59,  361,   61,  363,   63,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  306,  307,   -1,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   91,  326,  327,  395,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,    0,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,   10,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   44, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n          338,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,    0,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1, \n          268,  269,   -1,  271,   -1,   -1,   -1,  395,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n          338,   -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,   -1,  363,   -1,  262,  263,  264, \n           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,  395,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, \n           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   10,   -1,   -1,   -1,   91,   -1,   -1, \n          395,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,    0,   59,   -1,   -1,   -1,   -1,  305,   -1,   -1, \n           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317, \n          318,  319,  320,  321,   -1,   -1,  324,  325,  326,  327, \n           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, \n           -1,  339,   -1,   -1,  342,   44,   -1,  345,   -1,  347, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,   -1, \n           59,  359,   61,  361,   63,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   91,   -1,   -1,   -1,   -1,  395,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   44,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   58,   59,   -1,   -1,   -1, \n           63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,   -1,  262,  263,  264,  342,   -1, \n          267,  268,  269,   -1,  271,  349,    0,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   10,  361,   -1,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           44,  395,   -1,  262,  263,  264,   -1,   -1,   -1,  268, \n          269,   -1,  271,   -1,   58,   59,   -1,   -1,   -1,   63, \n           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,  395,   -1, \n           -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1, \n          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,    0,  363,   -1,   -1,   -1,   -1,  262, \n          263,  264,   -1,   10,  267,  268,  269,   -1,  271,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   -1,   -1,  395,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   59,   10,   -1,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, \n          333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   -1,   -1,   44,  351,   -1, \n           -1,   -1,  355,  356,  357,  358,  359,   -1,  361,   -1, \n          363,   -1,   59,   -1,   61,   -1,   63,   -1,  262,  263, \n          264,   -1,  375,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,  395,   -1,   91,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, \n          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,   -1,   44,  351,   -1,   -1, \n           -1,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,   -1,   -1,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n           -1,  268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1, \n           -1,   -1,   63,  290,  291,  342,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  395,   -1, \n           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n           -1,  329,  330,   58,   59,  333,  334,   -1,   63,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,   -1,   -1,  351,   -1,   -1,   -1,   -1,   -1,  357, \n          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,    0,   -1,   -1,   -1,   -1,  395,   -1,   -1, \n          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, \n           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, \n          351,   -1,   -1,   -1,   -1,   -1,  357,  358,  359,   -1, \n          361,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   44,  271,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   58, \n           59,   -1,   -1,   -1,   63,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  339,   -1,   -1,  342,    0,   -1, \n          345,   -1,  347,   -1,   -1,   -1,  351,   -1,   10,   -1, \n           -1,   -1,  357,  358,  359,   -1,  361,   -1,  363,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          375,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   44,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n          395,   -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1, \n           -1,   63,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n           -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  357, \n          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,  375,  267,  268, \n          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  281,  282,   10,   -1,   -1,  395,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, \n          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  357,  358, \n          359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,    0,   -1,   -1,   -1,   -1,  395,   -1,   -1,  281, \n          282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,   -1,  329,  330,   58, \n           59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  357,  358,   -1,   -1,   -1, \n           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   58,   59,   -1,   -1, \n           -1,   63,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,    0,   -1,   -1,  305, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           44,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  357,  358,   -1,   58,   59,   -1,  363,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,  395, \n           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1,   -1, \n          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          262,  263,  264,   -1,  363,  267,  268,  269,   -1,  271, \n           -1,    0,   -1,   -1,   -1,   -1,  375,   -1,   -1,  281, \n          282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,  395,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330,   58, \n           59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,    0, \n           -1,  363,   -1,   -1,   -1,   -1,   -1,  281,  282,   10, \n           -1,   -1,   -1,  375,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,   -1,  395,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, \n          324,  325,   -1,   -1,   -1,  329,  330,   58,   59,   -1, \n           -1,   -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,    0,   -1,  363, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1,   -1, \n           -1,  375,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n           -1,  395,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,  324,  325, \n           -1,   -1,   -1,  329,  330,   58,   59,   -1,   -1,   -1, \n           63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,  363,  267,  268, \n          269,   -1,  271,   -1,    0,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,  395, \n           -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1,   -1, \n          329,  330,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,    0,   -1,  363,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   10,   -1,   -1,   -1,  375,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  305,   -1,  395,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330, \n           58,   59,   -1,   -1,   -1,   63,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, \n            0,   -1,  363,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           10,   -1,   -1,   -1,  375,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  305,   -1,  395,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1, \n           -1,  324,  325,   -1,   -1,   -1,  329,  330,   58,   59, \n           -1,   -1,   -1,   63,   -1,   -1,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,    0, \n          363,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   10, \n           -1,   -1,  375,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,  395,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,  325, \n           -1,   -1,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,   -1,  262,  263,  264,   -1,    0,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,  363,   10,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,  395, \n           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   44,   -1,   -1,  375,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   58,   59, \n           -1,   -1,   -1,   -1,   -1,  305,   -1,  395,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   44,   -1,   -1,  375,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   59,   -1,   -1, \n           -1,   -1,   -1,   -1,  305,  395,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   10, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   44,  375,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   58,   59,   -1, \n           -1,   -1,   -1,  305,  395,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,    0,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   10,   -1,  339,   -1,   -1, \n          342,  281,  282,  345,   -1,  347,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,  363,    0,   -1,   -1,  305,   -1,   -1,   -1,   44, \n           -1,   -1,   10,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  395,   -1,   -1,   -1,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,   59,   -1,  363,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,  375,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n            0,   -1,   -1,  305,   -1,  395,   -1,   -1,   -1,   -1, \n           10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   59, \n          271,  363,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   10,  375,   -1,   -1,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  395,  305,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,  339,   10, \n           -1,  342,   -1,   -1,  345,   -1,  347,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, \n           -1,   -1,  363,   -1,   -1,   -1,  281,  282,   -1,   -1, \n           -1,   -1,   59,   -1,  375,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,  262,  263,  264,   -1,   59,  267, \n          268,  269,   -1,  271,  395,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, \n          345,   -1,  347,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n          395,  271,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  342,  281,  282,  345,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,  363,   -1,  262,  263,  264,   10,   -1, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,  262,  263,  264,  281,  282,   -1,  268,  269,   -1, \n          271,   -1,   -1,  290,  291,  395,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,  342,   -1,   -1,  345,   -1,   -1, \n           -1,   -1,  293,  294,  295,  296,  297,   59,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  345,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  395,   -1,   -1, \n           -1,  342,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n           -1,   -1,  363,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,  395,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,  395,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,  350,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,  394,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   91, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,  341, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   59,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   10,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   59,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n          362,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   10,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          392,  393,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274, \n      };\n   }\n\n   private static final short[] yyCheck4() {\n      return new short[] {\n\n          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, \n           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,  256,  257,  258,  259,  260,  261,  392,  393,  264, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, \n           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,   -1, \n          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   10,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,  363,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,  260,  261,  392,  393,   -1,  265, \n          266,   -1,   10,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,  342,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n          257,  258,  259,   -1,  261,   -1,  392,  393,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   44,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,   -1,  392,  393,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   44,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  392,  393,   -1,   -1,  257,  258, \n          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,   -1,   -1,  316,   59,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,   -1,  392,  393,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,   -1,   -1,  316,   59,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,   -1,   -1,  257,  258,  259,  260, \n          261,   -1,  392,  393,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, \n           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,   -1,   -1,  257,  258,  259,  260,  261, \n           -1,  392,  393,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,  256,  257,  258,  259,  260,  261,   -1, \n          392,  393,  265,  266,   -1,   -1,   -1,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,  298,  299,  300,  301,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, \n          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, \n           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   -1,  256,  257,  258,  259,  260,  261,   -1,  392, \n          393,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n           -1,  256,  257,  258,  259,  260,  261,   -1,  392,  393, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, \n           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,   -1,  392,  393,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,   -1,   -1,  350,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n           -1,  257,  258,  259,  260,  261,  392,  393,  394,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,  300,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n          257,  258,  259,  260,  261,   -1,  392,  393,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,   -1,  392,  393,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,  341,   -1,  343,  344,   -1,  346,   -1, \n           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,   -1,   -1,  257,  258, \n          259,   -1,  261,   -1,  392,  393,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,   -1,  392,  393,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, \n           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,   -1,   -1,  257,  258,  259,   -1, \n          261,   -1,  392,  393,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, \n           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n           -1,  392,  393,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1, \n          392,  393,  265,  266,   -1,   -1,   -1,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, \n          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, \n           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1,  392, \n          393,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,  341,   -1,  343, \n          344,   -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n           -1,   -1,  257,  258,  259,   -1,  261,   -1,  392,  393, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, \n           -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,   -1,  392,  393,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,   -1,   -1, \n          257,  258,  259,   -1,  261,   -1,  392,  393,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,   -1,  392,  393,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,   -1,   -1,  257,  258, \n          259,   -1,  261,   -1,  392,  393,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  333,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,   -1,  392,  393,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,   -1,   -1,  257,  258,  259,   -1, \n          261,   -1,  392,  393,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n           -1,  392,  393,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1, \n          392,  393,  265,  266,   -1,   -1,   -1,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, \n          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1,  392, \n          393,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n           -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n           -1,   -1,  257,  258,  259,   -1,  261,   -1,  392,  393, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,   -1, \n           -1,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344, \n           -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  392,  393,  257, \n          258,  259,  260,  261,  262,  263,  264,  265,  266,  267, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,  279,  280,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n          298,  299,  300,  301,  302,  303,  304,   -1,  306,  307, \n          308,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,   -1,   -1,  364,  365,  257,  258, \n          259,  260,  261,  262,  263,  264,  265,  266,  267,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n          279,  280,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,  298, \n          299,  300,  301,  302,  303,  304,   -1,  306,  307,   -1, \n           -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317,  318, \n          319,  320,  321,  322,  323,   -1,   -1,  326,  327,   -1, \n           -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  348, \n          349,   -1,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,   -1,   -1,  364,  365,  257,  258,  259, \n          260,  261,  262,  263,  264,  265,  266,  267,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,  279, \n          280,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,  298,  299, \n          300,  301,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,   -1,  314,  315,   -1,  317,  318,  319, \n          320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, \n           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, \n           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,   -1,   -1,  364,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,  267,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,  279,  280,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,  298,  299,  300,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,  257,  258,  259,  260,  261,  262,  263, \n          264,  265,  266,  267,  268,  269,  270,  271,  272,  273, \n          274,  275,  276,  277,  278,  279,  280,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,  290,  291,  292,  293, \n          294,  295,  296,  297,  298,  299,  300,  301,  302,  303, \n          304,   -1,  306,  307,   -1,   -1,  310,   -1,   -1,   -1, \n          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, \n           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, \n          334,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, \n          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          306,  307,  364,   -1,  310,   -1,   -1,   -1,  314,  315, \n           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, \n          326,  327,   -1,   -1,   -1,  331,  332,  333,  334,   -1, \n           -1,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1, \n           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,  306,  307,  364,   -1, \n          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, \n          320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, \n           -1,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, \n           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  306,  307,  364,   -1,  310,   -1,   -1,   -1, \n          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, \n           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, \n          334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, \n          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364, \n      };\n   }\n\n}\n"
            }
        ],
        "SLOC": "4946",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n *\n * Copyright (C) 2013-2017 The JRuby Team (jruby@jruby.org)\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\npackage org.jruby.parser;\n\npublic class YyTables {\n   private static short[] combine(short[] t1, short[] t2, \n                                  short[] t3, short[] t4) {\n      short[] t = new short[t1.length + t2.length + t3.length + t4.length];\n      int index = 0;\n      System.arraycopy(t1, 0, t, index, t1.length);\n      index += t1.length;\n      System.arraycopy(t2, 0, t, index, t2.length);\n      index += t2.length;\n      System.arraycopy(t3, 0, t, index, t3.length);\n      index += t3.length;\n      System.arraycopy(t4, 0, t, index, t4.length);\n      return t;\n   }\n\n   public static final short[] yyTable() {\n      return combine(yyTable1(), yyTable2(), yyTable3(), yyTable4());\n   }\n\n   public static final short[] yyCheck() {\n      return combine(yyCheck1(), yyCheck2(), yyCheck3(), yyCheck4());\n   }\n   private static final short[] yyTable1() {\n      return new short[] {\n\n          292,  479,  295,   88,   88,  402,  288,  687,  405,  361, \n          228,  228,  228,  294,  205,  262,  228,  228,  702,  701, \n          192,  681,  701,  341,  498,  635,  111,  412,  518,  238, \n          289,  207,  520,  455,  205,  563,  648,  636,  648,  637, \n          226,  226,  226,  747,  749,  649,   88,  339,  277,  283, \n          337,  207,  228,  819,  584,  276,  276,  702,  637,    8, \n          261,  938,  191,  191,  280,  280,  347,  828,  359,    8, \n          648,  415,  279,  279,  648,  553,  754,  866,  393,  311, \n          232,  235,  416,  191,   83,  648,  313,  648,  584,   83, \n           83,  234,  417,  617,  291,  261,  318,  322,  386,  839, \n          576,  337,  359,  584,  317, 1013,  284,  864,  191,  228, \n          434,  434,  534,   74,  537,  649,  418,  506,    8,  659, \n          859,  961,  439,  238,  553,   93,   93,  393,  607,  287, \n          440,  379,  568, 1064,  576,   83,  583,  263,  301,  594, \n          233,  420,  677,  287,  234,  451,  261,   86,  276,  576, \n          360,   61,   62,   63,   64,  261,  261,  280,  691,  568, \n          613,   97,  621,   73,   72,  279,  627,  291,   93,   86, \n          583,  607,  338,  594,  302,  909,  399,  607,  414,  467, \n          628,  275,  628,  277,  360,  583,   72,  628,  594,  632, \n          860, 1064,  545,  233,  346,  414,  651,  546,   53,  572, \n         1022,  456,  568,  276,   75,  515,  316,  320,  479,  613, \n          582,  621,   88, 1013,   71,  938,  501,  723,  367,  368, \n          607,  384,  643,  338,  462,  399,   88,  694,  563,  288, \n          551,  552,  435,  435,  602,  534,  387,  382,  296,  514, \n          228,  228,  385,  346,  582,  568,  702,  648,  380,  701, \n          701,  297,  417,  238,  526,   75,  383,  637,  657,  582, \n          633,  694,  658,  522,  381,  352,  553,  652,  602,  592, \n          226,  226,  648,  508,  637,  971,  866,  643,  515,  316, \n          353,  568,  648,  602,  509,  228,  694,  228,  228,  814, \n          811,  228,  306,  228,  568,  643,  648,   88,   88,   96, \n           96,  730,  864,  592,   88,  633,   88,  652,   81,  460, \n          461,  264,  517,  316,  846,   88,  356,  480,  592,  483, \n           79,  489,  637,  491,  276,  238,  276,  276,  316,  234, \n          568,  648,  357,  280,   93,  280,  730,  337,  942,  311, \n          576,  279,   96,  279,  946,  948,   76,  950,   93,  951, \n          798,  885,  872,   83,  463,  799,  714,  892,  637,   81, \n          316,  396,  684,  228,  228,  228,  228,   88,  228,  228, \n          553,   79,  807,  409,  576,  930,  952,  649,  233,  629, \n          649,  629,  261,   83,  864,  647,  629,  623,  635,  576, \n          504,  648,  572,  226,  226,  226,  226,   76,  584,  585, \n          636,  512,  228,  584,   72,  648,  648,  553,  631,  645, \n          631,   88,  337,  648,  228,  631,   83,   88,  313,   93, \n           93,  832,    8,  607,  694,  290,   93,  393,   93,  837, \n          386,  228,  579,  580,  581,  582,  623,   93,  228,  653, \n          553,  276,  864,  835,  311,   74,  485, 1093,   88,  576, \n          407,  228,  623,  583,  522,   97,   88,  261,  622,  338, \n          607,  656,  622,  379, 1026,  107,  642,  228,  666, 1030, \n          642,  702,  306,   75,  408,  701,  899,  413,  686,  686, \n          291,  709,  563,  825,  563,  583,  623,  442,  594,   93, \n          276,  568, 1001,  607,  847,   73,  414,  228, 1050, 1052, \n         1053, 1054,  205,   83,  732,  582,  276,  622,   96,  733, \n           88,  623,  316,  275,  682,  277,  275,  445,  277,  207, \n          607,  847,   96,  622,  700,  399,  228,  710,  337,  602, \n          634,  457,  634,   93,  338,  276,   75,  634,  276,   93, \n          628,  628,  582,  613,  499,  621,  628,  628,  785,  881, \n          883,  191,  306,  384,  832,  888,  890,  622,  452,  628, \n          485,  874, 1095,  719,  592,  276,  602, 1087,  387,  382, \n           93,  522,  726,  261,  385,  582,  453,   81,   93,  648, \n          380,  765,  622,  602,  551,  552,  446,   84,  383,   79, \n          572,  772,  572,   96,   96,  875,  381,  316,  769,  602, \n           96,  592,   96,  759,  316,  316,  775,  812,  760,  485, \n          623,   96,  775,  568,  454,   76,  822,  459,  592,  490, \n          882,  884,  770,  740,  290,  485,  889,  891,  316,  468, \n          776,  648,   93,  291,  592,  576,  779,   77,   84,  475, \n           81,  510,  511,  103,  103,  337,  572,  838,  572,  623, \n          338,  772,   79,  528,  529,  806,  401,  306,   82,  628, \n          531,  648,  648,   96,  228,  772,   88, 1048,  970,  492, \n          882,  884,  576,  889,  891,  769,  205,  464,   76,  775, \n          648,  811,  805,  457,  485,   80,  103,  474,   77,  790, \n          261,  528,  529,  207,  673,  450,  228,  772,  531,  648, \n          126,  736,  680,  276,  635,  576,  635,   96,  478,   82, \n          369,  635,   78,   96,  855,  894,   88,  996,  522,  965, \n          622,  337,  502,  998,  191,  191,  226,  642,  503,  507, \n          454,   97, 1071,  513,  648,  116,   80,  493,  494,  629, \n          629,  374,  375,   96,   96,  629,  629,  519,  648,  316, \n          521,  648,   96,  527,  833,  646,  316,  316,  629,  234, \n          367,  368,  623,   78,  288,  829,  261,  338,  631,  631, \n          623,  648,  654,  772,  631,  631,  390,  391,  522,  454, \n          778,  660,   88,  648,  116,  228,  778,  631,   93,  670, \n          521,  572,  337,  824,  672,  228,   88,  683,  319,  674, \n          648,  694,   83,  496,   88,  711,   96,  704,  233,  703, \n          705,  906,   88,  453,  453,  228,  522,  707,  708,  453, \n          648,  706,  485,  712,  276,  226,   88,   88,   88,  810, \n          813,  715,  813,  720,  741,  716,  904,  261,   93,  813, \n          742,  622,  743,  338,  746,  226,  748,  686,  862,  855, \n          865,  845,  103,  778,  750,  752,   84,  753,  629,  648, \n           88,   88,  756,  999,  907,  761,  103,  965,  895,  763, \n          850,  965,  766,  772,   97,  398,   35,  911,   88,  913, \n           88,  767,  399,  404,  922,  648,   35,  631,  736,  851, \n          634,  634,  768,  398,  773,  774,  634,  634,  935,  781, \n          399,  400,  786,  788,   93,  791,   77,   88,  648,  634, \n         1041,  802,  811,  817,  338, 1008,  993,  818,   93,   84, \n           88,  878,  820,  878,  821,  974,   93,   82,  855,  965, \n          823,  978,  398,  848,   93,   35,  852,  103,  103,  399, \n          449,  873,  268,  485,  103,  880,  103,  886,   93,   93, \n           93,  887,  268,  648,   80,  103,  905,  910,  648,  915, \n          648,  261,   96,  528,  529, 1034,  116,  919,  917,   77, \n          531,  921,  789,  924,  923,  536,  925,  953,  115,  931, \n           88,   78,   93,   93, 1007, 1049,  263,  454,  856,  932, \n           82,  648,  116,  867,  648,  801,  936,   88,  939,   88, \n           93,  268,   93,  648,  736,   88,  736,  103,  648,  634, \n          261,  941,   96,  940,  945,  522,  446,   80,  254,  469, \n          470,  471,  522,  522,  473,  648,  623,  521,  254,   93, \n          648,  947,  949,  115,  521,  521, 1067,  975,  994,  834, \n          977,  228,   93,  648,   78,  772,   88,  836,  103, 1017, \n          103,  103,  648,  522, 1002,  103, 1046,  103,  918,  454, \n          522,  522,  254,  648,  635,  635,  869, 1003,  853,  869, \n          635,  635,  927,  928,  929, 1006,  254,  254,   96, 1014, \n          276,  261,  115,  635, 1015, 1020,  813,  435,  103, 1023, \n          736, 1009,   96, 1025, 1027, 1078,  103,  622, 1029, 1035, \n           96, 1036,   93, 1038, 1047,  117,  943,  944,   96, 1051, \n         1057,  648,  648,  648,  521, 1065,  275,  275,  648,   93, \n          955,   93,   96,   96,   96, 1058,  967,   93,  800, 1062, \n         1068, 1076,  540,  107,  541,  542,  543,  544,   35,   35, \n           35,   98,  298,  300,   35,   35, 1081,   35,  275,  275, \n          103,  340,  342, 1083,  117, 1085,   96,   96,  435,  641, \n          736,  369,  736,  650, 1088, 1094,  997,  107,   93,   35, \n           35,   35,   35,   35,   96, 1101,   96,  540,  934,  541, \n          542,  543,  544,  635,  107,  635,  523, 1097,  523,  636, \n         1016,  960, 1018,  384, 1019,  648,  648,  386,  387,  485, \n          637,  736,  813,   96,  268,  268,  268,  641,  641,  275, \n          268,  268,  995,  268,  316,  637,   96,  466,   35,  528, \n          529,  530,  643,  369,  697,  699,  531,  641,  319,  637, \n          637,  358,  268,  268,  472,  268,  268,  268,  268,   35, \n          976,  350,  648, 1042,  758, 1043,  436,  717,  648, 1075, \n          194, 1044,  648,  648,  879,  384,  648,  648,  908,  386, \n          387,  388,  389,   35,  699, 1055,  912,  319,   53,  780, \n          979,  863, 1063,  103,  956, 1060,   96,  893,   53,  868, \n          254,  254,  254,  792,  268,  254,  254,  254, 1059,  254, \n          115,  609, 1077,   96,  265,   96, 1080, 1074,  103,  254, \n          254,   96,  849,  403, 1079,  268,  103,  103,  254,  254, \n            0,  254,  254,  254,  254,  254,    0,    0,  528,  529, \n          533,  755,    0,  254,  103,  531,    0,   53, 1096,  268, \n         1098,    0,    0, 1099,   16,  696,  960,    0,    0,  960, \n          966,  869,   96,  960,    0,  440, 1105,    0,  528,  529, \n          533,  521,    0,    0,  440,  531,  103,  254,  521,  521, \n          254,    0,  117,  254,  110,  254,    0,    0,    0,  973, \n          275,  275,  275,  342,    0,  275,  117,  528,  529,  535, \n          242,  254,    0,   16,  531,  275,  787,  275,  275,    0, \n          242,  450,    0,  254,    0,    0,  497,  960,    0,  960, \n            0,  960,  107,    0,  960,  254,    0,    0,  103,  103, \n            0,    0,    0,  110,  103,  103,    0,  960,    0,    0, \n          808,    0,  103,  523,  242,  523,    0,  103,    0,    0, \n          523,  523,  523,  523,    0,    0,  103,    0,  242,  242, \n            0,    0, 1037,  242,  103,  516,  830,    0,  831,  546, \n            0,  316,  103,    0,  398,  699,  319,    0,  316,  316, \n          113,  399,  465,    0,  623,  107,  103,  103,  103,    0, \n          586,  587,  588,  589,  590,    0,    0,  591,  592,  593, \n          594,  595,  596,  597,  598,  599,  600,  601,  602,  603, \n          604,    0,    0,  605,  606,  607,  608,    0,  546,    0, \n          103,  103,  275,    0,  624,    0,  871,    0,  630,  113, \n          637,    0,    0,    0,  275,  630,  525,    0,  103,    0, \n          103,  663,    0,   15,    0,    0,    0,  103,    0,    0, \n           53,   53,   53,  122,  440,   53,   53,   53,  903,   53, \n            0,  519,  103,  440,    0,    0,   91,  103,    0,   53, \n            0,  275,    0,  630,  630,  630,    0,    0,  275,    0, \n          103,   53,   53,   53,   53,   53, 1010,  275,  541,  542, \n          543,  544,   15,  267,  926,  275,  275,    0,    0,  275, \n           91,    0,  440,  126,    0,    0,   16,   16,   16,  440, \n          440,  440,   16,   16,    0,   16,    0,   91,  440,  440, \n          267,  267,    0,  713,  630,  103,  267,  267,  267,  267, \n           53,    0,    0,    0,  784,  275,  440,    0,  275,    0, \n          103,  110,  528,  529,  729,  440,  275,  516,  398,  531, \n            0,   53,  126,    0,  619,  399,  500,  103,    0,  103, \n            0,    0,  242,  242,  242,  103,    0,  242,  242,  242, \n            0,  242,  972,    0,    0,   53,    0,   94,    0,  267, \n            0,  242,  242,    0,  316,    0,   16, 1040,  267,  267, \n          242,  242,  275,  242,  242,  242,  242,  242,    0,  663, \n            0,  319,  516,    0,    0,  242,  103,   16,    0,  516, \n          516,   94,    0,    0,    0,  619,    0,  242,  242,  242, \n          242,  242,    0,    0,  242,  242,  242,  242,   94,  242, \n          242,   16,    0,  242,  242,    0,  619,  113,    0,  242, \n            0,  118,  242,    0,    0,  242,   99,  242,    0,  242, \n          620,  242,    0,  242,  242,  242,  242,  275,  519,  242, \n            0,  242,    0,  242,    0,  546,    0,  546,  546,  546, \n          546,  546,    0,  398,    0,  242,  546,    0,  398,  241, \n          399,  524,    0,    0,  275,  399,  662,  242,    0,  241, \n          118,  275,    0,  524,    0,   15,   15,   15,  519,  546, \n            0,   15,   15,    0,   15,  519,  519,  546,  546,  546, \n          546,  620,  841,  842,    0,  843,    0,  275,    0,  275, \n            0,  122,  524,  241,    0,    0,  275,  275,    0,    0, \n          268,    0,  620,    0,    0,   91,  619,  241,  241,  528, \n          529,  757,  241,    0,    0,  546,  531,    0,  267,  267, \n          267,  267,    0,  267,  487,  487,  487,  268,  268,    0, \n          126,  487,    0,  268,  268,  268,  268,    0,    0,    0, \n          122,  398,  101,    0,  267,   15,    0,  275,  399,  783, \n           59,   60,    0,    0,  516,    0,    0,    0,  630,  630, \n            0,  516,  516,    0,  630,  630,   15,  619,   91,    0, \n            0,    0,  440,  896,    0,  275,    0,  630,    0,  275, \n          362,  363,  364,  365,  366,  267,  268,    0,  619,  526, \n           15,  316,    0,    0,  398,  268,  268,    0,  316,  316, \n            0,  399, 1039,  100,  623,    0,  398,    0,  630,  630, \n            0,  630,  630,  399, 1066,  275,   94,  620,  267,  267, \n          267,  267,  267,    0,    0,  267,  267,  267,  267,  267, \n          267,  267,  267,  267,  267,  267,  267,  267,  267,  269, \n            0,  267,  267,  267,  267,    0,    0,    0,    0,  269, \n          525,  118,  267,  540,    0,  541,  542,  543,  544,    0, \n          267,    0,    0,    0,    0,  519,    0,    0,  118,    0, \n            0,  968,  519,  519,    0,    0,    0,  969,  620,   94, \n            0,    0,    0,  269,    0,    0,    0,  734,    0,    0, \n            0,  102,    0,  275,    0,  735,    0,  269,  269,  620, \n          524,  267,  267,  267,    0,    0,  267,  524,  524,    0, \n            0,  241,  241,  241,    0,  969,  241,  241,  241,    0, \n          241,  291,  275,  267,  267,    0,    0,  267,    0,  524, \n          241,  241,    0,    0,    0,    0,  524,  524,  527,  241, \n          241,    0,  241,  241,  241,  241,  241,    0,  122,    0, \n           93,  267,  267,    0,  241,  268,  268,  268,  268,    0, \n          268,  440,    0,  267,    0,    0,  267,    0,    0,    0, \n          120,    0,    0,  241,  241,    0,  267,  120,  241,  241, \n            0,  268,    0,    0,    0,  440,    0,    0,  241,    0, \n            0,  241,    0,    0,  241,  440,  241,  518,  540,    0, \n          541,  542,  543,  544,    0,    0,    0,    0,    0,  440, \n            0,    0,  241,    0,    0,    0,  440,  440,    0,  120, \n          267,    0,  268,    0,  241,    0,  526,    0,    0,  103, \n            0,  275,  734,  526,  526,    0,  241,    0,  119,    0, \n          937,  119,    0,  440,  440,    0,  122,    0,  440,    0, \n            0,  526,    0,    0,    0,  268,  268,  268,  268,  268, \n          121,    0,  268,  268,  268,  268,  268,  268,  268,  268, \n          268,  268,  268,  268,  268,  268,  440,    0,  268,  268, \n          268,  268,    0,    0,    0,  267,    0,  525,    0,  268, \n          119,  105,    0,  267,  525,  525,    0,  268,    0,    0, \n            0,  269,  269,  269,    0,    0,  269,  269,  269,  121, \n          269,    0,   97,    0,   96,    0,    0,    0,    0,  267, \n          269,  269,  525,   92,    0,  105,  121,    0,    0,  269, \n          269,    0,  269,  269,  269,  269,  269,    0,  268,  268, \n          268,  527,  105,  268,  269,  267,   97,  267,   96,    0, \n            0,    0,    0,    0,  267,  267,    0,    0,    0,    0, \n          268,  268,    0,   97,  268,   96,    0,    0,    0,  267, \n          517,    0,  626,    0,    0,  527,    0,    0,  269,    0, \n            0,  269,  527,  527,  269,  112,  269,    0,  268,  268, \n            0,   95,    0,  522,    0,  521,   24,    0,    0,    0, \n          268,    0,  269,  268,    0,  267,   24,    0,    0,  516, \n            0,    0,    0,  268,  269,  206,    0,  540,    0,  541, \n          542,  543,  544,  545,    0,    0,  269,  120,  546,    0, \n            0,  267,    0,    0,  518,    0,    0,  267,  520,    0, \n          267,  518,  518,  516,    0,  109,    0,  440,  440,  440, \n          519,  547,  112,  440,  440,   24,  440,  268,  516,  549, \n          550,  551,  552,    0,  206,  440,  267,  267,    0,  267, \n          267,    0,    0,  267,    0,  440,  440,    0,  440,  440, \n          440,  440,  440,    0,  519,    0,    0,    0,  526,    0, \n          516,    0,  306,    0,  870,  526,  526,  553,  119,  519, \n            0,  112,  440,  440,  440,  440,  440,  440,  440,  440, \n          440,  440,  440,  440,  440,  440,   91,  121,  440,  440, \n          440,  440,  268,    0,    0,    0,    0,  440,    0,  267, \n          268,  519,    0,  518,  440,    0,  440,    0,  440,  440, \n          440,  440,  440,  440,  440,    0,  440,  440,  440,    0, \n            0,  267,  108,    0,    0,    0,  268,    0,  111,  525, \n          105,  626,    0,  516,  267,    0,  525,  525,    0,    0, \n            0,    0,  440,  267,    0,    0,    0,    0,  527,    0, \n          267,   97,  268,   96,  268,  527,  527,    0,    0,    0, \n          516,  268,  268,  540,    0,  541,  542,  543,  544,  317, \n          516,    0,    0,    0,    0,    0,  268,  517,    0,  626, \n            0,    0,    0,  267,  517,  517,  626,  626,    0,  963, \n            0,    0,  622,  105,    0,    0,  114,  734,    0,    0, \n          522,    0,  521,    0,  516,    0,    0,  522,  522,  521, \n          521,    0,  268,  626,   97,    0,   96,    0,  516,  516, \n            0,  110,    0,  516,    0,    0,    0,    0,   24,   24, \n           24,    0,    0,    0,   24,   24,    0,   24,  268,    0, \n            0,    0,    0,    0,  268,  520,    0,  268,    0,  619, \n          128,  516,  520,  520,  267,    0,    0,    0,    0,   24, \n           24,   24,   24,   24,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  268,  268,    0,  268,  268,    0,  112, \n          268,  206,    0,  206,  206,  206,  206,  206,    0,    0, \n          620,  519,  206,    0,    0,    0,    0,  516,    0,  306, \n            0,  519,    0,  522,  516,  516,  306,  306,   24,    0, \n          619,  522,    0,    0,    0,  206,  206,    0,    0,    0, \n            0,  110,  619,  206,  206,  206,  206,    0,  516,   24, \n            0,  619,    0,    0,  963,  519,  268,  963,  519, 1061, \n          518,  963,    0,    0,    0,  519,  519,  518,  518,  519, \n          519,  620,  113,   24,  519,    0,    0,  127,  268,    0, \n            0,  206,    0,    0,    0,    0,    0,    0,    0,  519, \n          516,  268,  620,    0,    0,    0,    0,  516,  516,    0, \n          268,    0,  519,  619,    0,    0,    0,  268,    0,    0, \n            0,    0,    0,    0,    0,  963,    0,  963,    0,  963, \n            0,    0,  963,    0,  619,    0,  317,    0,    0,    0, \n            0,  199,    0,  317,  317,  963,    0,  619,  619,  619, \n          268,  619,  516,  516,  516,  619,  619,  516,  516,  516, \n          619,  516,  619,  619,  619,  619,  619,  619,  619,    0, \n          619,  516,  516,  619,  619,  619,  619,  619,  619,  619, \n          516,  516,  619,  516,  516,  516,  516,  516,    0,  619, \n          199,    0,  619,  619,  619,  516,  619,  619,  619,  619, \n          619,  619,  619,  619,  619,  619,  619,  516,  516,  516, \n          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, \n          516,  268,    0,  516,  516,  516,  516,  619,  528,  516, \n          619,  619,  516,  619,  619,  516,  619,  516,  619,  516, \n          619,  516,  619,  516,  516,  516,  516,  516,  516,  516, \n          619,  516,  619,  516,    0,  619,  619,  619,  619,  619, \n          619,    0,    0,    0,  619,  516,  619,  619,    0,  619, \n          619,  619,  619,    0,  619,  619,  619,  516,  620,  620, \n          620,    0,  620,  519,  519,  519,  620,  620,  519,  519, \n          519,  620,  519,  620,  620,  620,  620,  620,  620,  620, \n            0,  620,  519,  519,  620,  620,  620,  620,  620,  620, \n          620,  519,  519,  620,  519,  519,  519,  519,  519,    0, \n          620,    0,    0,  620,  620,  620,  519,  620,  620,  620, \n          620,  620,  620,  620,  620,  620,  620,  620,  519,  519, \n          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, \n          519,  519,  964,    0,  519,  519,  519,  519,  620,  531, \n          519,  620,  620,  519,  620,  620,  519,  620,  519,  620, \n          519,  620,  519,  620,  519,  519,  519,  519,  519,  519, \n          519,  620,  519,  620,  519,    0,  620,  620,  620,  620, \n          620,  620,    0,    0,  626,  620,  519,  620,  620,    0, \n          620,  620,  620,  620,  626,  620,  620,  620,  519,    0, \n            0, 1024,  635,  635,  635, 1028,    0,    0,  635,  635, \n            0,  635,    0,  636,  636,  636,    0,    0,    0,  636, \n          636,    0,  636,    0,    0,    0,    0,  199,  626,  199, \n          199,  199,  199,  199,    0,    0,    0,    0,  199,    0, \n            0,    0,  626,  626,    0,  124,    0,  626,    0,  521, \n            0,    0,    0,    0,    0,    0,    0,  521,    0,    0, \n            0,  199,  199,    0,    0,    0,    0,    0,    0,  199, \n          199,  199,  199,    0,    0,  626,    0,    0,    0,    0, \n            0,    0,  635,    0,    0,    0,    0,  964,    0,    0, \n          964,    0,  964,  636,  964,    0,  369,    0,    0,    0, \n            0, 1082,    0,  635, 1084, 1086,    0,  199, 1089, 1090, \n            0,    0,  382,  383,  636,  622,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  622,    0,  635,  384,    0, \n          385,    0,  386,  387,  388,  389,    0,    0,  636,    0, \n            0,    0, 1100, 1102, 1103, 1104,    0,    0,  964,    0, \n          964, 1106,  964,    0,    0,  964,    0,    0,  540,  622, \n          541,  542,  543,  544,  545,    0,    0,    0,  964,  546, \n            0,    0,    0,  622,  622,    0,  123,    0,  622,    0, \n            0,    0,  369,  540,    0,  541,  542,  543,  544,  545, \n            0,    0,  547,  548,  546,    0,    0,    0,  382,  383, \n          549,  550,  551,  552,    0,    0,  622,    0,    0,    0, \n            0,    0,    0,    0,  384,    0,    0,  547,  386,  387, \n          388,  389,    0,    0,    0,  549,  550,  551,  552,    0, \n            0,    0,    0,    0,    0,  209,    0,    0,  553,    0, \n            0,  622,  622,  622,    0,  622,  626,  626,  626,  622, \n          622,  626,  626,  626,  622,  626,  622,  622,  622,  622, \n          622,  622,  622,  553,  626,  626,  626,  622,  622,  622, \n          622,  622,  622,  622,  626,  626,  622,  626,  626,  626, \n          626,  626,    0,  622,  209,    0,  622,  622,  622,  626, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  626,  626,  626,  626,  626,  626,  626,  626,  626, \n          626,  626,  626,  626,  626,    0,    0,  626,  626,  626, \n          626,  622,    0,  626,  622,  622,  626,  622,  622,  626, \n          622,  626,  622,  626,  622,  626,  622,  626,  626,  626, \n          626,  626,  626,  626,  622,  626,  626,  626,    0,  622, \n          622,  622,  622,  622,  622,    0,    0,    0,  622,  626, \n          622,  622,    0,  622,  622,  622,  622,    0,  622,  622, \n          622,  626,  622,  622,  622,    0,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,    0,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,    0,  622,    0,    0,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,    0,    0,  622,  622, \n          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, \n          622,  622,  622,  622,  622,  622,    0,    0,  623,  622, \n          622,  622,  622,    0,  622,  622,  622,  622,  623,  622, \n          622,  622,  622,    0,    0,    0,    0,    0,    0,    0, \n          540,    0,  541,  542,  543,  544,  545,    0,    0,    0, \n            0,  546,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  209,  623,  209,  209,  209,  209,  209,    0,    0, \n            0,    0,  209,    0,  547,    0,  623,  623,    0,  125, \n            0,  623,    0,  523,  551,  552,    0,    0,    0,    0, \n            0,  523,    0,    0,    0,  209,  209,    0,    0,    0, \n            0,    0,    0,  209,  209,  209,  209,    0,    0,  623, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          553,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    4,    5,    6,    0,    8, \n            0,  209,    0,    9,   10,    0,    0,    0,   11,  307, \n           12,   13,   14,  241,  242,   17,   18,    0,    0,  307, \n            0,   19,  243,  244,  245,  246,  247,  248,    0,    0, \n          249,    0,    0,    0,    0,    0,    0,  250,    0,    0, \n          251,  252,  253,    0,  254,   35,  255,  256,  257,  258, \n            0,   40,    0,  307,  259,    0,    0,  369,    0,    0, \n            0,    0,  374,  375,    0,    0,    0,  307,  307,    0, \n            0,    0,  307,  382,  383,  260,    0,    0,   45,    0, \n            0,   46,   47,    0,   48,    0,   49,    0,    0,  384, \n            0,  385,    0,  386,  387,  388,  389,  390,  391,  392, \n          307,  393,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,   65,   66,    0,    0,    0,    0,    0,  194, \n            0,    0,    0,    0,    0,  623,  623,  623,    0,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,    0,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,    0,  623,  194,    0, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,    0, \n            0,  623,  623,  623,  623,  623,    0,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,    0,  623,  623,  623,  623,  623,  623,    0, \n            0,    0,  623,  623,  623,  623,    0,  623,  623,  623, \n          623,    0,  623,  623,  623,  623,  621,  621,  621,    0, \n          621,  307,  307,  307,  621,  621,  307,  307,  307,  621, \n          307,  621,  621,  621,  621,  621,  621,  621,    0,  621, \n          307,  307,  621,  621,  621,  621,  621,  621,  621,  307, \n          307,  621,  307,  307,  307,  307,  307,    0,  621,    0, \n            0,  621,  621,  621,  307,  621,  621,  621,  621,  621, \n          621,  621,  621,  621,  621,  621,  307,  307,  307,  307, \n          307,  307,  307,  307,  307,  307,  307,  307,  307,  307, \n            0,    0,  307,  307,  307,  307,  621,    0,  307,  621, \n          621,  307,  621,  621,  307,  621,  307,  621,  307,  621, \n          307,  621,  307,  307,  307,  307,  307,  307,  307,  621, \n          307,  621,  307,    0,  621,  621,  621,  621,  621,  621, \n            0,    0,  627,  621,  307,  621,  621,    0,  621,  621, \n          621,  621,  627,  621,  621,  621,  307,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  194,  627,  194,  194,  194, \n          194,  194,    0,    0,    0,    0,  194,    0,    0,    0, \n          627,  627,    0,    0,    0,  627,    0,  524,  369,  370, \n          371,  372,  373,  374,  375,  524,    0,  378,  379,  194, \n          194,    0,    0,    0,  382,  383,    0,  194,  194,  194, \n          194,    0,    0,  627,    0,    0,    0,    0,    0,    0, \n          384,    0,  385,    0,  386,  387,  388,  389,  390,  391, \n          392,    0,  393,    0,    0,    0,    0,    0,    0,    4, \n            5,    6,    0,    8,    0,  194,    0,    9,   10,    0, \n            0,    0,   11,  628,   12,   13,   14,  241,  242,   17, \n           18,    0,    0,  628,    0,   19,  243,  244,  323,  324, \n          325,  326,    0,    0,  249,    0,    0,    0,    0,    0, \n            0,  250,    0,    0,  327,  328,  329,    0,  330,   35, \n          331,  332,  333,  334,    0,   40,    0,  628,  259,    0, \n            0,  369,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  628,  628,    0,    0,    0,  628,  382,  383,  335, \n            0,    0,  410,    0,    0,   46,   47,    0,   48,    0, \n          411,    0,    0,  384,    0,  385,    0,  386,  387,  388, \n          389,    0,    0,  392,  628,  393,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,   65,   66,    0,    0, \n            0,    0,    0,  176,    0,    0,    0,    0,    0,  624, \n          624,  624,    0,  624,  627,  627,  627,  624,  624,  627, \n          627,  627,  624,  627,  624,  624,  624,  624,  624,  624, \n          624,    0,  627,  627,  627,  624,  624,  624,  624,  624, \n          624,  624,  627,  627,  624,  627,  627,  627,  627,  627, \n            0,  624,  176,    0,  624,  624,  624,  627,  624,  624, \n          624,  624,  624,  624,  624,  624,  624,  624,  624,  627, \n          627,  627,  627,  627,  627,  627,  627,  627,  627,  627, \n          627,  627,  627,    0,    0,  627,  627,  627,  627,  624, \n            0,  627,  624,  624,  627,  624,  624,  627,  624,  627, \n          624,  627,  624,  627,  624,  627,  627,  627,  627,  627, \n          627,  627,  624,  627,  627,  627,    0,  624,  624,  624, \n          624,  624,  624,    0,    0,    0,  624,  627,  624,  624, \n            0,  624,  624,  624,  624,    0,  624,  624,  624,  627, \n          625,  625,  625,    0,  625,  628,  628,  628,  625,  625, \n          628,  628,  628,  625,  628,  625,  625,  625,  625,  625, \n          625,  625,    0,  628,  628,  628,  625,  625,  625,  625, \n          625,  625,  625,  628,  628,  625,  628,  628,  628,  628, \n          628,  394,  625,    0,    0,  625,  625,  625,  628,  625, \n          625,  625,  625,  625,  625,  625,  625,  625,  625,  625, \n          628,  628,  628,  628,  628,  628,  628,  628,  628,  628, \n          628,  628,  628,  628,    0,    0,  628,  628,  628,  628, \n          625,    0,  628,  625,  625,  628,  625,  625,  628,  625, \n          628,  625,  628,  625,  628,  625,  628,  628,  628,  628, \n          628,  628,  628,  625,  628,  628,  628,    0,  625,  625, \n          625,  625,  625,  625,    0,    0,  316,  625,  628,  625, \n          625,    0,  625,  625,  625,  625,  316,  625,  625,  625, \n          628,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  176, \n          316,  176,  176,  176,  176,  176,    0,    0,    0,    0, \n          176,    0,    0,    0,  316,  316,    0,  126,    0,  316, \n            0,  526,    0,    0,    0,    0,    0,    0,    0,  526, \n            0,    0,    0,  176,  176,    0,    0,    0,    0,    0, \n            0,  176,  176,  176,  176,    0,    0,  316,    0,    0, \n            0,    0,  369,  370,  371,  372,  373,  374,  375,  376, \n          377,  378,  379,    0,    0,    0,    0,    0,  382,  383, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  176, \n            0,    0,    0,    0,  384,    0,  385,  439,  386,  387, \n          388,  389,  390,  391,  392,    0,  393,  439,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  782,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  439,    0,    0,    0,  369,  370,  371,  372,  373, \n          374,  375,  376,  377,  378,  379,  439,  380,  381,    0, \n          439,  382,  383,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  384,    0,  385, \n            0,  386,  387,  388,  389,  390,  391,  392,  439,  393, \n            0,    0,    0,    0,    0,    0,  177,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  623,  623,  623,    0,  623,  316,  316, \n          316,  623,  623,  316,  316,  316,  623,  316,  623,  623, \n          623,  623,  623,  623,  623,  177,    0,  316,  316,  623, \n          623,  623,  623,  623,  623,  623,  316,  316,  623,  316, \n          316,  316,  316,  316,    0,  623,    0,    0,  623,  623, \n          623,  316,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  316,  316,  316,  316,  316,  316,  316, \n          316,  316,  316,  316,  316,  316,  316,   94,    0,  316, \n          316,  316,  316,  623,    0,  316,  623,  623,  316,  623, \n          623,  316,  623,  316,  623,  316,  623,  316,  623,  316, \n          316,  316,  316,  316,  316,  316,  623,  316,    0,  316, \n            0,  623,  623,  623,  623,  623,  623,    0,    0,    0, \n          623,  316,  623,  623,  519,  623,  623,  623,  623,    0, \n          623,  623,  623,  316,  283,  283,  283,    0,  283,  439, \n          439,  439,  283,  283,  439,  439,  439,  283,  439,  283, \n          283,  283,  283,  283,  283,  283,  394,  439,  439,  439, \n          283,  283,  283,  283,  283,  283,  283,  439,  439,  283, \n          439,  439,  439,  439,  439,    0,  283,    0,    0,  283, \n          283,  283,    0,  283,  283,  283,  283,  283,  283,  283, \n          283,  283,  283,  283,  439,  439,  439,  439,  439,  439, \n          439,  439,  439,  439,  439,  439,  439,  439,  648,    0, \n          439,  439,  439,  439,  283,    0,  439,  283,  648,  439, \n          283,  283,  439,  283,  439,  283,  439,  283,  439,  283, \n          439,  439,  439,  439,  439,  439,  439,  283,  439,  439, \n          439,    0,  283,  283,  283,  283,  283,  283,    0,    0, \n            0,  283,  648,  283,  283,    0,  283,  283,  283,  283, \n            0,  283,  283,  283,  439,    0,    0,  648,    0,    0, \n            0,  648,  177,    0,  177,  177,  177,  177,  177,    0, \n            0,    0,    0,  177,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  525,    0,    0,    0,    0,  648, \n            0,    0,  525,    0,    0,    0,  177,  177,    0,    0, \n            0,    0,  113,  620,  177,  177,  177,  177,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, \n            0,    0,  177,    0,    0,    0,    0,    0,    0,    0, \n            0,  519,    0,    0,    0,    0,    0,    0,  519,  519, \n            0,    0,    0,    0,  620,    0,    0,    0,    0,    0, \n            0,    0,    0,  323,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  620,    0,    0,  323,    0, \n            0,    0,  323,    0,    0,    0,    0,    0,    0,    0, \n          369,  370,  371,  372,  373,  374,  375,  376,  377,  378, \n          379,    0,  380,  381,    0,    0,  382,  383,    0,    0, \n          323,    0,    0,    0,    0,    0,    0,    0,  178,    0, \n            0,    0,  384,    0,  385,    0,  386,  387,  388,  389, \n          390,  391,  392,    0,  393,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  283,  283,  283,    0,  283, \n          648,  648,  648,  283,  283,  648,  648,  648,  283,  648, \n          283,  283,  283,  283,  283,  283,  283,  178,  648,  648, \n          648,  283,  283,  283,  283,  283,  283,  283,  648,  648, \n          283,  648,  648,  648,  648,  648,    0,  283,    0,    0, \n          283,  283,  283,    0,  283,  283,  283,  283,  283,  283, \n          283,  283,  283,  283,  283,  648,  648,  648,  648,  648, \n          648,  648,  648,  648,  648,  648,  648,  648,  648,  105, \n            0,  648,  648,  648,  648,  283,    0,  648,  283,    0, \n          648,  283,  283,  648,  283,  648,  283,  648,  283,  648, \n          283,  648,  648,  648,  648,  648,  648,  648,  283,  648, \n          648,  648,    0,  283,  283,  283,  283,  283,  283,    0, \n            0,    0,  283,    0,  283,  283,  626,  283,  283,  283, \n          283,    0,  283,  283,  283,  648,  283,  283,  283,    0, \n          283,  323,  323,  323,  283,  283,  323,  323,  323,  283, \n          323,  283,  283,  283,  283,  283,  283,  283,    0,    0, \n          323,  323,  283,  283,  283,  283,  283,  283,  283,  323, \n          323,  283,  323,  323,  323,  323,  323,    0,  283,    0, \n            0,  283,  283,  283,    0,  283,  283,  283,  283,  283, \n          283,  283,  283,  283,  283,  283,  323,  323,  323,  323, \n          323,  323,  323,  323,  323,  323,  323,  323,  323,  323, \n          516,    0,  323,  323,  323,  323,  283,    0,  323,  283, \n          516,  323,  283,  283,  323,  283,  323,  283,  323,  283, \n          323,  283,  323,  323,  323,  323,  323,  323,  323,  283, \n          323,    0,  323,    0,  283,  283,  283,  283,  283,  283, \n            0,    0,    0,  283,   91,  283,  283,    0,  283,  283, \n          283,  283,    0,  283,  283,  283,  323,    0,    0,  516, \n            0,  110,    0,  516,  178,    0,  178,  178,  178,  178, \n          178,    0,    0,    0,    0,  178,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  527,    0,    0,    0, \n            0,  516,    0,    0,  527,    0,    0,    0,  178,  178, \n            0,    0,    0,    0,  124,  626,  178,  178,  178,  178, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  519,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  519,    0,    0,  178,    0,    0,    0,    0,    0, \n            0,    0,    0,  626,    0,    0,    0,    0,    0,    0, \n          626,  626,    0,    0,    0,    0,  622,    0,    0,    0, \n            0,    0,    0,    0,    0,   94,    0,    0,    0,  369, \n          370,  371,  372,  373,  374,  375,  376,  626,  378,  379, \n          519,    0,  113,    0,  519,  382,  383,    0,    0,    0, \n            0,   98,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  384,    0,  385,    0,  386,  387,  388,  389,  390, \n          391,  392,  519,  393,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   98,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  134,   98,    0,    0,    0,    0,  619,  619,  619, \n            0,  619,  516,  516,  516,  619,  619,    0,  516,  516, \n          619,  516,  619,  619,  619,  619,  619,  619,  619,    0, \n          619,    0,  523,  619,  619,  619,  619,  619,  619,  619, \n          516,  516,  619,  516,  516,  516,  516,  516,  135,  619, \n          134,    0,  619,  619,  619,    0,  619,  619,  619,  619, \n          619,  619,  619,  619,  619,  619,  619,  516,  516,  516, \n          516,  516,  516,  516,  516,  516,  516,  516,  516,  516, \n          516,    0,    0,  516,  516,  516,  516,  619,  528,    0, \n          619,  619,  516,  619,  619,    0,  619,  135,  619,  516, \n          619,  516,  619,  516,  516,  516,  516,  516,  516,  516, \n          619,  516,  619,  516,    0,  619,  619,  619,  619,  619, \n          619,    0,    0,    0,  619,    0,  619,  619,    0,  619, \n          619,  619,  619,    0,  619,  619,  619,  516,  620,  620, \n          620,    0,  620,  519,  519,  519,  620,  620,    0,  519, \n          519,  620,  519,  620,  620,  620,  620,  620,  620,  620, \n            0,  620,    0,    0,  620,  620,  620,  620,  620,  620, \n          620,  519,  519,  620,  519,  519,  519,  519,  519,    0, \n          620,  104,    0,  620,  620,  620,    0,  620,  620,  620, \n          620,  620,  620,  620,  620,  620,  620,  620,  519,  519, \n          519,  519,  519,  519,  519,  519,  519,  519,  519,  519, \n          519,  519,    0,    0,  519,  519,  519,  519,  620,  531, \n           98,  620,  620,  519,  620,  620,    0,  620,  622,  620, \n          519,  620,  519,  620,  519,  519,  519,  519,  519,  519, \n          519,  620,  519,  620,  519,    0,  620,  620,  620,  620, \n          620,  620,    0,    0,  626,  620,    0,  620,  620,    0, \n          620,  620,  620,  620,  626,  620,  620,  620,  519,  523, \n            0,    0,    0,    0,    0,    0,  523,  523,    0,    0, \n            0,    0,    0,   98,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  134,  105,  134, \n          134,  134,  134,  134,    0,    0,    0,    0,  134,    0, \n            0,    0,    0,  626,    0,  124,    0,  626,    0,  516, \n            0,    0,    0,    0,    0,    0,    0,  516,    0,    0, \n            0,  134,  134,    0,    0,    0,    0,    0,    0,  134, \n          134,  134,  134,    0,  135,  626,  135,  135,  135,  135, \n          135,    0,    0,    0,    0,  135,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  519,    0,    0,    0, \n            0,    0,    0,    0,  519,    0,    0,  134,  135,  135, \n            0,    0,    0,    0, \n      };\n   }\n\n   private static final short[] yyTable2() {\n      return new short[] {\n\n            0,  622,  135,  135,  135,  135,    0,    0,    0,    0, \n            0,  622,    0,    0,   99,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  123,  622,    0,    0,    0,    0,    0,    0, \n          135,    0,    0,    0,    0,  104,    0,    0,   99,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          622,    0,  123,    0,  622,   99,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  622,    0,    0,    0,    0,    0,    0,  622,  622, \n            0,    0,  622,    0,  622,  524,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  622,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  622,  622,  622, \n            0,  622,  626,  626,  626,  622,  622,    0,  626,  626, \n          622,  626,  622,  622,  622,  622,  622,  622,  622,    0, \n          626,    0,    0,  622,  622,  622,  622,  622,  622,  622, \n          626,  626,  622,  626,  626,  626,  626,  626,    0,  622, \n          106,    0,  622,  622,  622,    0,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  626,  626,  626, \n          626,  626,  626,  626,  626,  626,  626,  626,  626,  626, \n          626,    0,    0,  626,  626,  626,  626,  622,    0,    0, \n          622,  622,  626,  622,  622,    0,  622,  623,  622,  626, \n          622,  626,  622,  626,  626,  626,  626,  626,  626,  626, \n          622,  626,  626,  626,    0,  622,  622,  622,  622,  622, \n          622,    0,    0,    0,  622,    0,  622,  622,    0,  622, \n          622,  622,  622,    0,  622,  622,  622,  626,  622,  622, \n          622,    0,  622,  622,  622,  622,  622,  622,    0,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n            0,  622,    0,   99,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, \n          622,    0,    0,  622,  622,  622,    0,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  524,    0,  622,  622,  622,  622,  622,  524, \n          524,  622,  622,  622,  622,  622,   99,  622,    0,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, \n          622,  622,    0,    0,  623,  622,    0,  622,  622,    0, \n          622,  622,  622,  622,  623,  622,  622,  622,  622,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  125,  623,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  106,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  623,    0,  125,    0,  623,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  623,    0,    0,    0,    0,    0, \n            0,  623,  623,    0,    0,  623,    0,  623,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  610,  611,    0,    0,  612,    0,    0,  623,  160, \n          161,    0,  162,  163,  164,  165,  166,  167,  168,    0, \n            0,  169,  170,    0,    0,  626,  171,  172,  173,  174, \n            0,    0,    0,    0,    0,  626,  287,    0,  101,    0, \n            0,    0,    0,  176,  177,    0,  178,  179,  180,  181, \n          182,  183,  184,  185,  186,  187,  188,    0,    0,  189, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  626, \n            0,    0,  101,    0,    0,    0,    0,    0,    0,    0, \n            0,  190,    0,    0,  626,    0,  124,    0,  626,  101, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  626,    0,    0,  526, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  623,  623,  623,    0,  623,  623,  623,  623,  623, \n          623,    0,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,    0,  623,    0,    0,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,    0,  623,    0,    0,  623,  623,  623,    0, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,    0,    0,  623,  623,  623, \n          623,  623,    0,    0,  623,  623,  623,  623,  623,    0, \n          623,    0,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,    0,  623, \n          623,  623,  623,  623,  623,    0,    0,    0,  623,    0, \n          623,  623,    0,  623,  623,  623,  623,    0,  623,  623, \n          623,  623,  622,  622,  622,    0,  622,  626,  626,  626, \n          622,  622,    0,  626,  626,  622,  626,  622,  622,  622, \n          622,  622,  622,  622,    0,  626,    0,  101,  622,  622, \n          622,  622,  622,  622,  622,  626,  626,  622,  626,  626, \n          626,  626,  626,    0,  622,    0,    0,  622,  622,  622, \n            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  626,  626,  626,  626,  626,  626,  626,  626, \n          626,  626,  626,  626,  626,  626,  526,    0,  626,  626, \n          626,  626,  622,  526,  526,  622,  622,  626,  622,  622, \n          101,  622,    0,  622,  626,  622,  626,  622,  626,  626, \n          626,  626,  626,  626,  626,  622,  626,  626,  626,    0, \n          622,  622,  622,  622,  622,  622,    0,    0,  622,  622, \n            0,  622,  622,    0,  622,  622,  622,  622,  622,  622, \n          622,  622,  626,    0,    0,    0,    0,    0,    0,    0, \n          618,  619,    0,    0,  620,    0,    0,    0,  160,  161, \n            0,  162,  163,  164,  165,  166,  167,  168,    0,    0, \n          169,  170,  622,    0,    0,  171,  172,  173,  174,    0, \n            0,    0,    0,    0,    0,  287,    0,  622,    0,  123, \n            0,  622,  176,  177,    0,  178,  179,  180,  181,  182, \n          183,  184,  185,  186,  187,  188,    0,    0,  189,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  622, \n            0,    0,    0,    0,    0,    0,    0,    0,  675,  611, \n          190,    0,  676,    0,    0,    0,  160,  161,    0,  162, \n          163,  164,  165,  166,  167,  168,    0,    0,  169,  170, \n            0,    0,    0,  171,  172,  173,  174,    0,    0,  623, \n            0,    0,    0,  287,    0,    0,    0,    0,    0,  623, \n          176,  177,  100,  178,  179,  180,  181,  182,  183,  184, \n          185,  186,  187,  188,  678,  619,  189,    0,  679,    0, \n            0,    0,  160,  161,    0,  162,  163,  164,  165,  166, \n          167,  168,    0,  623,  169,  170,  100,    0,  190,  171, \n          172,  173,  174,    0,    0,    0,    0,    0,  623,  287, \n          125,    0,  623,  100,    0,    0,  176,  177,    0,  178, \n          179,  180,  181,  182,  183,  184,  185,  186,  187,  188, \n            0,    0,  189,    0,    0,    0,    0,    0,    0,    0, \n          623,    0,    0,  525,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  190,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  622,  622,  622,    0,  622, \n          622,  622,  622,  622,  622,    0,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,    0,  622,    0, \n            0,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,    0,  622,    0,    0, \n          622,  622,  622,    0,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,    0, \n            0,  622,  622,  622,  622,  622,    0,    0,  622,  622, \n          622,  622,  622,    0,  622,    0,  622,  622,  622,  622, \n          622,  622,  622,  622,  622,  622,  622,  622,  622,  622, \n          622,  622,    0,  622,  622,  622,  622,  622,  622,    0, \n            0,    0,  622,    0,  622,  622,    0,  622,  622,  622, \n          622,    0,  622,  622,  622,  622,  623,  623,  623,    0, \n          623,  623,  623,  623,  623,  623,    0,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,    0,  623, \n            0,  100,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,    0,  623,    0, \n            0,  623,  623,  623,    0,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          525,    0,  623,  623,  623,  623,  623,  525,  525,  623, \n          623,  623,  623,  623,  100,  623,    0,  623,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          623,  623,  623,    0,  623,  623,  623,  623,  623,  623, \n            0,    0,  316,  623,    0,  623,  623,    0,  623,  623, \n          623,  623,  316,  623,  623,  623,  623,    0,    0,    0, \n            0,    0,    0,    0,  688,  611,    0,    0,  689,    0, \n            0,    0,  160,  161,    0,  162,  163,  164,  165,  166, \n          167,  168,    0,    0,  169,  170,  107,    0,    0,  171, \n          172,  173,  174,    0,    0,    0,    0,    0,    0,  287, \n            0,  316,    0,  126,    0,  316,  176,  177,    0,  178, \n          179,  180,  181,  182,  183,  184,  185,  186,  187,  188, \n            0,    0,  189,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  316,    0,    0,    0,    0,    0,    0, \n            0,    0,  692,  619,  190,    0,  693,    0,    0,    0, \n          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, \n            0,    0,  169,  170,    0,    0,    0,  171,  172,  173, \n          174,    0,    0,  316,    0,    0,    0,  287,    0,    0, \n            0,    0,    0,  316,  176,  177,  102,  178,  179,  180, \n          181,  182,  183,  184,  185,  186,  187,  188,  721,  611, \n          189,    0,  722,    0,    0,    0,  160,  161,    0,  162, \n          163,  164,  165,  166,  167,  168,    0,  316,  169,  170, \n          102,    0,  190,  171,  172,  173,  174,    0,    0,    0, \n            0,    0,  316,  287,  126,    0,  316,  102,    0,    0, \n          176,  177,    0,  178,  179,  180,  181,  182,  183,  184, \n          185,  186,  187,  188,    0,    0,  189,    0,    0,    0, \n            0,    0,    0,    0,  316,    0,    0,  527,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  190,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  623, \n          623,  623,    0,  623,  316,  316,  316,  623,  623,    0, \n          316,  316,  623,  316,  623,  623,  623,  623,  623,  623, \n          623,    0,    0,    0,    0,  623,  623,  623,  623,  623, \n          623,  623,  316,  316,  623,  316,  316,  316,  316,  316, \n            0,  623,    0,    0,  623,  623,  623,    0,  623,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  316, \n          316,  316,  316,  316,  316,  316,  316,  316,  316,  316, \n          316,  316,  316,    0,    0,  316,  316,  316,  316,  623, \n            0,    0,  623,  623,  316,  623,  623,    0,  623,    0, \n          623,  316,  623,  316,  623,  316,  316,  316,  316,  316, \n          316,  316,  623,  316,    0,  316,    0,  623,  623,  623, \n          623,  623,  623,    0,    0,  648,  623,    0,  623,  623, \n            0,  623,  623,  623,  623,  648,  623,  623,  623,  316, \n          623,  623,  623,    0,  623,  316,  316,  316,  623,  623, \n            0,  316,  316,  623,  316,  623,  623,  623,  623,  623, \n          623,  623,    0,    0,    0,  102,  623,  623,  623,  623, \n          623,  623,  623,  316,  316,  623,  316,  316,  316,  316, \n          316,    0,  623,    0,  648,  623,  623,  623,    0,  623, \n          623,  623,  623,  623,  623,  623,  623,  623,  623,  623, \n          316,  316,  316,  316,  316,  316,  316,  316,  316,  316, \n          316,  316,  316,  316,  527,    0,  316,  316,  316,  316, \n          623,  527,  527,  623,  623,  316,  623,  623,  102,  623, \n            0,  623,  316,  623,  316,  623,  316,  316,  316,  316, \n          316,  316,  316,  623,  316,    0,  316,    0,  623,  623, \n          623,  623,  623,  623,    0,    0,  440,  623,    0,  623, \n          623,    0,  623,  623,  623,  623,  440,  623,  623,  623, \n          316,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  104,    0, \n          440,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  440,  440,    0,  122,    0,  440, \n            0,    0,    0,  626,    0,    0,    0,    0,    0,    0, \n            0,    0,  104,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  440,    0,  104, \n            0,    0,    0,    0,    0,    0,    0,  626,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  626,    0,    0,    0,    0,    0,    0,  622, \n            0,    0,  283,  283,  283,    0,  283,  648,  648,  648, \n          283,  283,  648,  648,  648,  283,  648,  283,  283,  283, \n          283,  283,  283,  283,  626,  648,  648,    0,  283,  283, \n          283,  283,  283,  283,  283,  648,  648,  283,  648,  648, \n          648,  648,  648,    0,  283,    0,    0,  283,  283,  283, \n            0,  283,  283,  283,  283,  283,  283,  283,  283,  283, \n          283,  283,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  648,    0,    0,    0,    0,    0,    0, \n          648,  648,  283,    0,    0,  283,    0,  648,  283,  283, \n            0,  283,  522,  283,    0,  283,    0,  283,    0,    0, \n            0,    0,  522,    0,    0,  283,    0,  648,  648,    0, \n          283,  283,  283,  283,  283,  283,    0,    0,    0,  283, \n            0,  283,  283,    0,  283,  283,  283,  283,    0,  283, \n          283,  283,  648,    0,    0,    0,  522,    0,  440,  440, \n          440,    0,    0,  440,  440,  440,    0,  440,    0,    0, \n          522,  522,    0,  116,    0,  522,  440,  440,  440,    0, \n            0,    0,    0,    0,    0,    0,  440,  440,    0,  440, \n          440,  440,  440,  440,    0,    0,    0,    0,    0,    0, \n            0,  440,    0,  522,    0,    0,    0,  104,  622,    0, \n            0,    0,    0,  440,  440,  440,  440,  440,  440,  440, \n          440,  440,  440,  440,  440,  440,  440,    0,    0,  440, \n          440,  440,  440,  626,  521,  440,    0,    0,  440,    0, \n            0,  440,    0,  440,  521,  440,    0,  440,    0,  440, \n          440,  440,  440,  440,  440,  440,  622,  440,  440,  440, \n            0,    0,    0,  622,  622,    0,    0,    0,    0,  622, \n          104,  440,    0,    0,    0,    0,    0,    0,  521,    0, \n            0,  626,    0,  440,    0,    0,    0,    0,  626,  626, \n          622,    0,  521,  521,  622,  115,    0,  521,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  626,    0,    0,  626,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  521,    0,    0,    0,  111, \n            0,    0,    0,    0,    0,    0,    0,    0,  106,    0, \n            0,    0,  293,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  293,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  106,    0,  522,  522,  522,  114,  111,  522, \n          522,  522,    0,  522,    0,    0,  288,    0,    0,  106, \n            0,    0,    0,  522,  522,    0,    0,    0,    0,    0, \n            0,  293,  522,  522,    0,  522,  522,  522,  522,  522, \n          517,    0,    0,    0,    0,    0,    0,  522,  523,  623, \n            0,    0,    0,    0,    0,    0,  114,    0,  523,  522, \n          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, \n          522,  522,  522,    0,    0,  522,  522,  522,  522,    0, \n          534,  522,    0,    0,  522,    0,    0,  522,  520,  522, \n            0,  522,  523,  522,    0,  522,  522,  522,  522,  522, \n          522,  522,    0,  522,    0,  522,  523,  523,    0,  117, \n            0,  523,    0,    0,    0,    0,    0,  522,    0,    0, \n            0,    0,    0,    0,    0,    0,  521,  521,  521,  522, \n            0,  521,  521,  521,    0,  521,    0,    0,    0,  523, \n            0,    0,    0,    0,    0,  521,  521,    0,    0,    0, \n            0,    0,    0,    0,  521,  521,    0,  521,  521,  521, \n          521,  521,    0,    0,    0,    0,    0,    0,    0,  521, \n          524,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          524,  521,  521,  521,  521,  521,  521,  521,  521,  521, \n          521,  521,  521,  521,  521,    0,    0,  521,  521,  521, \n          521,    0,  533,  521,    0,    0,  521,    0,    0,  521, \n            0,  521,    0,  521,  524,  521,  111,  521,  521,  521, \n          521,  521,  521,  521,    0,  521,    0,  521,  524,  524, \n            0,  118,    0,  524,  293,  293,  293,  106,  623,  521, \n          293,  293,    0,  293,    0,    0,    0,    0,    0,    0, \n            0,  521,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  524,    0,    0,  114,  293,  293,  293,  293,  293, \n            0,    0,    0,    0,    0,   93,    0,  517,   44,  128, \n            0,    0,    0,    0,  517,  517,  623,    0,   44,    0, \n            0,    0,    0,  623,  623,    0,    0,    0,    0,  623, \n          106,    0,    0,    0,    0,    0,    0,    0,    0,   93, \n          523,  523,  523,    0,  293,  523,  523,  523,    0,  523, \n          623,    0,    0,    0,    0,  520,   93,    0,  128,  523, \n          523,    0,  520,  520,    0,  293,    0,   44,  523,  523, \n            0,  523,  523,  523,  523,  523,    0,    0,    0,    0, \n            0,    0,    0,  523,  526,    0,  518,    0,    0,  293, \n          306,    0,    0,    0,  526,  523,  523,  523,  523,  523, \n          523,  523,  523,  523,  523,  523,  523,  523,  523,    0, \n            0,  523,  523,  523,  523,    0,  535,  523,    0,    0, \n          523,    0,    0,  523,    0,  523,    0,  523,  526,  523, \n            0,  523,  523,  523,  523,  523,  523,  523,    0,  523, \n            0,  523,  526,  526,    0,  120,    0,  526,    0,    0, \n            0,    0,    0,  523,    0,    0,    0,    0,    0,    0, \n            0,    0,  524,  524,  524,  523,    0,  524,  524,  524, \n            0,  524,    0,    0,    0,  526,    0,    0,    0,    0, \n            0,  524,  524,    0,    0,    0,    0,    0,    0,    0, \n          524,  524,    0,  524,  524,  524,  524,  524,    0,    0, \n            0,    0,    0,    0,    0,  524,  525,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  525,  524,  524,  524, \n          524,  524,  524,  524,  524,  524,  524,  524,  524,  524, \n          524,    0,    0,  524,  524,  524,  524,    0,  536,  524, \n            0,    0,  524,    0,    0,  524,    0,  524,    0,  524, \n          525,  524,    0,  524,  524,  524,  524,  524,  524,  524, \n            0,  524,  127,  524,  525,  525,  128,  119,    0,  525, \n           44,   44,   44,    0,   93,  524,   44,   44,    0,   44, \n          124,    0,    0,    0,    0,    0,    0,  524,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  525,    0,    0, \n            0,   44,   44,   44,   44,   92,    0,    0,    0,    0, \n            0,  127,    0,    0,    0,  123,    0,    0,    0,    0, \n            0,    0,    0,  518,    0,    0,    0,  306,    0,  124, \n          518,  518,    0,    0,  306,  306,    0,   93,    0,   92, \n            0,    0,    0,  317,    0,    0,  526,  526,  526,    0, \n           44,  526,  526,  526,    0,  526,   92,    0,    0,    0, \n            0,  626,    0,    0,  123,  526,  526,    0,    0,    0, \n            0,   44,    0,    0,  526,  526,    0,  526,  526,  526, \n          526,  526,    0,    0,    0,    0,  517,    0,    0,  526, \n          527,    0,    0,    0,    0,   44,  622,    0,    0,    0, \n          527,  526,  526,  526,  526,  526,  526,  526,  526,  526, \n          526,  526,  526,  526,  526,    0,    0,  526,  526,  526, \n          526,    0,  538,  526,    0,    0,  526,    0,    0,  526, \n            0,  526,    0,  526,  527,  526,    0,  526,  526,  526, \n          526,  526,  526,  526,    0,  526,    0,  526,  527,  527, \n            0,  121,    0,  527,    0,    0,    0,    0,    0,  526, \n            0,    0,    0,    0,    0,    0,    0,    0,  525,  525, \n          525,  526,    0,  525,  525,  525,    0,  525,    0,    0, \n            0,  527,    0,    0,    0,    0,    0,  525,  525,    0, \n            0,    0,    0,    0,    0,    0,  525,  525,    0,  525, \n          525,  525,  525,  525,    0,    0,    0,    0,    0,    0, \n            0,  525,  518,    0,    0,    0,    0,    0,    0,  127, \n            0,    0,  518,  525,  525,  525,  525,  525,  525,  525, \n          525,  525,  525,  525,  525,  525,  525,  124,    0,  525, \n          525,  525,  525,    0,  537,  525,    0,    0,  525,    0, \n          626,  525,    0,  525,    0,  525,  518,  525,    0,  525, \n          525,  525,  525,  525,  525,  525,    0,  525,    0,  525, \n          518,  518,  123,  112,   92,  518,    0,    0,    0,    0, \n          317,  525,    0,    0,    0,  622,    0,  317,  317,    0, \n            0,    0,    0,  525,    0,    0,    0,    0,  626,    0, \n            0,    0,    0,  518,    0,  626,  626,    0,    0,    0, \n            0,  622,    0,    0,    0,    0,    0,   95,    0,    0, \n            0,  125,    0,  517,    0,    0,    0,    0,    0,    0, \n          517,  517,  626,  622,    0,    0,    0,   92,    0,    0, \n          622,  622,    0,    0,    0,    0,  622,    0,    0,    0, \n            0,   95,  527,  527,  527,    0,    0,  527,  527,  527, \n            0,  527,    0,    0,    0,    0,    0,  622,   95,    0, \n          125,  527,  527,    0,    0,    0,    0,    0,    0,    0, \n          527,  527,    0,  527,  527,  527,  527,  527,    0,    0, \n            0,    0,    0,    0,    0,  527,  517,    0,  520,    0, \n            0,    0,  623,    0,    0,    0,  517,  527,  527,  527, \n          527,  527,  527,  527,  527,  527,  527,  527,  527,  527, \n          527,    0,    0,  527,  527,  527,  527,    0,  539,  527, \n            0,    0,  527,    0,    0,  527,    0,  527,  109,  527, \n          517,  527,    0,  527,  527,  527,  527,  527,  527,  527, \n            0,  527,    0,  527,  517,  517,    0,  111,    0,  517, \n            0,    0,    0,    0,    0,  527,    0,    0,    0,    0, \n            0,    0,  109,    0,  518,  518,  518,  527,    0,  518, \n          518,  518,    0,  518,    0,    0,    0,  517,    0,  109, \n            0,    0,    0,  518,  518,    0,    0,    0,    0,    0, \n            0,    0,  518,  518,    0,  518,  518,  518,  518,  518, \n            0,    0,    0,    0,    0,    0,    0,  518,  520,  306, \n            0,    0,    0,    0,    0,    0,    0,    0,  520,  518, \n          518,  518,  518,  518,  518,  518,  518,  518,  518,  518, \n          518,  518,  518,    0,    0,  518,  518,  518,  518,    0, \n          530,  518,    0,    0,  518,    0,    0,  518,    0,  518, \n          108,  518,  520,  518,    0,  518,  518,  518,  518,  518, \n          518,  518,    0,  518,    0,  518,  520,  520,  125,  114, \n            0,  520,    0,    0,    0,    0,   95,  518,    0,    0, \n            0,  623,    0,    0,  108,    0,    0,    0,    0,  518, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  520, \n            0,  108,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  520,    0,    0,    0,  623, \n            0,  317,  520,  520,    0,    0,  623,  623,    0,   95, \n            0,    0,  623,    0,    0,    0,    0,    0,  517,  517, \n          517,    0,    0,  517,  517,  517,    0,  517,    0,    0, \n            0,    0,    0,  623,    0,    0,    0,  517,  517,    0, \n            0,    0,    0,    0,    0,    0,  517,  517,    0,  517, \n          517,  517,  517,  517,    0,    0,    0,    0,    0,    0, \n            0,  517,  439,    0,    0,    0,    0,  109,    0,    0, \n            0,    0,  439,  517,  517,  517,  517,  517,  517,  517, \n          517,  517,  517,  517,  517,  517,  517,    0,    0,  517, \n          517,  517,  517,    0,  529,  517,    0,    0,  517,    0, \n            0,  517,    0,  517,    0,  517,  439,  517,    0,  517, \n          517,  517,  517,  517,  517,  517,  306,  517,    0,  517, \n          439,  439,    0,  306,  306,  439,    0,    0,    0,    0, \n          109,  517,    0,    0,    0,    0,    0,    0,    0,    0, \n          520,  520,  520,  517,    0,  520,  520,  520,    0,  520, \n            0,    0,    0,  439,    0,    0,    0,    0,    0,  520, \n          520,    0,    0,    0,    0,    0,    0,    0,  520,  520, \n            0,  520,  520,  520,  520,  520,    0,    0,    0,    0, \n            0,    0,    0,  520,  648,    0,    0,    0,    0,  108, \n            0,    0,    0,    0,  648,  520,  520,  520,  520,  520, \n          520,  520,  520,  520,  520,  520,  520,  520,  520,    0, \n            0,  520,  520,  520,  520,    0,  532,  520,    0,    0, \n          520,    0,    0,  520,    0,  520,    0,  520,  648,  520, \n            0,  520,  520,  520,  520,  520,  520,  520,  317,  520, \n            0,  520,  648,  648,    0,  317,  317,  648,    0,    0, \n            0,    0,  108,  520,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  520,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  648,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  439,  439,  439,    0,    0,  439, \n          439,  439,    0,  439,    0,    0,    0,    0,    0,    0, \n            0,    0,  439,  439,  439,    0,    0,    0,    0,    0, \n            0,    0,  439,  439,    0,  439,  439,  439,  439,  439, \n            0,    0,    0,    0,    0,    0,    0,  439,  306,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  306,  439, \n          439,  439,  439,  439,  439,  439,  439,  439,  439,  439, \n          439,  439,  439,    0,    0,  439,  439,  439,  439,    0, \n            0,  439,    0,    0,  439,    0,    0,  439,    0,  439, \n            0,  439,  306,  439,    0,  439,  439,  439,  439,  439, \n          439,  439,    0,  439,  439,  439,  306,  306,    0,  128, \n            0,  306,    0,    0,    0,    0,    0,  439,    0,    0, \n            0,    0,    0,    0,    0,    0,  648,  648,  648,  439, \n            0,  648,  648,  648,    0,  648,    0,    0,    0,  306, \n            0,    0,    0,    0,  648,  648,  648,    0,    0,    0, \n            0,    0,    0,    0,  648,  648,    0,  648,  648,  648, \n          648,  648,    0,    0,    0,    0,    0,    0,    0,  648, \n          317,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          317,  648,  648,  648,  648,  648,  648,  648,  648,  648, \n          648,  648,  648,  648,  648,    0,    0,  648,  648,  648, \n          648,    0,    0,  648,    0,    0,  648,    0,    0,  648, \n            0,  648,    0,  648,  317,  648,    0,  648,  648,  648, \n          648,  648,  648,  648,    0,  648,  648,  648,  317,  317, \n            0,  127,    0,  317,    0,    0,    0,    0,    0,  648, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  648,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  317,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          306,  306,  306,    0,    0,  306,  306,  306,    0,  306, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  306, \n          306,    0,    0,    0,    0,    0,    0,    0,  306,  306, \n            0,  306,  306,  306,  306,  306,    0,    0,    0,    0, \n            0,    0,    0,  306,  464,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  464,  306,  306,  306,  306,  306, \n          306,  306,  306,  306,  306,  306,  306,  306,  306,    0, \n            0,  306,  306,  306,  306,    0,    0,  306,    0,    0, \n          306,    0,    0,  306,    0,  306,    0,  306,  464,  306, \n            0,  306,  306,  306,  306,  306,  306,  306,    0,  306, \n            0,  306,  464,  464,    0,    0,    0,  464,    0,    0, \n            0,    0,    0,  306,    0,    0,    0,    0,    0,    0, \n            0,    0,  317,  317,  317,  306,    0,  317,  317,  317, \n            0,  317,    0,    0,    0,  464,    0,    0,    0,    0, \n            0,  317,  317,    0,    0,    0,    0,    0,    0,    0, \n          317,  317,    0,  317,  317,  317,  317,  317,    0,    0, \n            0,    0,    0,    0,    0,  317,  328,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  328,  317,  317,  317, \n          317,  317,  317,  317,  317,  317,  317,  317,  317,  317, \n          317,    0,    0,  317,  317,  317,  317,    0,    0,  317, \n            0,    0,  317,    0,    0,  317,    0,  317,    0,  317, \n          328,  317,    0,  317,  317,  317,  317,  317,  317,  317, \n            0,  317,    0,  317,  328,  328,    0,    0,    0,  328, \n            0,    0,    0,    0,    0,  317,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  317,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  328,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  464,  464,  464,    0, \n            0,  464,  464,  464,    0,  464,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  464,  464,    0,    0,    0, \n            0,    0,    0,    0,  464,  464,    0,  464,  464,  464, \n          464,  464,    0,    0,    0,    0,    0,    0,    0,  464, \n          256,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          256,  464,  464,  464,  464,  464,  464,  464,  464,  464, \n          464,  464,  464,  464,  464,    0,    0,  464,  464,  464, \n          464,    0,    0,  464,    0,    0,  464,    0,    0,  464, \n            0,  464,    0,  464,  256,  464,    0,  464,  464,  464, \n          464,  464,  464,  464,    0,  464,    0,  464,  256,  256, \n            0,    0,    0,  256,    0,    0,    0,    0,    0,  464, \n            0,    0,    0,    0,    0,    0,    0,    0,  328,  328, \n          328,  464,    0,  328,  328,  328,    0,  328,    0,    0, \n            0,  360,    0,    0,    0,    0,    0,  328,  328,    0, \n            0,    0,    0,    0,    0,    0,  328,  328,    0,  328, \n          328,  328,  328,  328,    0,    0,    0,    0,    0,    0, \n            0,  328,  323,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  323,  328,  328,  328,  328,  328,  328,  328, \n          328,  328,  328,  328,  328,  328,  328,    0,    0,  328, \n          328,  328,  328,    0,    0,  328,    0,    0,  328,    0, \n            0,  328,    0,  328,    0,  328,  323,  328,    0,  328, \n          328,  328,  328,  328,  328,  328,    0,  328,    0,  328, \n          323,  323,    0,    0,    0,  323,    0,    0,    0,    0, \n            0,  328,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  328,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  323,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  256,  256,  256,    0,    0,  256,  256,  256, \n            0,  256,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  256,  256,    0,    0,    0,    0,    0,    0,    0, \n          256,  256,    0,  256,  256,  256,  256,  256,    0,    0, \n            0,    0,    0,    0,    0,  256,  511,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  511,  256,  256,  256, \n          256,  256,  256,  256,  256,  256,  256,  256,  360,  256, \n          256,    0,    0,  256,  256,  360,  360,    0,    0,  256, \n            0,    0,  256,    0,    0,  256,    0,  256,    0,  256, \n          511,  256,    0,  256,  256,  256,  256,  256,  256,  256, \n            0,  256,    0,  256,  511,  511,    0,    0,    0,  511, \n            0,    0,    0,    0,    0,  256,    0,    0,    0,    0, \n            0,    0,    0,    0,  323,  323,  323,  256,    0,  323, \n          323,  323,    0,  323,    0,    0,    0,  511,    0,    0, \n            0,    0,    0,  323,  323,    0,    0,    0,    0,    0, \n            0,    0,  323,  323,    0,  323,  323,  323,  323,  323, \n            0,    0,    0,    0,    0,    0,    0,  323,  356,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  356,  323, \n          323,  323,  323,  323,  323,  323,  323,  323,  323,  323, \n          323,  323,  323,    0,    0,  323,  323,  323,  323,    0, \n            0,  323,    0,    0,  323,    0,    0,  323,    0,  323, \n            0,  323,  356,  323,    0,  323,  323,  323,  323,  323, \n          323,  323,    0,  323,    0,  323,    0,  356,    0,    0, \n            0,  356,    0,    0,    0,    0,    0,  323,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  323, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  356, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  357,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  357,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  511,  511, \n          511,    0,    0,  511,  511,  511,  357,  511,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  511,  511,    0, \n            0,  357,    0,    0,    0,  357,  511,  511,    0,  511, \n          511,  511,  511,  511,    0,    0,    0,    0,    0,    0, \n            0,  511,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  357,  511,  511,  511,  511,  511,  511, \n          511,  511,  511,  511,  511,  511,  511,    0,    0,  511, \n          511,  511,  511,    0,  320,  511,    0,    0,  511,    0, \n            0,  511,    0,  511,  320,  511,    0,  511,    0,  511, \n          511,  511,  511,  511,  511,  511,    0,  511,    0,  511, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  511,    0,    0,    0,    0,    0,    0,  320,    0, \n          356,  356,  356,  511,    0,  356,  356,  356,    0,  356, \n            0,    0,    0,  320,    0,    0,    0,  320,    0,  356, \n          356,    0,    0,    0,    0,    0,    0,    0,  356,  356, \n            0,  356,  356,  356,  356,  356,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  320,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  356,  356,  356,  356,  356, \n          356,  356,  356,  356,  356,  356,  356,  356,  356,    0, \n            0,  356,  356,  356,  356,    0,    0,  356,    0,    0, \n          356,    0,    0,  356,    0,  356,    0,  356,    0,  356, \n          237,  356,  356,  356,  356,  356,  356,  356,    0,  356, \n          237,  356,    0,    0,  357,  357,  357,    0,    0,  357, \n          357,  357,    0,  357,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  357,  357,  356,    0,    0,    0,    0, \n            0,    0,  357,  357,  237,  357,  357,  357,  357,  357, \n            0,    0,    0,    0,    0,    0,    0,    0,  237,  237, \n            0,    0,    0,  237,    0,    0,    0,    0,    0,  357, \n          357,  357,  357,  357,  357,  357,  357,  357,  357,  357, \n          357,  357,  357,    0,    0,  357,  357,  357,  357,    0, \n            0,  357,    0,    0,  357,    0,    0,  357,    0,  357, \n            0,  357,    0,  357,    0,  357,  357,  357,  357,  357, \n          357,  357,    0,  357,    0,  357,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  320,  320,  320,    0, \n            0,  320,  320,  320,    0,  320,    0,    0,    0,  357, \n            0,    0,    0,    0,    0,  320,  320,    0,    0,    0, \n            0,    0,    0,    0,  320,  320,    0,  320,  320,  320, \n          320,  320,    0,    0,    0,    0,    0,    0,    0,    0, \n          234,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          234,  320,  320,  320,  320,  320,  320,  320,  320,  320, \n          320,  320,  320,  320,  320,    0,    0,  320,  320,  320, \n          320,    0,    0,  320,    0,    0,  320,    0,    0,  320, \n            0,  320,    0,  320,  234,  320,    0,  320,  320,  320, \n          320,  320,  320,  320,    0,  320,    0,  320,  234,  234, \n            0,    0,    0,  234,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  320,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  237,  237,  237,    0,    0,  237,  237,  237, \n            0,  237,    0,  231,    0,    0,    0,    0,    0,    0, \n            0,  237,  237,  231,    0,    0,    0,    0,    0,    0, \n          237,  237,    0,  237,  237,  237,  237,  237,    0,    0, \n            0,    0,    0,    0,    0,  237,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  231,  237,  237, \n          237,  237,  237,  237,  237,  237,  237,  237,    0,  237, \n          237,  231,  231,  237,  237,    0,  231,    0,    0,  237, \n            0,    0,  237,    0,    0,  237,    0,  237,    0,  237, \n            0,  237,    0,  237,  237,  237,  237,  237,  237,  237, \n            0,  237,    0,  237,    0,  724,  619,    0,    0,  725, \n            0,    0,    0,  160,  161,  237,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,  237,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,  233, \n          287,    0,    0,    0,    0,    0,    0,  176,  177,  233, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, \n            0,    0,  234,  234,  234,    0,    0,  234,  234,  234, \n            0,  234,    0,  233,    0,  190,    0,    0,    0,    0, \n            0,  234,  234,    0,    0,    0,    0,  233,  233,    0, \n          234,  234,  233,  234,  234,  234,  234,  234,    0,    0, \n            0,    0,    0,    0,    0,  234,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  234,  234, \n          234,  234,  234,  234,  234,  234,  234,  234,    0,  234, \n          234,    0,    0,  234,  234,    0,    0,    0,    0,  234, \n            0,    0,  234,    0,    0,  234,    0,  234,    0,  234, \n            0,  234,    0,  234,  234,  234,  234,  234,  234,  234, \n            0,  234,    0,  234,    0,  231,  231,  231,    0,    0, \n          231,  231,  231,    0,  231,  234,  232,    0,    0,    0, \n            0,    0,    0,    0,  231,  231,  232,  234,    0,    0, \n            0,    0,    0,  231,  231,    0,  231,  231,  231,  231, \n          231,    0,    0,    0,    0,    0,    0,    0,  231,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          232,  231,  231,  231,  231,  231,  231,  231,  231,  231, \n          231,    0,  231,  231,  232,  232,  231,  231,    0,  232, \n            0,    0,  231,    0,    0,  231,    0,    0,  231,    0, \n          231,    0,  231,    0,  231,    0,  231,  231,  231,  231, \n          231,  231,  231,    0,  231,    0,  231,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  231,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          231,  233,  233,  233,    0,    0,  233,  233,  233,    0, \n          233,    0,  235,    0,    0,    0,    0,    0,    0,    0, \n          233,  233,  235,    0,    0,    0,    0,    0,    0,  233, \n          233,    0,  233,  233,  233,  233,  233,    0,    0,    0, \n            0,    0,    0,    0,  233,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  235,  233,  233,  233, \n          233,  233,  233,  233,  233,  233,  233,    0,  233,  233, \n          235,  235,  233,  233,    0,  235,    0,    0,  233,    0, \n            0,  233,    0,    0,  233, \n      };\n   }\n\n   private static final short[] yyTable3() {\n      return new short[] {\n\n            0,  233,    0,  233,    0,  233,    0,  233,  233,  233, \n          233,  233,  233,  233,    0,  233,    0,  233,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  233, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  233,  440,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  440,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  232,  232,  232,    0,    0,  232,  232, \n          232,    0,  232,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  232,  232,    0,    0,  440,    0,    0,    0, \n            0,  232,  232,    0,  232,  232,  232,  232,  232,    0, \n            0,  440,    0,  122,    0,  440,  232,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  232, \n          232,  232,  232,  232,  232,  232,  232,  232,  232,    0, \n          232,  232,    0,  440,  232,  232,    0,    0,    0,    0, \n          232,    0,    0,  232,    0,    0,  232,    0,  232,    0, \n          232,    0,  232,  522,  232,  232,  232,  232,  232,  232, \n          232,    0,  232,  522,  232,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  232,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  232,  235, \n          235,  235,    0,    0,  235,  235,  235,   97,  235,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  235,  235, \n            0,    0,  522,    0,  116,    0,  522,  235,  235,    0, \n          235,  235,  235,  235,  235,    0,    0,    0,    0,    0, \n            0,    0,  235,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  522,  235,  235,  235,  235,  235, \n          235,  235,  235,  235,  235,    0,  235,  235,    0,    0, \n          235,  235,    0,    0,    0,  521,  235,    0,    0,  235, \n            0,    0,  235,    0,  235,  521,  235,    0,  235,    0, \n          235,  235,  235,  235,  235,  235,  235,    0,  235,    0, \n          235,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  235,    0,  440,  440,  440,    0,    0,   96, \n          440,  440,    0,  440,  235,    0,    0,    0,    0,    0, \n            0,    0,  440,    0,  521,    0,  115,    0,  521,    0, \n            0,    0,  440,  440,    0,  440,  440,  440,  440,  440, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  521,    0,    0,  440, \n          440,  440,  440,  440,  440,  440,  440,  440,  440,  440, \n          440,  440,  440,  429,    0,  440,  440,  440,  440,    0, \n            0,    0,    0,  429,  440,    0,    0,    0,    0,    0, \n            0,  440,    0,  440,    0,  440,  440,  440,  440,  440, \n          440,  440,    0,  440,  440,  440,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  522,  522,  522,    0,    0, \n            0,  522,  522,    0,  522,    0,    0,    0,    0,  440, \n            0,    0,  429,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  522,  522,    0,  522,  522,  522,  522, \n          522,    0,    0,    0,  523,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  523,    0,    0,    0,    0,    0, \n          522,  522,  522,  522,  522,  522,  522,  522,  522,  522, \n          522,  522,  522,  522,    0,    0,  522,  522,  522,  522, \n            0,  534,    0,    0,    0,  522,    0,    0,   98,    0, \n            0,    0,  522,    0,  522,    0,  522,  522,  522,  522, \n          522,  522,  522,  523,  522,  117,  522,  523,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  521,  521,  521, \n            0,    0,    0,  521,  521,    0,  521,    0,    0,    0, \n          522,    0,    0,    0,    0,  523,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  521,  521,    0,  521,  521, \n          521,  521,  521,    0,    0,    0,  524,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  524,    0,    0,    0, \n            0,    0,  521,  521,  521,  521,  521,  521,  521,  521, \n          521,  521,  521,  521,  521,  521,    0,    0,  521,  521, \n          521,  521,    0,  533,    0,    0,    0,  521,    0,    0, \n           99,    0,    0,    0,  521,    0,  521,    0,  521,  521, \n          521,  521,  521,  521,  521,  524,  521,  118,  521,  524, \n            0,    0,    0,    0,    0,  429,  429,  429,    0,    0, \n          429,  429,  429,  526,  429,    0,    0,    0,    0,    0, \n            0,    0,  521,  526,  429,    0,    0,  524,    0,    0, \n            0,    0,    0,  429,  429,    0,  429,  429,  429,  429, \n          429,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  101,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  429,  526,    0,  120,    0,  526,    0,  429,  429, \n            0,    0,    0,    0,    0,  429,  523,  523,  523,    0, \n            0,    0,  523,  523,    0,  523,    0,    0,    0,    0, \n            0,    0,    0,    0,  526,    0,  429,    0,    0,    0, \n            0,    0,    0,    0,  523,  523,    0,  523,  523,  523, \n          523,  523,    0,    0,    0,  525,    0,    0,    0,    0, \n          429,    0,    0,    0,    0,  525,    0,    0,    0,    0, \n            0,  523,  523,  523,  523,  523,  523,  523,  523,  523, \n          523,  523,  523,  523,  523,    0,    0,  523,  523,  523, \n          523,    0,  535,    0,    0,    0,  523,    0,    0,  100, \n            0,    0,    0,  523,    0,  523,    0,  523,  523,  523, \n          523,  523,  523,  523,  525,  523,  119,  523,  525,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  524,  524, \n          524,    0,    0,    0,  524,  524,    0,  524,    0,    0, \n            0,  523,    0,    0,    0,    0,  525,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  524,  524,    0,  524, \n          524,  524,  524,  524,    0,    0,    0,   52,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,   52,    0,    0, \n            0,    0,    0,  524,  524,  524,  524,  524,  524,  524, \n          524,  524,  524,  524,  524,  524,  524,    0,    0,  524, \n          524,  524,  524,    0,  536,  526,  526,  526,  524,    0, \n            0,  526,  526,    0,  526,  524,    0,  524,    0,  524, \n          524,  524,  524,  524,  524,  524,   52,  524,    0,  524, \n            0,    0,    0,  526,  526,    0,  526,  526,  526,  526, \n          526,    0,    0,    0,  527,    0,    0,    0,    0,    0, \n            0,    0,    0,  524,  527,    0,    0,    0,    0,    0, \n          526,  526,  526,  526,  526,  526,  526,  526,  526,  526, \n          526,  526,  526,  526,    0,    0,  526,  526,  526,  526, \n            0,  538,    0,    0,    0,  526,    0,    0,  102,    0, \n            0,    0,  526,    0,  526,    0,  526,  526,  526,  526, \n          526,  526,  526,  527,  526,  121,  526,  527,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  525,  525,  525, \n            0,    0,    0,  525,  525,    0,  525,    0,    0,    0, \n          526,    0,    0,    0,    0,  527,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  525,  525,    0,  525,  525, \n          525,  525,  525,    0,    0,    0,  518,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  518,    0,    0,    0, \n            0,    0,  525,  525,  525,  525,  525,  525,  525,  525, \n          525,  525,  525,  525,  525,  525,    0,    0,  525,  525, \n          525,  525,    0,  537,    0,    0,    0,  525,    0,    0, \n           93,    0,    0,    0,  525,    0,  525,    0,  525,  525, \n          525,  525,  525,  525,  525,  518,  525,  112,  525,  518, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,   52, \n           52,   52,    0,  517,   52,   52,   52,    0,   52,    0, \n            0,    0,  525,  517,    0,    0,    0,  518,   52,    0, \n            0,    0,    0,    0,    0,    0,    0,   52,   52,    0, \n           52,   52,   52,   52,   52,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,   92,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  517,    0,  111,    0,  517,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  527,  527,  527,   52, \n            0,    0,  527,  527,    0,  527,    0,    0,    0,    0, \n            0,    0,    0,    0,  517,    0,    0,    0,    0,    0, \n           52,    0,    0,    0,  527,  527,    0,  527,  527,  527, \n          527,  527,    0,    0,    0,  520,    0,    0,    0,    0, \n            0,    0,    0,    0,   52,  520,    0,    0,    0,    0, \n            0,  527,  527,  527,  527,  527,  527,  527,  527,  527, \n          527,  527,  527,  527,  527,    0,    0,  527,  527,  527, \n          527,    0,  539,    0,    0,    0,  527,    0,    0,   95, \n            0,    0,    0,  527,    0,  527,    0,  527,  527,  527, \n          527,  527,  527,  527,  520,  527,  114,  527,  520,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  518,  518, \n          518,    0,    0,    0,  518,  518,    0,  518,    0,    0, \n            0,  527,    0,    0,    0,    0,  520,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  518,  518,    0,  518, \n          518,  518,  518,  518,    0,    0,    0,    0,    0,   60, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,   60, \n            0,    0,    0,  518,  518,  518,  518,  518,  518,  518, \n          518,  518,  518,  518,  518,  518,  518,    0,    0,  518, \n          518,  518,  518,    0,  530,  517,  517,  517,  518,    0, \n            0,  517,  517,    0,  517,  518,    0,  518,    0,  518, \n          518,  518,  518,  518,  518,  518,    0,  518,   60,  518, \n            0,    0,    0,  517,  517,    0,  517,  517,  517,  517, \n          517,    0,    0,    0,  306,    0,    0,    0,    0,    0, \n            0,    0,    0,  518,  306,    0,    0,    0,    0,    0, \n          517,  517,  517,  517,  517,  517,  517,  517,  517,  517, \n          517,  517,  517,  517,    0,    0,  517,  517,  517,  517, \n            0,  529,    0,    0,    0,  517,    0,    0,  109,    0, \n            0,    0,  517,    0,  517,    0,  517,  517,  517,  517, \n          517,  517,  517,  306,  517,  128,  517,  306,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  520,  520,  520, \n            0,    0,    0,  520,  520,    0,  520,    0,    0,    0, \n          517,    0,    0,    0,    0,  306,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  520,  520,    0,  520,  520, \n          520,  520,  520,    0,    0,    0,  317,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  317,    0,    0,    0, \n            0,    0,  520,  520,  520,  520,  520,  520,  520,  520, \n          520,  520,  520,  520,  520,  520,    0,    0,  520,  520, \n          520,  520,    0,  532,    0,    0,    0,  520,    0,    0, \n          108,    0,    0,    0,  520,    0,  520,    0,  520,  520, \n          520,  520,  520,  520,  520,  317,  520,  127,  520,  317, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   60,   60,   60,    0,    0,   60,   60,   60,    0, \n           60,    0,  520,    0,    0,    0,    0,  317,    0,    0, \n           60,   60,    0,    0,    0,    0,    0,    0,  229,   60, \n           60,    0,   60,   60,   60,   60,   60,    0,  229,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  229,    0,    0,    0,  306,  306,  306,    0, \n            0,   60,  306,  306,   60,  306,  229,  229,    0,    0, \n            0,  229,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   60,    0,  306,  306,    0,  306,  306,  306, \n          306,  306,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,   60,    0,    0,    0, \n            0,  306,  306,  306,  306,  306,  306,  306,  306,  306, \n          306,  306,  306,  306,  306,    0,    0,  306,  306,  306, \n          306,    0,    0,    0,    0,    0,  306,    0,    0,    0, \n            0,    0,    0,  306,    0,  306,  230,  306,  306,  306, \n          306,  306,  306,  306,    0,  306,  230,  306,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  317,  317, \n          317,    0,    0,    0,  317,  317,    0,  317,    0,    0, \n            0,  306,    0,    0,    0,    0,    0,    0,    0,    0, \n          230,    0,    0,    0,    0,    0,  317,  317,    0,  317, \n          317,  317,  317,  317,  230,  230,    0,    0,    0,  230, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  317,  317,  317,  317,  317,  317,  317, \n          317,  317,  317,  317,  317,  317,  317,    0,    0,  317, \n          317,  317,  317,    0,    0,    0,    0,    0,  317,    0, \n            0,    0,    0,    0,    0,  317,    0,  317,    0,  317, \n          317,  317,  317,  317,  317,  317,    0,  317,    0,  317, \n          229,  229,  229,    0,    0,  229,  229,  229,    0,  229, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  229, \n          229,    0,    0,  317,    0,    0,    0,    0,  229,  229, \n            0,  229,  229,  229,  229,  229,    0,    0,    0,    0, \n            0,    0,    0,  229,  306,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  306,    0,  229,  229,  229,  229, \n          229,  229,  229,  229,  229,  229,    0,  229,  229,    0, \n            0,  229,  229,    0,    0,    0,    0,  229,    0,    0, \n          229,    0,    0,  229,    0,  229,    0,    0,  306,  229, \n            0,    0,    0,  229,  229,  229,  229,  229,    0,  229, \n            0,  229,    0,  306,    0,  128,    0,  306,    0,    0, \n            0,    0,    0,  229,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  229,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  306,    0,    0,  230,  230, \n          230,    0,    0,  230,  230,  230,    0,  230,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  230,  230,    0, \n            0,    0,    0,    0,    0,    0,  230,  230,    0,  230, \n          230,  230,  230,  230,    0,    0,    0,    0,    0,    0, \n            0,  230,  250,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  250,    0,  230,  230,  230,  230,  230,  230, \n          230,  230,  230,  230,    0,  230,  230,    0,    0,  230, \n          230,    0,    0,    0,    0,  230,    0,    0,  230,    0, \n            0,  230,    0,  230,    0,    0,  250,  230,    0,    0, \n            0,  230,  230,  230,  230,  230,    0,  230,    0,  230, \n          250,  250,    0,    0,    0,  250,    0,    0,    0,    0, \n            0,  230,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  230,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  251,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  251,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  306,  306,  306,    0, \n            0,    0,  306,  306,    0,  306,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  251,    0, \n            0,    0,    0,    0,  306,  306,    0,  306,  306,  306, \n          306,  306,  251,  251,    0,    0,    0,  251,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  306,  306,  306,  306,  306,  306,  306,  306,  306, \n          306,  306,  306,  306,  306,    0,    0,  306,  306,  306, \n          306,    0,    0,    0,    0,    0,  306,    0,    0,    0, \n            0,    0,    0,  306,    0,  306,    0,  306,  306,  306, \n          306,  306,  306,  306,    0,  306,    0,  306,    0,    0, \n            0,  240,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  240,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  306,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  250,  250,  250,    0,    0,  250, \n          250,  250,    0,  250,    0,  240,    0,    0,    0,    0, \n            0,    0,    0,  250,  250,    0,    0,    0,    0,  240, \n          240,    0,  250,  250,  240,  250,  250,  250,  250,  250, \n            0,    0,    0,    0,    0,    0,    0,  250,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          250,  250,  250,  250,  250,  250,  250,  250,  250,  250, \n            0,  250,  250,    0,    0,  250,  250,    0,    0,    0, \n            0,  250,    0,    0,  250,    0,    0,  250,  238,  250, \n            0,    0,    0,  250,    0,    0,    0,    0,  238,  250, \n          250,  250,    0,  250,    0,  250,  251,  251,  251,    0, \n            0,  251,  251,  251,    0,  251,    0,  250,    0,    0, \n            0,    0,    0,    0,    0,  251,  251,    0,    0,  250, \n            0,    0,  238,    0,  251,  251,    0,  251,  251,  251, \n          251,  251,    0,    0,    0,    0,  238,  238,    0,  251, \n            0,  238,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  251,  251,  251,  251,  251,  251,  251,  251, \n          251,  251,    0,  251,  251,    0,    0,  251,  251,    0, \n            0,    0,    0,  251,    0,    0,  251,    0,    0,  251, \n            0,  251,    0,    0,    0,  251,    0,    0,    0,    0, \n            0,  251,  251,  251,    0,  251,    0,  251,    0,    0, \n            0,    0,    0,    0,  239,    0,    0,    0,    0,  251, \n            0,    0,    0,    0,  239,    0,    0,    0,    0,    0, \n            0,  251,    0,  240,  240,  240,    0,    0,  240,  240, \n          240,    0,  240,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  240,  240,    0,    0,    0,    0,  239,    0, \n            0,  240,  240,    0,  240,  240,  240,  240,  240,    0, \n            0,    0,  239,  239,    0,    0,  240,  239,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  240, \n          240,  240,  240,  240,  240,  240,  240,  240,  240,    0, \n          240,  240,    0,    0,    0,    0,    0,    0,    0,    0, \n          240,    0,    0,  240,    0,    0,  240,  261,  240,    0, \n            0,    0,  240,    0,    0,    0,    0,  261,  240,  240, \n          240,    0,  240,    0,  240,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  240,    0,    0,    0, \n          238,  238,  238,    0,    0,  238,  238,  238,  240,  238, \n            0,  261,    0,    0,    0,    0,    0,    0,    0,  238, \n          238,    0,    0,    0,    0,  261,  261,    0,  238,  238, \n          261,  238,  238,  238,  238,  238,    0,    0,    0,    0, \n            0,    0,    0,  238,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  238,  238,  238,  238, \n          238,  238,  238,  238,  238,  238,    0,  238,  238,    0, \n            0,    0,    0,    0,    0,    0,    0,  238,    0,    0, \n          238,    0,    0,  238,    0,  238,    0,    0,    0,    0, \n            0,    0,    0,  262,    0,  238,  238,  238,    0,  238, \n            0,  238,    0,  262,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  238,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  238,  239,  239,  239,    0, \n            0,  239,  239,  239,    0,  239,    0,  262,    0,    0, \n            0,    0,    0,    0,    0,  239,  239,    0,    0,    0, \n            0,  262,  262,    0,  239,  239,  262,  239,  239,  239, \n          239,  239,    0,    0,    0,    0,    0,    0,    0,  239, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  239,  239,  239,  239,  239,  239,  239,  239, \n          239,  239,    0,  239,  239,    0,    0,    0,    0,    0, \n            0,    0,    0,  239,    0,    0,  239,    0,  243,  239, \n            0,  239,    0,    0,    0,    0,    0,    0,  243,    0, \n            0,  239,  239,  239,    0,  239,    0,  239,    0,  261, \n          261,  261,    0,    0,  261,  261,  261,    0,  261,  239, \n            0,    0,    0,    0,    0,    0,    0,    0,  261,  261, \n            0,  239,  243,    0,    0,    0,    0,  261,  261,    0, \n          261,  261,  261,  261,  261,    0,  243,  243,    0,    0, \n            0,  243,  261,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  261,  261,  261,  261,  261, \n          261,  261,  261,  261,  261,    0,  261,  261,    0,    0, \n            0,    0,    0,    0,    0,    0,  261,    0,    0,  261, \n            0,    0,  261,    0,  261,    0,    0,    0,    0,    0, \n            0,    0,  244,    0,  261,  261,    0,    0,    0,    0, \n          261,    0,  244,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  261,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  261,  262,  262,  262,    0,    0, \n          262,  262,  262,    0,  262,    0,  244,    0,    0,    0, \n            0,    0,    0,    0,  262,  262,    0,    0,    0,    0, \n          244,  244,    0,  262,  262,  244,  262,  262,  262,  262, \n          262,    0,    0,    0,    0,    0,    0,    0,  262,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  262,  262,  262,  262,  262,  262,  262,  262,  262, \n          262,    0,  262,  262,    0,    0,    0,    0,    0,    0, \n            0,    0,  262,    0,    0,  262,    0,  245,  262,    0, \n          262,    0,    0,    0,    0,    0,    0,  245,    0,    0, \n          262,  262,    0,    0,    0,    0,  262,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  262,    0, \n          243,  243,  243,    0,    0,  243,  243,  243,    0,  243, \n          262,  245,    0,    0,    0,    0,    0,    0,    0,  243, \n          243,    0,    0,    0,    0,  245,  245,    0,  243,  243, \n          245,  243,  243,  243,  243,  243,    0,    0,    0,    0, \n            0,    0,    0,  243,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  243,  243,    0,    0,    0,  243,  243,    0, \n            0,    0,    0,    0,    0,    0,    0,  243,    0,    0, \n          243,    0,    0,  243,    0,  243,    0,    0,    0,    0, \n            0,    0,    0,  252,    0,    0,    0,    0,    0,    0, \n            0,  243,    0,  252,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  243,  244,  244,  244,    0,    0,  244, \n          244,  244,    0,  244,    0,  243,    0,    0,    0,    0, \n            0,    0,    0,  244,  244,    0,    0,  252,    0,    0, \n            0,    0,  244,  244,    0,  244,  244,  244,  244,  244, \n            0,  252,  252,    0,    0,    0,  252,  244,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  244,  244,    0,    0, \n            0,  244,  244,    0,    0,    0,    0,    0,    0,    0, \n            0,  244,    0,    0,  244,    0,  246,  244,    0,  244, \n            0,    0,    0,    0,    0,    0,  246,    0,    0,    0, \n            0,    0,    0,    0,    0,  244,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  244,    0,  245, \n          245,  245,    0,    0,  245,  245,  245,    0,  245,  244, \n          246,    0,    0,    0,    0,    0,    0,    0,  245,  245, \n            0,    0,    0,    0,  246,  246,    0,  245,  245,  246, \n          245,  245,  245,  245,  245,    0,    0,    0,    0,    0, \n            0,    0,  245,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  247,    0,    0,    0,    0, \n            0,  245,  245,    0,    0,  247,  245,  245,    0,    0, \n            0,    0,    0,    0,    0,    0,  245,    0,    0,  245, \n            0,    0,  245,    0,  245,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  247, \n          245,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  245,  247,  247,    0,    0,    0,  247,    0, \n            0,    0,    0,    0,  245,  252,  252,  252,    0,    0, \n          252,  252,  252,    0,  252,    0,    0,    0,    0,    0, \n            0,  253,    0,    0,  252,  252,    0,    0,    0,    0, \n            0,  253,    0,  252,  252,    0,  252,  252,  252,  252, \n          252,    0,    0,    0,    0,    0,    0,    0,  252,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  253,    0,  252,  252,    0, \n            0,    0,  252,  252,    0,    0,    0,    0,    0,  253, \n          253,    0,  252,    0,  253,  252,    0,    0,  252,    0, \n          252,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  252,    0,  246,  246, \n          246,    0,    0,  246,  246,  246,    0,  246,  252,  227, \n            0,    0,    0,    0,    0,    0,    0,  246,  246,  227, \n          252,    0,    0,    0,    0,    0,  246,  246,    0,  246, \n          246,  246,  246,  246,    0,    0,    0,    0,    0,    0, \n            0,  246,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  227,    0,    0,    0,    0,    0,    0, \n          246,  246,    0,    0,    0,  246,  246,  227,  227,    0, \n            0,    0,  227,    0,    0,  246,    0,    0,  246,    0, \n            0,  246,    0,  246,    0,    0,    0,  247,  247,  247, \n            0,    0,  247,  247,  247,    0,  247,    0,  228,  246, \n            0,    0,    0,    0,    0,    0,  247,  247,  228,    0, \n            0,  246,    0,    0,    0,  247,  247,    0,  247,  247, \n          247,  247,  247,  246,    0,    0,    0,    0,    0,    0, \n          247,    0,    0,    0,    0,    0,    0,  255,    0,    0, \n            0,    0,  228,    0,    0,    0,    0,  255,    0,  247, \n          247,    0,    0,    0,  247,  247,  228,  228,    0,    0, \n            0,  228,    0,    0,  247,    0,    0,  247,    0,    0, \n          247,    0,  247,  253,  253,  253,    0,    0,  253,  253, \n          253,  255,  253,    0,    0,    0,    0,    0,  247,    0, \n            0,    0,  253,  253,    0,  255,  255,    0,    0,    0, \n          247,  253,  253,    0,  253,  253,  253,  253,  253,    0, \n            0,    0,  247,    0,    0,    0,  253,    0,    0,    0, \n            0,    0,    0,    0,  220,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  220,    0,  253,    0,    0,    0, \n          253,  253,    0,    0,    0,    0,    0,    0,    0,    0, \n          253,    0,    0,  253,    0,    0,  253,    0,  253,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  220,    0, \n            0,  227,  227,  227,  253,    0,  227,  227,  227,    0, \n          227,    0,  220,  220,    0,    0,  253,    0,    0,    0, \n          227,  227,    0,    0,    0,    0,    0,    0,  253,  227, \n          227,    0,  227,  227,  227,  227,  227,    0,    0,    0, \n            0,  263,    0,    0,  227,    0,    0,    0,    0,    0, \n            0,  263,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  227,    0, \n            0,  227,    0,    0,  227,  263,  227,    0,    0,    0, \n          228,  228,  228,    0,    0,  228,  228,  228,    0,  228, \n          263,    0,  227,    0,    0,    0,    0,    0,    0,  228, \n          228,    0,    0,    0,  227,    0,    0,    0,  228,  228, \n            0,  228,  228,  228,  228,  228,  227,  268,    0,  255, \n          255,  255,    0,  228,  255,  255,  255,  268,  255,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  255,  255, \n            0,    0,    0,    0,    0,    0,    0,  255,  255,    0, \n          255,  255,  255,  255,  255,    0,    0,  228,    0,    0, \n          228,  268,  255,  228,    0,  228,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  268,  268,    0,    0,    0, \n            0,  228,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  228,    0,    0,  255,    0,    0,  255, \n            0,    0,  255,    0,  255,  228,  220,  220,  220,    0, \n            0,  220,  220,  220,    0,  220,    0,    0,    0,  288, \n          255,    0,    0,    0,    0,  220,  220,    0,    0,  288, \n            0,    0,  255,    0,  220,  220,    0,  220,  220,  220, \n          220,  220,    0,    0,  255,    0,    0,    0,    0,  220, \n            0,    0,    0,    0,    0,    0,    0,  290,    0,    0, \n            0,    0,    0,  288,    0,    0,    0,  290,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  288,    0, \n            0,    0,    0,  220,    0,    0,  220,    0,    0,  220, \n            0,  220,    0,  263,  263,  263,    0,    0,  263,  263, \n          263,  290,  263,    0,    0,    0,    0,  220,    0,    0, \n            0,    0,  263,  263,    0,    0,  290,    0,    0,  220, \n            0,  263,  263,    0,  263,  263,  263,  263,  263,    0, \n            0,  220,    0,    0,    0,    0,  263,    0,    0,    0, \n            0,    0,    0,    0,    0,  649,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  649,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          263,    0,    0,  263,    0,    0,  263,    0,  263,  268, \n          268,  268,    0,   64,  268,  268,  268,    0,  268,    0, \n            0,    0,    0,   64,  263,    0,    0,    0,  268,  268, \n            0,    0,    0,    0,  649,    0,  263,  268,  268,    0, \n          268,  268,  268,  268,    0,    0,    0,    0,  263,    0, \n            0,    0,  268,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   64,    0,    0,    0,    0,    0,   62,    0, \n            0,    0,    0,    0,    0,    0,  268,    0,   62,  268, \n            0,    0,  268,    0,  268,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          268,  288,  288,  288,    0,   54,  288,  288,  288,    0, \n          288,    0,  268,    0,    0,   54,    0,    0,    0,    0, \n          288,  288,    0,    0,  268,    0,    0,   62,    0,  288, \n          288,    0,  288,  288,  288,  288,  288,    0,    0,  290, \n          290,  290,    0,    0,  290,  290,  290,    0,  290,    0, \n            0,    0,    0,    0,    0,   56,    0,    0,  290,  290, \n            0,    0,    0,    0,   54,   56,    0,  290,  290,    0, \n          290,  290,  290,  290,  290,    0,    0,    0,    0,    0, \n            0,  288,    0,    0,  288,    0,  288,    0,    0,    0, \n            0,    0,    0,    0,   57,    0,    0,    0,    0,    0, \n            0,    0,  288,    0,   57,    0,    0,    0,    0,    0, \n          296,    0,    0,    0,   56,  291,    0,    0,    0,  290, \n          296,    0,  290,    0,  290,    0,  288,  649,  649,  649, \n            0,    0,  649,  649,  649,    0,  649,    0,    0,    0, \n          290,    0,    0,    0,    0,    0,  649,  649,    0,    0, \n            0,    0,    0,   57,  289,  649,  649,    0,  649,  649, \n          649,  649,  649,    0,  290,   64,   64,   64,  394,  296, \n           64,   64,   64,    0,   64,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   64,   64,    0,    0,    0,    0, \n            0,    0,    0,   64,   64,    0,   64,   64,   64,   64, \n           64,    0,    0,    0,    0,    0,    0,  649,    0,    0, \n          649,    0,  649,    0,    0,    0,  294,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  294,    0,  649,    0, \n           62,   62,   62,    0,    0,   62,   62,   62,    0,   62, \n            0,    0,    0,    0,    0,   64,    0,    0,   64,   62, \n           62,    0,  649,    0,    0,    0,    0,    0,   62,   62, \n          290,   62,   62,   62,   62,   62,   64,   54,   54,   54, \n          295,    0,   54,   54,   54,  294,   54,    0,    0,    0, \n          295,    0,    0,    0,    0,    0,   54,    0,    0,    0, \n           64,    0,    0,    0,    0,   54,   54,    0,   54,   54, \n           54,   54,   54,    0,    0,    0,    0,    0,    0,    0, \n           62,    0,    0,   62,  291,    0,    0,   56,   56,   56, \n            0,    0,   56,   56,   56,    0,   56,    0,    0,  295, \n            0,   62,    0,    0,    0,    0,   56,    0,    0,    0, \n            0,    0,    0,    0,    0,   56,   56,   54,   56,   56, \n           56,   56,   56,    0,    0,   62,   57,   57,   57,    0, \n            0,   57,   57,   57,    0,   57,    0,    0,   54,    0, \n            0,    0,  296,  296,  296,   57,  291,  296,  296,  296, \n            0,  296,    0,    0,   57,   57,    0,   57,   57,   57, \n           57,   57,   54,    0,    0,    0,    0,   56,    0,    0, \n            0,    0,    0,  296,  296,  296,  296,  296,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,   56,    0, \n            0,    0,  369,  370,  371,  372,  373,  374,  375,  376, \n          377,  378,  379,    0,  380,  381,   57,    0,  382,  383, \n            0,    0,   56,    0,    0,    0,    0,    0,    0,  296, \n            0,    0,  296,    0,  384,    0,  385,   57,  386,  387, \n          388,  389,  390,  391,  392,    0,  393,    0,    0,    0, \n            0,    0,    0,  296,    0,    0,    0,    0,  294,  294, \n          294,   57,    0,  294,  294,  294,    0,  294,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  296,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  129,    0,  294, \n          294,  294,  294,  294,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  295,  295,  295,    0,    0,  295,  295,  295, \n            0,  295,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  294,  129,    0,  294,    0, \n            0,    0,    0,  295,  295,  295,  295,  295,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  294, \n            0,    0,    0,    0,    0,    0,    0,    0,  516,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  294,    0,    0,    0,    0,    0,  295, \n            0,    0,  295,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    4,    5,    6,    0,    8,    0,    0, \n            0,    9,   10,  295,    0,    0,   11,    0,   12,   13, \n           14,   15,   16,   17,   18,    0,  130,    0,    0,   19, \n           20,   21,  212,  213,  214,  215,    0,  295,  249,    0, \n            0,    0,    0,    0,    0,   28,    0,    0,  216,  217, \n          218,    0,  219,   35,  220,  221,  222,  223,  269,   40, \n           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  130,    0,    0,    0,    0, \n            0,    0,    0,  224,    0,    0,  225,    0,    0,   46, \n           47,    0,   48,    0,  270,    0,  271,    0,   50,    0, \n            0,    0,    0,    0,    0,    0,  272,  519,    0,    0, \n            0,   52,  273,   54,   55,   56,   57,    0,    0,    0, \n           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, \n           65,   66,  274,  129,  129,  129,  129,  129,  129,  129, \n          129,  129,  129,  129,    0,    0,  129,  129,    0,  129, \n          129,  129,  129,  129,  129,  129,    0,  619,    0,  129, \n          129,  129,  129,  129,  129,  129,  129,    0,    0,  129, \n            0,    0,    0,    0,    0,  129,  129,    0,  129,  129, \n          129,  129,    0,  129,  129,  129,  129,  129,  129,    0, \n          129,  129,  129,  129,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  516,    0,    0,  129,    0, \n            0,    0,  516,  516,  129,    0,    0,  129,  619,    0, \n          129,  129,    0,  129,    0,  129,    0,    0,    0,  129, \n            0,    0,    0,    0,  129,    0,    0,  129,    0,  619, \n          626,    0,  129,  129,  129,  129,  129,  129,    0,    0, \n            0,  129,    0,  129,  129,    0,  129,  129,  129,  129, \n            0,  129,  129,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  130,  130,  130,  130,  130,  130,  130,  130, \n          130,  130,  130,    0,    0,  130,  130,    0,  130,  130, \n          130,  130,  130,  130,  130,    0,  620,    0,  130,  130, \n          130,  130,  130,  130,  130,  130,    0,    0,  130,    0, \n            0,    0,    0,    0,  130,  130,    0,  130,  130,  130, \n          130,    0,  130,  130,  130,  130,  130,  130,    0,  130, \n          130,  130,  130,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  519,    0,    0,  130,    0,    0, \n            0,  519,  519,  130,    0,    0,  130,  620,    0,  130, \n          130,    0,  130,    0,  130,    0,    0,    0,  130,    0, \n            0,    0,    0,  130,    0,    0,  130,    0,  620,  316, \n            0,  130,  130,  130,  130,  130,  130,    0,    0,    0, \n          130,    0,  130,  130,    0,  130,  130,  130,  130,    0, \n          130,  130,    0,    0,    0,  129,  129,  129,  129,  129, \n          129,  129,  129,  129,  129,  129,    0,    0,  129,  129, \n            0,  129,  129,  129,  129,  129,  129,  129,    0,  626, \n            0,  130,  129,  129,  129,  129,  129,  129,  129,    0, \n            0,  129,    0,    0,    0,    0,    0,  129,  129,    0, \n          129,  129,  129,  129,    0,  129,  129,  129,  129,  129, \n          129,    0,  129,  129,  129,  129,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  626,    0,    0, \n          130,    0,    0,    0,  626,  626,  129,    0,    0,  129, \n          622,    0,  129,  129,    0,  129,    0,  129,    0,    0, \n            0,  129,    0,    0,    0,    0,  129,    0,    0,  129, \n            0,  626,  317,    0,  129,  129,  129,  129,  129,  129, \n            0,    0,    0,  129,    0,  129,  129,    0,  129,  129, \n          129,  129,    0,  129,  129,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  130,  130,  130,  130,  130,  130, \n          130,  130,  130,  130,  130,    0,    0,  130,  130,    0, \n          130,  130,  130,  130,  130,  130,  130,    0,  364,    0, \n            0,  130,  130,  130,  130,  130,  130,  130,    0,    0, \n          130,    0,    0,    0,    0,    0,  130,  130,    0,  130, \n          130,  130,  130,    0,  130,  130,  130,  130,  130,  130, \n            0,  130,  130,  130,  130,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  316,  364,    0,    0, \n            0,    0,    0,  316,  316,  130,    0,    0,  130,  623, \n            0,  130,  130,    0,  130,    0,  130,    0,    0,    0, \n          130,    0,    0,    0,    0,  130,    0,    0,  130,    0, \n            0,    0,    0,  130,  130,  130,  130,  130,  130,    0, \n            0,    0,  130,    0,  130,  130,    0,  130,  130,  130, \n          130,    0,  130,  130,    0,    0,    0,  130,  130,  130, \n          130,  130,  130,  130,  130,  130,  130,  130,    0,    0, \n          130,  130,    0,  130,  130,  130,  130,  130,  130,  130, \n            0,  308,    0,    0,  130,  130,  130,  130,  130,  130, \n          130,    0,    0,  130,    0,    0,    0,    0,    0,  130, \n          130,    0,  130,  130,  130,  130,    0,  130,  130,  130, \n          130,  130,  130,    0,  130,  130,  130,  130,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  317, \n          308,    0,    0,    0,    0,    0,  317,  317,  130,    0, \n            0,  130,    0,    0,  130,  130,    0,  130,    0,  130, \n            0,    0,    0,  130,    0,    0,    0,    0,  130,    0, \n            0,  130,    0,    0,    0,    0,  130,  130,  130,  130, \n          130,  130,    0,    0,    0,  130,    0,  130,  130,    0, \n          130,  130,  130,  130,    0,  130,  130,    0,    0,    0, \n            0,    0,    0,    0,  364,  364,  364,  364,  364,  364, \n          364,  364,  364,  364,  364,    0,  364,  364,  364,  364, \n          364,  364,  364,  364,  364,  364,  364,  544,    0,    0, \n            0,  364,  364,  364,  364,  364,  364,  364,    0,    0, \n          364,    0,    0,    0,    0,    0,  364,  364,    0,  364, \n          364,  364,  364,    0,  364,  364,  364,  364,  364,  364, \n            0,  364,  364,  364,  364,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  544,    0,    0,    0, \n            0,    0,    0,    0,    0,  364,    0,    0,  364,    0, \n            0,  364,  364,    0,  364,    0,  364,    0,    0,    0, \n          364,    0,    0,    0,    0,    0,    0,    0,  364,    0, \n            0,    0,    0,  364,  364,  364,  364,  364,  364,    0, \n            0,    0,  364,    0,  364,  364,    0,  364,  364,  364, \n          364,    0,  364,  364,    0,    0,    0,  308,  308,  308, \n          308,  308,  308,  308,  308,  308,  308,  308,    0,    0, \n          308,  308,    0,  308,  308,  308,  308,  308,  308,  308, \n          648,    0,    0,    0,  308,  308,  308,  308,  308,  308, \n          308,    0,    0,  308,    0,    0,    0,    0,    0,  308, \n          308,    0,  308,  308,  308,  308,    0,  308,  308,  308, \n          308,  308,  308,    0,  308,  308,  308,  308,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  648, \n            0,    0,    0,    0,    0,    0,    0,    0,  308,    0, \n            0,  308,    0,    0,  308,  308,    0,  308,    0,  308, \n            0,    0,    0,  308,    0,    0,    0,    0,    0,    0, \n            0,  308,    0,   17,    0,    0,  308,  308,  308,  308, \n          308,  308,    0,    0, \n      };\n   }\n\n   private static final short[] yyTable4() {\n      return new short[] {\n\n            0,  308,    0,  308,  308,    0,  308,  308,  308,  308, \n            0,  308,  308,    0,    0,    0,    0,    0,    0,  544, \n          544,  544,  544,  544,  544,  544,  544,  544,  544,  544, \n            0,    0,  544,  544,    0,  544,  544,  544,  544,  544, \n          544,  544,  648,    0,    0,    0,  544,  544,  544,  544, \n          544,  544,  544,    0,    0,  544,    0,    0,    0,    0, \n            0,  544,  544,    0,  544,  544,  544,  544,    0,  544, \n          544,  544,  544,  544,  544,    0,  544,  544,  544,  544, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  648,    0,    0,    0,    0,    0,    0,    0,    0, \n          544,    0,    0,  544,    0,    0,  544,  544,    0,  544, \n            0,  544,    0,    0,    0,  544,    0,    0,    0,    0, \n            0,    0,    0,  544,    0,    0,    0,    0,  544,  544, \n          544,  544,  544,  544,    0,    0,    0,  544,    0,  544, \n          544,    0,  544,  544,  544,  544,    0,  544,  544,    0, \n            0,    0,  648,  648,  648,  648,  648,  648,  648,  648, \n          648,  648,  648,    0,    0,  648,  648,    0,  648,  648, \n          648,  648,  648,  648,  648,  310,    0,    0,    0,  648, \n          648,  648,  648,  648,  648,  648,    0,    0,  648,    0, \n            0,    0,    0,    0,  648,  648,    0,  648,  648,  648, \n          648,    0,  648,  648,  648,  648,  648,  648,    0,  648, \n          648,  648,  648,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  648,    0,    0,  648,    0,    0,  648, \n          648,    0,  648,    0,  648,    0,    0,    0,  648,    0, \n            0,    0,    0,    0,    0,    0,  648,    0,    0,    0, \n            0,  648,  648,  648,  648,  648,  648,    0,    0,    0, \n          648,    0,  648,  648,    0,  648,  648,  648,  648,    0, \n          648,  648,    0,    0,    0,    0,    0,    0,  648,  648, \n          648,  648,  648,  648,    0,    0,    0,  648,  648,    0, \n            0,    0,  648,    0,  648,  648,  648,  648,  648,  648, \n          648,  234,    0,    0,    0,  648,  648,  648,  648,  648, \n          648,  648,    0,    0,  648,    0,    0,    0,    0,    0, \n          648,  648,    0,  648,  648,  648,  648,    0,  648,  648, \n          648,  648,  648,  648,    0,  648,  648,  648,  648,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          233,    0,    0,    0,    0,    0,    0,    0,    0,  648, \n            0,    0,  648,    0,    0,  648,  648,    0,  648,    0, \n          648,    0,    0,    0,  648,    0,    0,    0,    0,    0, \n            0,    0,  648,    0,    0,  648,    0,  648,  648,  648, \n          648,  648,  648,    0,    0,    0,  648,    0,  648,  648, \n            0,  648,  648,  648,  648,    0,  648,  648,    0,    0, \n            0,    0,  312,  312,  312,  312,  312,    0,    0,    0, \n          312,  312,    0,    0,    0,  312,    0,  312,  312,  312, \n          312,  312,  312,  312,  291,    0,    0,    0,  312,  312, \n          312,  312,  312,  312,  312,    0,    0,  312,    0,    0, \n            0,    0,    0,  312,  312,    0,  312,  312,  312,  312, \n            0,  312,  312,  312,  312,  312,  312,    0,  312,  312, \n          312,  312,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  312,    0,    0,  312,    0,  310,  312,  312, \n            0,  312,    0,  312,    0,    0,    0,  312,    0,    0, \n            0,    0,    0,    0,    0,  312,    0,    0,    0,    0, \n          312,  312,  312,  312,  312,  312,    0,    0,    0,  312, \n            0,  312,  312,    0,  312,  312,  312,  312,    0,  312, \n          312,    0,    0,    0,    0,    0,    0,    0,    4,    5, \n            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, \n            0,    0,    0,    0,   19,   20,   21,  212,  213,  214, \n          215,    0,    0,   26,    0,    0,    0,    0,    0,    0, \n           28,    0,    0,  216,  217,  218,    0,  219,   35,  220, \n          221,  222,  223,  336,   40,   41,   42,   43,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, \n            0,  225,    0,    0,   46,   47,    0,   48,    0,    0, \n            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, \n            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,   65,   66,    0,    0,    0, \n            0,    4,    5,    6,    0,    8,    0,    0,    0,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n          212,  213,  214,  215,    0,    0,   26,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  216,  217,  218,    0, \n          219,   35,  220,  221,  222,  223,  644,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  224,    0,    0,  225,    0,    0,   46,   47,    0, \n           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, \n            0,    0,    0,    0,    0,    0,    4,    5,    6,    0, \n            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, \n            0,    0,   19,  243,  244,  323,  324,  325,  326,    0, \n            0,  249,    0,    0,    0,    0,    0,    0,  250,    0, \n            0,  327,  328,  329,    0,  330,   35,  331,  332,  333, \n          334,    0,   40,    0,    0,  259,    0,    0,    0,    0, \n          459,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  335,    0,    0,  225, \n            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,   65,   66,    0,    0,    0,    0,    4, \n            5,    6,    0,    8,    0,    0,    0,    9,   10,    0, \n            0,    0,   11,    0,   12,   13,   14,  241,  242,   17, \n           18,    0,    0,    0,    0,   19,  243,  244,  323,  324, \n          325,  326,    0,    0,  249,    0,    0,    0,    0,    0, \n            0,  250,    0,    0,  327,  328,  329,    0,  330,   35, \n          331,  332,  333,  334,    0,   40,    0,    0,  259,  459, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  335, \n            0,    0,  225,    0,    0,   46,   47,    0,   48,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,   65,   66,    4,    5, \n            6,    7,    8,    0,    0,    0,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,   15,   16,   17,   18, \n            0,    0,    0,    0,   19,   20,   21,   22,   23,   24, \n           25,    0,    0,   26,    0,    0,    0,    0,    0,   27, \n           28,   29,   30,   31,   32,   33,    0,   34,   35,   36, \n           37,   38,   39,    0,   40,   41,   42,   43,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,   44,    0, \n            0,   45,    0,    0,   46,   47,    0,   48,    0,   49, \n            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, \n            0,   51,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,   65,   66,    4,    5,    6, \n            7,  304,    0,    0,    0,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,   15,   16,   17,   18,    0, \n            0,    0,    0,   19,   20,   21,   22,   23,   24,   25, \n            0,    0,   26,    0,    0,    0,    0,    0,   27,   28, \n            0,   30,   31,   32,   33,    0,   34,   35,   36,   37, \n           38,   39,    0,   40,   41,   42,   43,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,   44,    0,    0, \n           45,    0,    0,   46,   47,    0,   48,    0,   49,    0, \n            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, \n           51,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,   65,   66,  112,  113,  114,  115, \n          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, \n          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, \n            0,    0,  136,  137,  138,  139,  140,  141,  142,  143, \n          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, \n          150,  151,  152,  153,    0,  154,  155,  156,  157,  158, \n          159,    0,    0,  160,  161,    0,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, \n          175,    0,    0,    0,    0,    0,    0,  176,  177,    0, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, \n          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, \n          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, \n            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, \n          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, \n          150,  200,  201,  202,    0,  203,  155,  343,  344,  204, \n          345,    0,    0,  160,  161,    0,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, \n          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, \n          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, \n            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, \n          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, \n          150,  200,  201,  202,    0,  203,  155,  293,    0,  204, \n            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,   52,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, \n          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, \n          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, \n            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, \n          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, \n          150,  200,  201,  202,    0,  203,  155,    0,    0,  204, \n            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,   52,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  190,  112,  113,  114,  115, \n          116,  117,  118,  119,  120,  121,  122,  123,  124,  125, \n          126,  127,  128,  129,  130,  131,  132,  133,  134,  135, \n            0,    0,  136,  137,  138,  196,  197,  198,  199,  143, \n          144,  145,    0,    0,    0,    0,  146,  147,  148,  149, \n          150,  200,  201,  202,    0,  203,  155,    0,    0,  204, \n            0,    0,    0,  160,  161,    0,  162,  163,  164,  165, \n          166,  167,  168,    0,    0,  169,  170,    0,    0,    0, \n          171,  172,  173,  174,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  176,  177,    0, \n          178,  179,  180,  181,  182,  183,  184,  185,  186,  187, \n          188,    0,    0,  189,    0,    0,    0,    0,    0,    0, \n            3,    4,    5,    6,    7,    8,    0,    0,    0,    9, \n           10,    0,    0,    0,   11,  190,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, \n            0,    0,   27,   28,   29,   30,   31,   32,   33,    0, \n           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, \n           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, \n          303,    4,    5,    6,    7,  304,    0,    0,    0,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, \n            0,    0,   27,   28,    0,   30,   31,   32,   33,    0, \n           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   44,    0,    0,  305,    0,    0,   46,   47,    0, \n           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, \n          303,    4,    5,    6,    7,  304,    0,    0,    0,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n           22,   23,   24,   25,    0,    0,   26,    0,    0,    0, \n            0,    0,   27,   28,    0,   30,   31,   32,   33,    0, \n           34,   35,   36,   37,   38,   39,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   44,    0,    0,   45,    0,    0,   46,   47,    0, \n           48,    0,   49,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, \n           17,   18,    0,    0,    0,    0,   19,   20,   21,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,  270,    0,  271,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,  698,    0,  271,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n          283,  283,  283,    0,  283,    0,    0,    0,  283,  283, \n            0,    0,    0,  283,    0,  283,  283,  283,  283,  283, \n          283,  283,    0,    0,    0,    0,  283,  283,  283,  283, \n          283,  283,  283,    0,    0,  283,    0,    0,    0,    0, \n            0,    0,  283,    0,    0,  283,  283,  283,    0,  283, \n          283,  283,  283,  283,  283,  283,  283,  283,  283,  283, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          283,    0,    0,  283,    0,    0,  283,  283,    0,  283, \n            0,  283,    0,  283,    0,  283,    0,    0,    0,    0, \n            0,    0,    0,  283,    0,    0,    0,    0,  283,  283, \n          283,  283,  283,  283,    0,    0,    0,  283,    0,  283, \n          283,    0,  283,  283,  283,  283,    0,  283,  283,  283, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,  270,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,    0,    0,  271,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,  698,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,  269,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,  273, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,  274, \n            4,    5,    6,    7,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,   15,   16, \n           17,   18,    0,    0,    0,    0,   19,   20,   21,   22, \n           23,   24,   25,    0,    0,   26,    0,    0,    0,    0, \n            0,   27,   28,   29,   30,   31,   32,   33,    0,   34, \n           35,   36,   37,   38,   39,    0,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n           44,    0,    0,   45,    0,    0,   46,   47,    0,   48, \n            0,   49,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,   51,    0,    0,    0,    0,   52,   53, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,    4, \n            5,    6,    7,    8,    0,    0,    0,    9,   10,    0, \n            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, \n           18,    0,    0,    0,    0,   19,   20,   21,   22,   23, \n           24,   25,    0,    0,   26,    0,    0,    0,    0,    0, \n           27,   28,    0,   30,   31,   32,   33,    0,   34,   35, \n           36,   37,   38,   39,    0,   40,   41,   42,   43,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,   44, \n            0,    0,   45,    0,    0,   46,   47,    0,   48,    0, \n           49,    0,    0,    0,   50,    0,    0,    0,    0,    0, \n            0,    0,   51,    0,    0,    0,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,   65,   66,    4,    5, \n            6,    0,    8,    0,    0,    0,    9,   10,    0,    0, \n            0,   11,    0,   12,   13,   14,  241,  242,   17,   18, \n            0,    0,    0,    0,   19,  243,  244,  212,  213,  214, \n          215,    0,    0,  249,    0,    0,    0,    0,    0,    0, \n           28,    0,    0,  216,  217,  218,    0,  219,   35,  220, \n          221,  222,  223,    0,   40,   41,   42,   43,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  224,    0, \n            0,  225,  496,    0,   46,   47,    0,   48,    0,    0, \n            0,    0,    0,   50,    0,    0,    0,    0,    0,    0, \n            0,  272,    0,    0,    0,    0,   52,   53,   54,   55, \n           56,   57,    0,    0,    0,   58,    0,   59,   60,    0, \n           61,   62,   63,   64,    0,   65,   66,    4,    5,    6, \n            0,    8,    0,    0,    0,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,   15,   16,   17,   18,    0, \n            0,    0,    0,   19,   20,   21,  212,  213,  214,  215, \n            0,    0,  249,    0,    0,    0,    0,    0,    0,   28, \n            0,    0,  216,  217,  218,    0,  219,   35,  220,  221, \n          222,  223,    0,   40,   41,   42,   43,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,  224,    0,    0, \n          225,    0,    0,   46,   47,    0,   48,    0,  636,    0, \n            0,    0,   50,    0,    0,    0,    0,    0,    0,    0, \n          272,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,   65,   66,    4,    5,    6,    0, \n            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, \n            0,    0,   19,  243,  244,  212,  213,  214,  215,    0, \n            0,  249,    0,    0,    0,    0,    0,    0,   28,    0, \n            0,  216,  217,  218,    0,  219,   35,  220,  221,  222, \n          223,    0,   40,   41,   42,   43,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  224,    0,    0,  225, \n            0,    0,   46,   47,    0,   48,    0,  270,    0,    0, \n            0,   50,    0,    0,    0,    0,    0,    0,    0,  272, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,   65,   66,    4,    5,    6,    0,    8, \n            0,    0,    0,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,  241,  242,   17,   18,    0,    0,    0, \n            0,   19,  243,  244,  212,  213,  214,  215,    0,    0, \n          249,    0,    0,    0,    0,    0,    0,   28,    0,    0, \n          216,  217,  218,    0,  219,   35,  220,  221,  222,  223, \n            0,   40,   41,   42,   43,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  224,    0,    0,  225,    0, \n            0,   46,   47,    0,   48,    0,  636,    0,    0,    0, \n           50,    0,    0,    0,    0,    0,    0,    0,  272,    0, \n            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,   65,   66,    4,    5,    6,    0,    8,    0, \n            0,    0,    9,   10,    0,    0,    0,   11,    0,   12, \n           13,   14,  241,  242,   17,   18,    0,    0,    0,    0, \n           19,  243,  244,  212,  213,  214,  215,    0,    0,  249, \n            0,    0,    0,    0,    0,    0,   28,    0,    0,  216, \n          217,  218,    0,  219,   35,  220,  221,  222,  223,    0, \n           40,   41,   42,   43,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  224,    0,    0,  225,    0,    0, \n           46,   47,    0,   48,    0,  902,    0,    0,    0,   50, \n            0,    0,    0,    0,    0,    0,    0,  272,    0,    0, \n            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, \n            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, \n            0,   65,   66,    4,    5,    6,    0,    8,    0,    0, \n            0,    9,   10,    0,    0,    0,   11,    0,   12,   13, \n           14,  241,  242,   17,   18,    0,    0,    0,    0,   19, \n          243,  244,  212,  213,  214,  215,    0,    0,  249,    0, \n            0,    0,    0,    0,    0,   28,    0,    0,  216,  217, \n          218,    0,  219,   35,  220,  221,  222,  223,    0,   40, \n           41,   42,   43,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  224,    0,    0,  225,    0,    0,   46, \n           47,    0,   48,    0,  698,    0,    0,    0,   50,    0, \n            0,    0,    0,    0,    0,    0,  272,    0,    0,    0, \n            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, \n           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, \n           65,   66,  637,  637,  637,    0,  637,    0,    0,    0, \n          637,  637,    0,    0,    0,  637,    0,  637,  637,  637, \n          637,  637,  637,  637,    0,    0,    0,    0,  637,  637, \n          637,  637,  637,  637,  637,    0,    0,  637,    0,    0, \n            0,    0,    0,    0,  637,    0,    0,  637,  637,  637, \n            0,  637,  637,  637,  637,  637,  637,    0,  637,  637, \n          637,  637,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,  637,    0,    0,  637,  637,    0,  637,  637, \n            0,  637,    0,    0,    0,    0,    0,  637,    0,    0, \n            0,    0,    0,    0,    0,  637,    0,    0,    0,    0, \n          637,  637,  637,  637,  637,  637,    0,    0,    0,  637, \n            0,  637,  637,    0,  637,  637,  637,  637,    0,  637, \n          637,    4,    5,    6,    0,    8,    0,    0,    0,    9, \n           10,    0,    0,    0,   11,    0,   12,   13,   14,   15, \n           16,   17,   18,    0,    0,    0,    0,   19,   20,   21, \n          212,  213,  214,  215,    0,    0,   26,    0,    0,    0, \n            0,    0,    0,   28,    0,    0,  216,  217,  218,    0, \n          219,   35,  220,  221,  222,  223,    0,   40,   41,   42, \n           43,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,  224,    0,    0,  225,    0,    0,   46,   47,    0, \n           48,    0,    0,    0,    0,    0,   50,    0,    0,    0, \n            0,    0,    0,    0,   51,    0,    0,    0,    0,   52, \n           53,   54,   55,   56,   57,    0,    0,    0,   58,    0, \n           59,   60,    0,   61,   62,   63,   64,    0,   65,   66, \n            4,    5,    6,    0,    8,    0,    0,    0,    9,   10, \n            0,    0,    0,   11,    0,   12,   13,   14,  241,  242, \n           17,   18,    0,    0,    0,    0,   19,  243,  244,  212, \n          213,  214,  215,    0,    0,  249,    0,    0,    0,    0, \n            0,    0,   28,    0,    0,  216,  217,  218,    0,  219, \n           35,  220,  221,  222,  223,    0,   40,   41,   42,   43, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n          224,    0,    0,  225,    0,    0,   46,   47,    0,   48, \n            0,    0,    0,    0,    0,   50,    0,    0,    0,    0, \n            0,    0,    0,  272,    0,    0,    0,    0,   52,   53, \n           54,   55,   56,   57,    0,    0,    0,   58,    0,   59, \n           60,    0,   61,   62,   63,   64,    0,   65,   66,    4, \n            5,    6,    0,    8,    0,    0,    0,    9,   10,    0, \n            0,    0,   11,    0,   12,   13,   14,   15,   16,   17, \n           18,    0,    0,    0,    0,   19,   20,   21,  212,  213, \n          214,  215,    0,    0,  249,    0,    0,    0,    0,    0, \n            0,   28,    0,    0,  216,  217,  218,    0,  219,   35, \n          220,  221,  222,  223,    0,   40,   41,   42,   43,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,  224, \n            0,    0,  225,    0,    0,   46,   47,    0,   48,    0, \n            0,    0,    0,    0,   50,    0,    0,    0,    0,    0, \n            0,    0,  272,    0,    0,    0,    0,   52,   53,   54, \n           55,   56,   57,    0,    0,    0,   58,    0,   59,   60, \n            0,   61,   62,   63,   64,    0,   65,   66,  637,  637, \n          637,    0,  637,    0,    0,    0,  637,  637,    0,    0, \n            0,  637,    0,  637,  637,  637,  637,  637,  637,  637, \n            0,    0,    0,    0,  637,  637,  637,  637,  637,  637, \n          637,    0,    0,  637,    0,    0,    0,    0,    0,    0, \n          637,    0,    0,  637,  637,  637,    0,  637,  637,  637, \n          637,  637,  637,    0,  637,  637,  637,  637,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,  637,    0, \n            0,  637,    0,    0,  637,  637,    0,  637,    0,    0, \n            0,    0,    0,  637,    0,    0,    0,    0,    0,    0, \n            0,  637,    0,    0,    0,    0,  637,  637,  637,  637, \n          637,  637,    0,    0,    0,  637,    0,  637,  637,    0, \n          637,  637,  637,  637,    0,  637,  637,    4,    5,    6, \n            0,    8,    0,    0,    0,    9,   10,    0,    0,    0, \n           11,    0,   12,   13,   14,  241,  242,   17,   18,    0, \n            0,    0,    0,   19,  243,  244,  421,  422,  423,  424, \n            0,    0,  249,    0,    0,    0,    0,    0,    0,  250, \n            0,    0,  425,  426,  427,    0,  428,   35,  156,  157, \n          429,  159,    0,   40,    0,    0,  259,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,  430,    0,    0,    0,  431,    0,    0, \n          225,    0,    0,   46,   47,    0,   48,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,   52,   53,   54,   55,   56, \n           57,    0,    0,    0,   58,    0,   59,   60,    0,   61, \n           62,   63,   64,    0,   65,   66,    4,    5,    6,    0, \n            8,    0,    0,    0,    9,   10,    0,    0,    0,   11, \n            0,   12,   13,   14,  241,  242,   17,   18,    0,    0, \n            0,    0,   19,  243,  244,  421,  422,  423,  424,    0, \n            0,  249,    0,    0,    0,    0,    0,    0,  250,    0, \n            0,  425,  426,  427,    0,  428,   35,  156,  157,  429, \n          159,    0,   40,    0,    0,  259,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  431,    0,    0,  225, \n            0,    0,   46,   47,    0,   48,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,   52,   53,   54,   55,   56,   57, \n            0,    0,    0,   58,    0,   59,   60,    0,   61,   62, \n           63,   64,    0,   65,   66,    4,    5,    6,    0,    8, \n            0,    0,    0,    9,   10,    0,    0,    0,   11,    0, \n           12,   13,   14,  241,  242,   17,   18,    0,    0,    0, \n            0,   19,  243,  244,  323,  324,  325,  326,    0,    0, \n          249,    0,    0,    0,    0,    0,    0,  250,    0,    0, \n          327,  328,  329,    0,  330,   35,  331,  332,  333,  334, \n            0,   40,    0,    0,  259,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,  335,    0,    0,  410,    0, \n            0,   46,   47,    0,   48,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,   52,   53,   54,   55,   56,   57,    0, \n            0,    0,   58,    0,   59,   60,    0,   61,   62,   63, \n           64,    0,   65,   66,    4,    5,    6,    0,    8,    0, \n            0,    0,    9,   10,    0,    0,    0,   11,    0,   12, \n           13,   14,  241,  242,   17,   18,    0,    0,    0,    0, \n           19,  243,  244,  980,  981,  982,  983,    0,    0,  249, \n            0,    0,    0,    0,    0,    0,  250,    0,    0,  984, \n          985,  986,    0,  987,   35,  988,  989,  990,  991,    0, \n           40,    0,    0,  259,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  992,    0,    0,  225,    0,    0, \n           46,   47,    0,   48,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,   52,   53,   54,   55,   56,   57,    0,    0, \n            0,   58,    0,   59,   60,    0,   61,   62,   63,   64, \n            0,   65,   66,    4,    5,    6,    0,    8,    0,    0, \n            0,    9,   10,    0,    0,    0,   11,    0,   12,   13, \n           14,  241,  242,   17,   18,    0,    0,    0,    0,   19, \n          243,  244,  421,  422,  423,  424,    0,    0,  249,    0, \n            0,    0,    0,    0,    0,  250,    0,    0,  425,  426, \n          427,    0, 1031,   35,  156,  157, 1032,  159,    0,   40, \n            0,    0,  259,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0, 1033,    0,    0,  225,    0,    0,   46, \n           47,    0,   48,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,   52,   53,   54,   55,   56,   57,    0,    0,    0, \n           58,    0,   59,   60,    0,   61,   62,   63,   64,    0, \n           65,   66,  796,  611,    0,    0,  797,    0,    0,    0, \n          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, \n            0,    0,  169,  170,    0,    0,    0,  171,  172,  173, \n          174,    0,    0,    0,    0,    0,    0,  287,    0,    0, \n            0,    0,    0,    0,  176,  177,    0,  178,  179,  180, \n          181,  182,  183,  184,  185,  186,  187,  188,  625,  619, \n          189,    0,  626,    0,    0,    0,  160,  161,    0,  162, \n          163,  164,  165,  166,  167,  168,    0,    0,  169,  170, \n            0,    0,  190,  171,  172,  173,  174,    0,    0,    0, \n            0,    0,    0,  287,    0,    0,    0,    0,    0,    0, \n          176,  177,    0,  178,  179,  180,  181,  182,  183,  184, \n          185,  186,  187,  188,  897,  611,  189,    0,  898,    0, \n            0,    0,  160,  161,    0,  162,  163,  164,  165,  166, \n          167,  168,    0,    0,  169,  170,    0,    0,  190,  171, \n          172,  173,  174,    0,    0,    0,    0,    0,    0,  287, \n            0,    0,    0,    0,    0,    0,  176,  177,    0,  178, \n          179,  180,  181,  182,  183,  184,  185,  186,  187,  188, \n          900,  619,  189,    0,  901,    0,    0,    0,  160,  161, \n            0,  162,  163,  164,  165,  166,  167,  168,    0,    0, \n          169,  170,    0,    0,  190,  171,  172,  173,  174,    0, \n            0,    0,    0,    0,    0,  287,    0,    0,    0,    0, \n            0,    0,  176,  177,    0,  178,  179,  180,  181,  182, \n          183,  184,  185,  186,  187,  188, 1069,  611,  189,    0, \n         1070,    0,    0,    0,  160,  161,    0,  162,  163,  164, \n          165,  166,  167,  168,    0,    0,  169,  170,    0,    0, \n          190,  171,  172,  173,  174,    0,    0,    0,    0,    0, \n            0,  287,    0,    0,    0,    0,    0,    0,  176,  177, \n            0,  178,  179,  180,  181,  182,  183,  184,  185,  186, \n          187,  188, 1072,  619,  189,    0, 1073,    0,    0,    0, \n          160,  161,    0,  162,  163,  164,  165,  166,  167,  168, \n            0,    0,  169,  170,    0,    0,  190,  171,  172,  173, \n          174,    0,    0,    0,    0,    0,    0,  287,    0,    0, \n            0,    0,    0,    0,  176,  177,    0,  178,  179,  180, \n          181,  182,  183,  184,  185,  186,  187,  188, 1091,  611, \n          189,    0, 1092,    0,    0,    0,  160,  161,    0,  162, \n          163,  164,  165,  166,  167,  168,    0,    0,  169,  170, \n            0,    0,  190,  171,  172,  173,  174,    0,    0,    0, \n            0,    0,    0,  287,    0,    0,    0,    0,    0,    0, \n          176,  177,    0,  178,  179,  180,  181,  182,  183,  184, \n          185,  186,  187,  188,  625,  619,  189,    0,  626,    0, \n            0,    0,  160,  161,    0,  162,  163,  164,  165,  166, \n          167,  168,    0,    0,  169,  170,    0,    0,  190,  171, \n          172,  173,  174,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,  176,  177,    0,  178, \n          179,  180,  181,  182,  183,  184,  185,  186,  187,  188, \n            0,    0,  189,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,    0,    0,    0,    0,    0,    0, \n            0,    0,    0,    0,  190, \n      };\n   }\n\n   private static final short[] yyCheck1() {\n      return new short[] {\n\n           26,  280,   28,    2,    3,   88,   21,  461,   91,   74, \n            9,   10,   11,   27,    7,   14,   15,   16,  478,  475, \n            6,  456,  478,   51,  296,    0,    3,  100,  318,   11, \n           21,    7,  322,  232,   27,  355,   10,    0,   10,   59, \n            9,   10,   11,  561,  562,   10,   45,   49,   15,   16, \n           49,   27,   51,  677,   10,   15,   16,  517,   59,    0, \n           14,  852,    6,    7,   15,   16,   52,  691,  280,   10, \n           10,  105,   15,   16,   10,   10,  570,  748,   10,   45, \n           10,   11,  105,   27,   10,   59,   10,   59,   44,    2, \n            3,   10,  107,  401,   10,   49,   47,   48,   10,  723, \n           10,  100,  280,   59,   47,  940,  341,  746,   52,  108, \n          109,  110,  349,   10,  351,  413,  107,  305,   59,  431, \n          305,  875,  328,  105,   59,    2,    3,   59,   10,  341, \n          336,   10,  305, 1027,   44,   61,   10,   14,   43,   10, \n           59,  108,  450,  341,   10,  228,  100,   44,  108,   59, \n          362,  379,  380,  381,  382,  109,  110,  108,  466,   10, \n          400,    2,  402,   10,   61,  108,  406,   10,   45,   44, \n           44,   10,   49,   44,  310,  799,   10,   59,  342,  262, \n          407,   10,  409,   10,  362,   59,   61,  414,   59,  407, \n          375, 1085,  312,   59,   10,  359,  414,  317,  366,  355, \n          954,  235,  375,   10,   10,   10,   47,   48,  487,  449, \n           10,  451,  211, 1048,   61, 1006,  299,  525,  290,  291, \n           59,   10,  410,  100,  250,   59,  225,  467,  548,  244, \n          350,  351,  109,  110,   10,  472,   10,   10,  362,   44, \n          239,  240,   10,   59,   44,   10,  706,   10,   10,  705, \n          706,  362,  267,  235,  337,   61,   10,  342,  306,   59, \n          407,  501,  310,  336,   10,   32,  386,  414,   44,   10, \n          239,  240,    0,  307,  359,  899,  947,  345,   10,   10, \n           32,   10,   10,   59,  307,  284,  526,  286,  287,  268, \n          269,  290,   45,  292,   59,  363,   59,  296,  297,    2, \n            3,  538,  941,   44,  303,  452,  305,  454,   10,  239, \n          240,   14,   44,   44,   32,  314,   32,  284,   59,  286, \n           10,  290,  342,  292,  284,  307,  286,  287,   59,   10, \n           59,   59,   32,  284,  211,  286,  573,  336,  856,  305, \n           10,  284,   45,  286,  862,  863,   10,  865,  225,  867, \n          662,  770,   32,  279,  259,  663,  503,  776,  359,   61, \n           91,  282,  281,  362,  363,  364,  365,  366,  367,  368, \n          305,   61,  670,   61,   44,  829,  870,  342,   59,  407, \n          345,  409,  336,  296, 1023,  413,  414,  402,  363,   59, \n          303,  363,  548,  362,  363,  364,  365,   61,  367,  368, \n          363,  314,  401,  359,  279,  345,  342,  342,  407,  411, \n          409,  410,  411,  387,  413,  414,  342,  416,  342,  296, \n          297,  700,  363,  305,  664,  341,  303,  359,  305,  719, \n          342,  430,  362,  363,  364,  365,  451,  314,  437,  416, \n          375,  401, 1081,  715,  410,  342,  287, 1071,  447,  359, \n          338,  450,  467,  366,  527,  296,  455,  411,  402,  336, \n          342,  430,  406,  342,  958,   44,  409,  466,  437,  963, \n          413,  931,  225,  279,   44,  931,  784,   61,  460,  461, \n           10,  495,  802,  682,  804,  359,  501,   44,  359,  366, \n          450,  342,  927,  375,  731,  342,  338,  496, 1016, 1017, \n         1018, 1019,  495,  416,  373,  305,  466,  451,  211,  378, \n          509,  526,   91,  342,  457,  342,  345,  310,  345,  495, \n          359,  758,  225,  467,  475,  359,  525,  496,  527,  305, \n          407,  271,  409,  410,  411,  342,  342,  414,  345,  416, \n          767,  768,  342,  783,  297,  785,  773,  774,  631,  767, \n          768,  495,  305,  342,  833,  773,  774,  501,  338,  786, \n          401,  325, 1080,  514,  305,  525,  342, 1061,  342,  342, \n          447,  644,  527,  527,  342,  375,   61,  279,  455,  342, \n          342,  607,  526,  359,  350,  351,  267,   10,  342,  279, \n          746,  617,  748,  296,  297,  359,  342,  328,  613,  375, \n          303,  342,  305,  373,  335,  336,  621,  671,  378,  450, \n          341,  314,  627,  342,  338,  279,  680,   59,  359,  290, \n          767,  768,  613,  548,  341,  466,  773,  774,  359,  279, \n          621,   10,  509,   10,  375,  305,  627,   10,   61,   44, \n          342,  312,  313,    2,    3,  644,  802,  720,  804,  664, \n          527,  677,  342,  371,  372,  669,   91,  410,   10,  886, \n          378,  263,  264,  366,  663,  691,  665,   44,  886,  308, \n          817,  818,  342,  820,  821,  690,  669,  310,  342,  694, \n           59,  269,  668,  271,  525,   10,   45,  339,   61,  644, \n          644,  371,  372,  669,  447,   91,  695,  723,  378,   10, \n          279,  547,  455,  663,  407,  375,  409,  410,   44,   61, \n          317,  414,   10,  416,  740,  780,  715,  916,  791,  875, \n          664,  720,  317,  922,  668,  669,  695,  670,  338,  342, \n           10,   44, 1040,  345,   10,   10,   61,  376,  377,  767, \n          768,  322,  323,   44,  447,  773,  774,  363,   59,  328, \n          310,   10,  455,   44,  705,   44,  335,  336,  786,   10, \n          290,  291,  341,   61,   44,  695,  720,  644,  767,  768, \n          785,   10,  347,  799,  773,  774,  357,  358,   91,   59, \n          621,  357,  781,   59,   59,  784,  627,  786,  665,  262, \n           91,  947,  791,   44,  264,  794,  795,  264,   48,  267, \n           59, 1041,  715,  341,  803,  363,  509,  342,   59,  480, \n           44,  793,  811,  263,  264,  814,   91,  488,  489,  269, \n           59,   44,  663,  363,  784,  794,  825,  826,  827,  670, \n          671,  362,  673,   44,  306,  506,  791,  791,  715,  680, \n          306,  785,   44,  720,   44,  814,   44,  829,  746,  875, \n          748,  728,  211,  694,   44,  306,  279,   44,  886,   10, \n          859,  860,   61,  927,  794,  264,  225, 1023,  781,  363, \n           44, 1027,  264,  899,  715,  328,    0,  802,  877,  804, \n          879,  338,  335,  336,  814,  264,   10,  886,  734,  735, \n          767,  768,  338,  328,  338,  338,  773,  774,  850,  297, \n          335,  336,   61,   44,  781,   44,  279,  906,   59,  786, \n          993,  341,  269,  338,  791,   44,  915,  338,  795,  342, \n          919,  762,  338,  764,  338,  907,  803,  279,  954, 1085, \n          264,  913,  328,   32,  811,   59,   44,  296,  297,  335, \n          336,   32,    0,  784,  303,   58,  305,  338,  825,  826, \n          827,  345,   10,  264,  279,  314,  363,  264,  269,  339, \n          271,  915,  665,  371,  372,  964,  279,  263,  809,  342, \n          378,  812,  643,  338,  264,  383,  264,  875,  279,   44, \n          979,  279,  859,  860,  936, 1011,   44,  267,  743,  363, \n          342,  267,  267,  748,   10,  666,   44,  996,  342,  998, \n          877,   59,  879,   10,  850, 1004,  852,  366,  267,  886, \n          964,   44,  715,   59,   44,  328,  267,  342,    0,  269, \n          270,  271,  335,  336,  274,  264, 1041,  328,   10,  906, \n          269,   44,   44,   10,  335,  336, 1035,  264,  915,  710, \n          264, 1040,  919,   59,  342, 1071, 1045,  718,  407,  947, \n          409,  410,   59,  328,  264,  414, 1008,  416,  811,  339, \n          335,  336,   44,  339,  767,  768,  750,  264,  739,  753, \n          773,  774,  825,  826,  827,   44,   58,   59,  781,  264, \n         1040, 1035,   59,  786,  363,   44,  927,  964,  447,   44, \n          936,  937,  795,   44,   44, 1047,  455, 1041,  359,   61, \n          803,  264,  979,  310,   44,   10,  859,  860,  811,   44, \n          359,  262,  263,  264,   91,  310,   15,   16,  269,  996, \n          875,  998,  825,  826,  827, 1023,  879, 1004,  665, 1027, \n          264,  264,  306,   10,  308,  309,  310,  311,  262,  263, \n          264,   44,   41,   42,  268,  269,   44,  271,   47,   48, \n          509,   50,   51,   44,   59,   44,  859,  860, 1035,  409, \n         1006,  317, 1008,  413,   44,  387,  919,   44, 1045,  293, \n          294,  295,  296,  297,  877,   44,  879,  306,  849,  308, \n          309,  310,  311,  886,   61,  271,   91, 1085,   91,  271, \n          945,  875,  947,  349,  949,  345,  363,  353,  354, 1040, \n          342, 1047, 1043,  906,  262,  263,  264,  457,  345,  108, \n          268,  269,  915,  271,   91,  341,  919,   91,  342,  371, \n          372,  373,  345,  317,  474,  475,  378,  363,  478,   58, \n          345,   70,  290,  291,  273,  293,  294,  295,  296,  363, \n          911,   54,  264,  996,  573,  998,  110,  509,  264, 1043, \n            6, 1004,  268,  269,  764,  349,  263,  264,  795,  353, \n          354,  355,  356,  387,  514, 1020,  803,  517,    0,  627, \n          914,  746, 1027,   10,  875, 1025,  979,  779,   10,  750, \n          262,  263,  264,  654,  342,  267,  268,  269, 1023,  271, \n          267,  396, 1045,  996,   14,  998, 1051, 1042,   44,  281, \n          282, 1004,  734,   89, 1048,  363,  665,   44,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,  371,  372, \n          373,  571,   -1,  305,   61,  378,   -1,   59, 1083,  387, \n         1085,   -1,   -1, 1088,   10,  388, 1020,   -1,   -1, 1023, \n          877, 1025, 1045, 1027,   -1,   91, 1101,   -1,  371,  372, \n          373,  328,   -1,   -1,   91,  378,  715,  339,  335,  336, \n          342,   -1,  267,  345,   10,  347,   -1,   -1,   -1,  906, \n          269,  270,  271,  272,   -1,  274,  279,  371,  372,  373, \n            0,  363,   -1,   59,  378,  284,  636,  286,  287,   -1, \n           10,   91,   -1,  375,   -1,   -1,  295, 1081,   -1, 1083, \n           -1, 1085,  279,   -1, 1088,  387,   -1,   -1,  767,  768, \n           -1,   -1,   -1,   59,  773,  774,   -1, 1101,   -1,   -1, \n          670,   -1,  781,  328,   44,  328,   -1,  786,   -1,   -1, \n          335,  336,  335,  336,   -1,   -1,  795,   -1,   58,   59, \n           -1,   -1,  979,   63,  803,   91,  696,   -1,  698,   10, \n           -1,  328,  811,   -1,  328,  705,  706,   -1,  335,  336, \n           10,  335,  336,   -1,  341,  342,  825,  826,  827,   -1, \n          369,  370,  371,  372,  373,   -1,   -1,  376,  377,  378, \n          379,  380,  381,  382,  383,  384,  385,  386,  387,  388, \n          389,   -1,   -1,  392,  393,  394,  395,   -1,   59,   -1, \n          859,  860,  401,   -1,  403,   -1,  756,   -1,  407,   59, \n          409,   -1,   -1,   -1,  413,  414,   91,   -1,  877,   -1, \n          879,   91,   -1,   10,   -1,   -1,   -1,  886,   -1,   -1, \n          262,  263,  264,  279,  280,  267,  268,  269,  788,  271, \n           -1,   91,  279,  280,   -1,   -1,   10,  906,   -1,  281, \n           -1,  450,   -1,  452,  453,  454,   -1,   -1,  457,   -1, \n          919,  293,  294,  295,  296,  297,  306,  466,  308,  309, \n          310,  311,   59,   14,  824,  474,  475,   -1,   -1,  478, \n           44,   -1,  328,   10,   -1,   -1,  262,  263,  264,  335, \n          336,  328,  268,  269,   -1,  271,   -1,   61,  335,  336, \n           41,   42,   -1,  502,  503,  342,   47,   48,   49,   50, \n          342,   -1,   -1,   -1,   91,  514,  362,   -1,  517,   -1, \n          979,  267,  371,  372,  373,  362,  525,   91,  328,  378, \n           -1,  363,   59,   -1,  280,  335,  336,  996,   -1,  998, \n           -1,   -1,  262,  263,  264, 1004,   -1,  267,  268,  269, \n           -1,  271,  902,   -1,   -1,  387,   -1,   10,   -1,  100, \n           -1,  281,  282,   -1,   91,   -1,  342,   91,  109,  110, \n          290,  291,  571,  293,  294,  295,  296,  297,   -1,   91, \n           -1,  931,  328,   -1,   -1,  305, 1045,  363,   -1,  335, \n          336,   44,   -1,   -1,   -1,  341,   -1,  317,  318,  319, \n          320,  321,   -1,   -1,  324,  325,  326,  327,   61,  329, \n          330,  387,   -1,  333,  334,   -1,  362,  267,   -1,  339, \n           -1,   10,  342,   -1,   -1,  345,   44,  347,   -1,  349, \n          280,  351,   -1,  353,  354,  355,  356,  636,   91,  359, \n           -1,  361,   -1,  363,   -1,  306,   -1,  308,  309,  310, \n          311,  312,   -1,  328,   -1,  375,  317,   -1,  328,    0, \n          335,  336,   -1,   -1,  663,  335,  336,  387,   -1,   10, \n           59,  670,   -1,   91,   -1,  262,  263,  264,  328,  340, \n           -1,  268,  269,   -1,  271,  335,  336,  348,  349,  350, \n          351,  341,  308,  309,   -1,  311,   -1,  696,   -1,  698, \n           -1,   10,   91,   44,   -1,   -1,  705,  706,   -1,   -1, \n           14,   -1,  362,   -1,   -1,  279,  280,   58,   59,  371, \n          372,  373,   63,   -1,   -1,  386,  378,   -1,  269,  270, \n          271,  272,   -1,  274,  371,  372,  373,   41,   42,   -1, \n          267,  378,   -1,   47,   48,   49,   50,   -1,   -1,   -1, \n           59,  328,   44,   -1,  295,  342,   -1,  756,  335,  336, \n          376,  377,   -1,   -1,  328,   -1,   -1,   -1,  767,  768, \n           -1,  335,  336,   -1,  773,  774,  363,  341,  342,   -1, \n           -1,   -1,   91,  782,   -1,  784,   -1,  786,   -1,  788, \n          293,  294,  295,  296,  297,  336,  100,   -1,  362,   91, \n          387,  328,   -1,   -1,  328,  109,  110,   -1,  335,  336, \n           -1,  335,  336,   44,  341,   -1,  328,   -1,  817,  818, \n           -1,  820,  821,  335,  336,  824,  279,  280,  369,  370, \n          371,  372,  373,   -1,   -1,  376,  377,  378,  379,  380, \n          381,  382,  383,  384,  385,  386,  387,  388,  389,    0, \n           -1,  392,  393,  394,  395,   -1,   -1,   -1,   -1,   10, \n           91,  279,  403,  306,   -1,  308,  309,  310,  311,   -1, \n          411,   -1,   -1,   -1,   -1,  328,   -1,   -1,  267,   -1, \n           -1,  880,  335,  336,   -1,   -1,   -1,  886,  341,  342, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,  340,   -1,   -1, \n           -1,   44,   -1,  902,   -1,  348,   -1,   58,   59,  362, \n          328,  452,  453,  454,   -1,   -1,  457,  335,  336,   -1, \n           -1,  262,  263,  264,   -1,  924,  267,  268,  269,   -1, \n          271,   10,  931,  474,  475,   -1,   -1,  478,   -1,  328, \n          281,  282,   -1,   -1,   -1,   -1,  335,  336,   91,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,  267,   -1, \n           44,  502,  503,   -1,  305,  269,  270,  271,  272,   -1, \n          274,  280,   -1,  514,   -1,   -1,  517,   -1,   -1,   -1, \n           10,   -1,   -1,  324,  325,   -1,  527,  279,  329,  330, \n           -1,  295,   -1,   -1,   -1,    0,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345,   10,  347,   91,  306,   -1, \n          308,  309,  310,  311,   -1,   -1,   -1,   -1,   -1,  328, \n           -1,   -1,  363,   -1,   -1,   -1,  335,  336,   -1,   59, \n          571,   -1,  336,   -1,  375,   -1,  328,   -1,   -1,   44, \n           -1, 1040,  340,  335,  336,   -1,  387,   -1,  279,   -1, \n          348,   10,   -1,  362,   59,   -1,   61,   -1,   63,   -1, \n           -1,   91,   -1,   -1,   -1,  369,  370,  371,  372,  373, \n           10,   -1,  376,  377,  378,  379,  380,  381,  382,  383, \n          384,  385,  386,  387,  388,  389,   91,   -1,  392,  393, \n          394,  395,   -1,   -1,   -1,  636,   -1,  328,   -1,  403, \n           59,   10,   -1,  644,  335,  336,   -1,  411,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   59, \n          271,   -1,   10,   -1,   10,   -1,   -1,   -1,   -1,  670, \n          281,  282,   91,   44,   -1,   44,  279,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,  452,  453, \n          454,   91,   61,  457,  305,  696,   44,  698,   44,   -1, \n           -1,   -1,   -1,   -1,  705,  706,   -1,   -1,   -1,   -1, \n          474,  475,   -1,   61,  478,   61,   -1,   -1,   -1,  720, \n           91,   -1,   91,   -1,   -1,  328,   -1,   -1,  339,   -1, \n           -1,  342,  335,  336,  345,  279,  347,   -1,  502,  503, \n           -1,   44,   -1,   91,   -1,   91,    0,   -1,   -1,   -1, \n          514,   -1,  363,  517,   -1,  756,   10,   -1,   -1,   10, \n           -1,   -1,   -1,  527,  375,   10,   -1,  306,   -1,  308, \n          309,  310,  311,  312,   -1,   -1,  387,  267,  317,   -1, \n           -1,  782,   -1,   -1,  328,   -1,   -1,  788,   91,   -1, \n          791,  335,  336,   44,   -1,   44,   -1,  262,  263,  264, \n           10,  340,   10,  268,  269,   59,  271,  571,   59,  348, \n          349,  350,  351,   -1,   59,  280,  817,  818,   -1,  820, \n          821,   -1,   -1,  824,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   44,   -1,   -1,   -1,  328,   -1, \n           91,   -1,   91,   -1,  750,  335,  336,  386,  267,   59, \n           -1,   59,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   44,  267,  333,  334, \n          335,  336,  636,   -1,   -1,   -1,   -1,  342,   -1,  880, \n          644,   91,   -1,   91,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,  362,  363,   -1, \n           -1,  902,   44,   -1,   -1,   -1,  670,   -1,  279,  328, \n          279,  280,   -1,   91,  915,   -1,  335,  336,   -1,   -1, \n           -1,   -1,  387,  924,   -1,   -1,   -1,   -1,  328,   -1, \n          931,  279,  696,  279,  698,  335,  336,   -1,   -1,   -1, \n            0,  705,  706,  306,   -1,  308,  309,  310,  311,   91, \n           10,   -1,   -1,   -1,   -1,   -1,  720,  328,   -1,  328, \n           -1,   -1,   -1,  964,  335,  336,  335,  336,   -1,  875, \n           -1,   -1,  341,  342,   -1,   -1,  279,  340,   -1,   -1, \n          328,   -1,  328,   -1,   44,   -1,   -1,  335,  336,  335, \n          336,   -1,  756,  362,  342,   -1,  342,   -1,   58,   59, \n           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   -1,  271,  782,   -1, \n           -1,   -1,   -1,   -1,  788,  328,   -1,  791,   -1,  280, \n          279,   91,  335,  336, 1035,   -1,   -1,   -1,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  817,  818,   -1,  820,  821,   -1,  267, \n          824,  306,   -1,  308,  309,  310,  311,  312,   -1,   -1, \n          280,    0,  317,   -1,   -1,   -1,   -1,  328,   -1,  328, \n           -1,   10,   -1,  328,  335,  336,  335,  336,  342,   -1, \n          341,  336,   -1,   -1,   -1,  340,  341,   -1,   -1,   -1, \n           -1,  279,  280,  348,  349,  350,  351,   -1,  359,  363, \n           -1,  362,   -1,   -1, 1020,   44,  880, 1023,  328, 1025, \n          328, 1027,   -1,   -1,   -1,  335,  336,  335,  336,   58, \n           59,  341,   61,  387,   63,   -1,   -1,  279,  902,   -1, \n           -1,  386,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  359, \n          328,  915,  362,   -1,   -1,   -1,   -1,  335,  336,   -1, \n          924,   -1,   91,  341,   -1,   -1,   -1,  931,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1, 1081,   -1, 1083,   -1, 1085, \n           -1,   -1, 1088,   -1,  362,   -1,  328,   -1,   -1,   -1, \n           -1,   10,   -1,  335,  336, 1101,   -1,  257,  258,  259, \n          964,  261,  262,  263,  264,  265,  266,  267,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,  281,  282,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, \n           59,   -1,  302,  303,  304,  305,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330, 1035,   -1,  333,  334,  335,  336,  337,  338,  339, \n          340,  341,  342,  343,  344,  345,  346,  347,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,  375,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  386,  387,  257,  258, \n          259,   -1,  261,  262,  263,  264,  265,  266,  267,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n           -1,  280,  281,  282,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, \n          299,   -1,   -1,  302,  303,  304,  305,  306,  307,  308, \n          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,  875,   -1,  333,  334,  335,  336,  337,  338, \n          339,  340,  341,  342,  343,  344,  345,  346,  347,  348, \n          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,    0,  374,  375,  376,  377,   -1, \n          379,  380,  381,  382,   10,  384,  385,  386,  387,   -1, \n           -1,  955,  262,  263,  264,  959,   -1,   -1,  268,  269, \n           -1,  271,   -1,  262,  263,  264,   -1,   -1,   -1,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,  306,   44,  308, \n          309,  310,  311,  312,   -1,   -1,   -1,   -1,  317,   -1, \n           -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,  328, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,   -1,   -1, \n           -1,  340,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348, \n          349,  350,  351,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,  342,   -1,   -1,   -1,   -1, 1020,   -1,   -1, \n         1023,   -1, 1025,  342, 1027,   -1,  317,   -1,   -1,   -1, \n           -1, 1055,   -1,  363, 1058, 1059,   -1,  386, 1062, 1063, \n           -1,   -1,  333,  334,  363,    0,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   10,   -1,  387,  349,   -1, \n          351,   -1,  353,  354,  355,  356,   -1,   -1,  387,   -1, \n           -1,   -1, 1096, 1097, 1098, 1099,   -1,   -1, 1081,   -1, \n         1083, 1105, 1085,   -1,   -1, 1088,   -1,   -1,  306,   44, \n          308,  309,  310,  311,  312,   -1,   -1,   -1, 1101,  317, \n           -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1, \n           -1,   -1,  317,  306,   -1,  308,  309,  310,  311,  312, \n           -1,   -1,  340,  341,  317,   -1,   -1,   -1,  333,  334, \n          348,  349,  350,  351,   -1,   -1,   91,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  349,   -1,   -1,  340,  353,  354, \n          355,  356,   -1,   -1,   -1,  348,  349,  350,  351,   -1, \n           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,  386,   -1, \n           -1,  257,  258,  259,   -1,  261,  262,  263,  264,  265, \n          266,  267,  268,  269,  270,  271,  272,  273,  274,  275, \n          276,  277,  278,  386,  280,  281,  282,  283,  284,  285, \n          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, \n          296,  297,   -1,  299,   59,   -1,  302,  303,  304,  305, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,  337,   -1,  339,  340,  341,  342,  343,  344,  345, \n          346,  347,  348,  349,  350,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,  362,  363,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,  375, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          386,  387,  257,  258,  259,   -1,  261,  262,  263,  264, \n          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, \n          275,  276,  277,  278,   -1,  280,  281,  282,  283,  284, \n          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, \n          295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, \n          305,  306,  307,  308,  309,  310,  311,  312,  313,  314, \n          315,  316,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,  337,   -1,  339,  340,  341,  342,  343,  344, \n          345,  346,  347,  348,  349,  350,  351,  352,  353,  354, \n          355,  356,  357,  358,  359,  360,  361,  362,  363,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,    0,  374, \n          375,  376,  377,   -1,  379,  380,  381,  382,   10,  384, \n          385,  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          306,   -1,  308,  309,  310,  311,  312,   -1,   -1,   -1, \n           -1,  317,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  306,   44,  308,  309,  310,  311,  312,   -1,   -1, \n           -1,   -1,  317,   -1,  340,   -1,   58,   59,   -1,   61, \n           -1,   63,   -1,  328,  350,  351,   -1,   -1,   -1,   -1, \n           -1,  336,   -1,   -1,   -1,  340,  341,   -1,   -1,   -1, \n           -1,   -1,   -1,  348,  349,  350,  351,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          386,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n           -1,  386,   -1,  265,  266,   -1,   -1,   -1,  270,    0, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   10, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,   -1,   44,  316,   -1,   -1,  317,   -1,   -1, \n           -1,   -1,  322,  323,   -1,   -1,   -1,   58,   59,   -1, \n           -1,   -1,   63,  333,  334,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           91,  361,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,  267,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,  281, \n          282,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   59,   -1, \n          302,  303,  304,  305,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,  337,   -1,  339,  340,  341, \n          342,  343,  344,  345,  346,  347,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,  375,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,  386,  387,  257,  258,  259,   -1, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,   -1,  280, \n          281,  282,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,  293,  294,  295,  296,  297,   -1,  299,   -1, \n           -1,  302,  303,  304,  305,  306,  307,  308,  309,  310, \n          311,  312,  313,  314,  315,  316,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n           -1,   -1,  333,  334,  335,  336,  337,   -1,  339,  340, \n          341,  342,  343,  344,  345,  346,  347,  348,  349,  350, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,  362,  363,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,    0,  374,  375,  376,  377,   -1,  379,  380, \n          381,  382,   10,  384,  385,  386,  387,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  306,   44,  308,  309,  310, \n          311,  312,   -1,   -1,   -1,   -1,  317,   -1,   -1,   -1, \n           58,   59,   -1,   -1,   -1,   63,   -1,  328,  317,  318, \n          319,  320,  321,  322,  323,  336,   -1,  326,  327,  340, \n          341,   -1,   -1,   -1,  333,  334,   -1,  348,  349,  350, \n          351,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n          349,   -1,  351,   -1,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,   -1,   -1,   -1,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,   -1,  386,   -1,  265,  266,   -1, \n           -1,   -1,  270,    0,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   10,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,   -1,   44,  316,   -1, \n           -1,  317,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   58,   59,   -1,   -1,   -1,   63,  333,  334,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n          348,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,   -1,   -1,  359,   91,  361,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,   -1,   -1, \n           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,  262,  263,  264,  265,  266,  267, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,   -1,  280,  281,  282,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n           -1,  299,   59,   -1,  302,  303,  304,  305,  306,  307, \n          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, \n           -1,  339,  340,  341,  342,  343,  344,  345,  346,  347, \n          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  362,  363,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,  375,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,  386,  387, \n          257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, \n          267,  268,  269,  270,  271,  272,  273,  274,  275,  276, \n          277,  278,   -1,  280,  281,  282,  283,  284,  285,  286, \n          287,  288,  289,  290,  291,  292,  293,  294,  295,  296, \n          297,   63,  299,   -1,   -1,  302,  303,  304,  305,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n          337,   -1,  339,  340,  341,  342,  343,  344,  345,  346, \n          347,  348,  349,  350,  351,  352,  353,  354,  355,  356, \n          357,  358,  359,  360,  361,  362,  363,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,    0,  374,  375,  376, \n          377,   -1,  379,  380,  381,  382,   10,  384,  385,  386, \n          387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306, \n           44,  308,  309,  310,  311,  312,   -1,   -1,   -1,   -1, \n          317,   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63, \n           -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  336, \n           -1,   -1,   -1,  340,  341,   -1,   -1,   -1,   -1,   -1, \n           -1,  348,  349,  350,  351,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,   -1,   -1,   -1,   -1,   -1,  333,  334, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  386, \n           -1,   -1,   -1,   -1,  349,   -1,  351,    0,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   10,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   44,   -1,   -1,   -1,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,   59,  329,  330,   -1, \n           63,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  349,   -1,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   91,  361, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  257,  258,  259,   -1,  261,  262,  263, \n          264,  265,  266,  267,  268,  269,  270,  271,  272,  273, \n          274,  275,  276,  277,  278,   59,   -1,  281,  282,  283, \n          284,  285,  286,  287,  288,  289,  290,  291,  292,  293, \n          294,  295,  296,  297,   -1,  299,   -1,   -1,  302,  303, \n          304,  305,  306,  307,  308,  309,  310,  311,  312,  313, \n          314,  315,  316,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   44,   -1,  333, \n          334,  335,  336,  337,   -1,  339,  340,  341,  342,  343, \n          344,  345,  346,  347,  348,  349,  350,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,   -1,  363, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,  375,  376,  377,   91,  379,  380,  381,  382,   -1, \n          384,  385,  386,  387,  257,  258,  259,   -1,  261,  262, \n          263,  264,  265,  266,  267,  268,  269,  270,  271,  272, \n          273,  274,  275,  276,  277,  278,   63,  280,  281,  282, \n          283,  284,  285,  286,  287,  288,  289,  290,  291,  292, \n          293,  294,  295,  296,  297,   -1,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,  312, \n          313,  314,  315,  316,  317,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,  328,  329,  330,    0,   -1, \n          333,  334,  335,  336,  337,   -1,  339,  340,   10,  342, \n          343,  344,  345,  346,  347,  348,  349,  350,  351,  352, \n          353,  354,  355,  356,  357,  358,  359,  360,  361,  362, \n          363,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   44,  376,  377,   -1,  379,  380,  381,  382, \n           -1,  384,  385,  386,  387,   -1,   -1,   59,   -1,   -1, \n           -1,   63,  306,   -1,  308,  309,  310,  311,  312,   -1, \n           -1,   -1,   -1,  317,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   91, \n           -1,   -1,  336,   -1,   -1,   -1,  340,  341,   -1,   -1, \n           -1,   -1,  279,  280,  348,  349,  350,  351,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,  386,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335,  336, \n           -1,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  362,   -1,   -1,   59,   -1, \n           -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,   -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,  267,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   59,  280,  281, \n          282,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   44, \n           -1,  333,  334,  335,  336,  337,   -1,  339,  340,   -1, \n          342,  343,  344,  345,  346,  347,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   91,  379,  380,  381, \n          382,   -1,  384,  385,  386,  387,  257,  258,  259,   -1, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n          281,  282,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,  293,  294,  295,  296,  297,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,  312,  313,  314,  315,  316,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n            0,   -1,  333,  334,  335,  336,  337,   -1,  339,  340, \n           10,  342,  343,  344,  345,  346,  347,  348,  349,  350, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,  363,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   44,  376,  377,   -1,  379,  380, \n          381,  382,   -1,  384,  385,  386,  387,   -1,   -1,   59, \n           -1,   61,   -1,   63,  306,   -1,  308,  309,  310,  311, \n          312,   -1,   -1,   -1,   -1,  317,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,  336,   -1,   -1,   -1,  340,  341, \n           -1,   -1,   -1,   -1,  279,  280,  348,  349,  350,  351, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,  386,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1, \n          335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  362,  326,  327, \n           59,   -1,   61,   -1,   63,  333,  334,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   91,  361,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   61,   -1,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,   -1,   91,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   10,  299, \n           59,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,  337,  338,   -1, \n          340,  341,  342,  343,  344,   -1,  346,   59,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  386,  387,  257,  258, \n          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n           -1,  280,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, \n          299,   44,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,   -1,   -1,  333,  334,  335,  336,  337,  338, \n          279,  340,  341,  342,  343,  344,   -1,  346,   91,  348, \n          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,    0,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   10,  384,  385,  386,  387,  328, \n           -1,   -1,   -1,   -1,   -1,   -1,  335,  336,   -1,   -1, \n           -1,   -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,   44,  308, \n          309,  310,  311,  312,   -1,   -1,   -1,   -1,  317,   -1, \n           -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1,  328, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  336,   -1,   -1, \n           -1,  340,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348, \n          349,  350,  351,   -1,  306,   91,  308,  309,  310,  311, \n          312,   -1,   -1,   -1,   -1,  317,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  336,   -1,   -1,  386,  340,  341, \n           -1,   -1,   -1,   -1, \n      };\n   }\n\n   private static final short[] yyCheck2() {\n      return new short[] {\n\n           -1,    0,  348,  349,  350,  351,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  279,  280,   -1,   -1,   -1,   -1,   -1,   -1, \n          386,   -1,   -1,   -1,   -1,   44,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           59,   -1,   61,   -1,   63,   61,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,  335,  336, \n           -1,   -1,   91,   -1,  341,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  362,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259, \n           -1,  261,  262,  263,  264,  265,  266,   -1,  268,  269, \n          270,  271,  272,  273,  274,  275,  276,  277,  278,   -1, \n          280,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n          290,  291,  292,  293,  294,  295,  296,  297,   -1,  299, \n           44,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,  312,  313,  314,  315,  316,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,  337,   -1,   -1, \n          340,  341,  342,  343,  344,   -1,  346,   91,  348,  349, \n          350,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  362,  363,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  386,  387,  257,  258, \n          259,   -1,  261,  262,  263,  264,  265,  266,   -1,  268, \n          269,  270,  271,  272,  273,  274,  275,  276,  277,  278, \n           -1,  280,   -1,  279,  283,  284,  285,  286,  287,  288, \n          289,  290,  291,  292,  293,  294,  295,  296,  297,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,  312,  313,  314,  315,  316,  317,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,  328, \n          329,  330,  328,   -1,  333,  334,  335,  336,  337,  335, \n          336,  340,  341,  342,  343,  344,  342,  346,   -1,  348, \n          349,  350,  351,  352,  353,  354,  355,  356,  357,  358, \n          359,  360,  361,  362,  363,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,    0,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   10,  384,  385,  386,  387,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  279,  280,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   59,   -1,   61,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1, \n           -1,  335,  336,   -1,   -1,   91,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  306,  307,   -1,   -1,  310,   -1,   -1,  362,  314, \n          315,   -1,  317,  318,  319,  320,  321,  322,  323,   -1, \n           -1,  326,  327,   -1,   -1,    0,  331,  332,  333,  334, \n           -1,   -1,   -1,   -1,   -1,   10,  341,   -1,   10,   -1, \n           -1,   -1,   -1,  348,  349,   -1,  351,  352,  353,  354, \n          355,  356,  357,  358,  359,  360,  361,   -1,   -1,  364, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, \n           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  386,   -1,   -1,   59,   -1,   61,   -1,   63,   61, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,  262,  263,  264,  265, \n          266,   -1,  268,  269,  270,  271,  272,  273,  274,  275, \n          276,  277,  278,   -1,  280,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,  290,  291,  292,  293,  294,  295, \n          296,  297,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,  312,  313,  314,  315, \n          316,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,  337,   -1,   -1,  340,  341,  342,  343,  344,   -1, \n          346,   -1,  348,  349,  350,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,  362,  363,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          386,  387,  257,  258,  259,   -1,  261,  262,  263,  264, \n          265,  266,   -1,  268,  269,  270,  271,  272,  273,  274, \n          275,  276,  277,  278,   -1,  280,   -1,  279,  283,  284, \n          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, \n          295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,  312,  313,  314, \n          315,  316,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,  328,   -1,  333,  334, \n          335,  336,  337,  335,  336,  340,  341,  342,  343,  344, \n          342,  346,   -1,  348,  349,  350,  351,  352,  353,  354, \n          355,  356,  357,  358,  359,  360,  361,  362,  363,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,    0,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   10,  384, \n          385,  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          306,  307,   -1,   -1,  310,   -1,   -1,   -1,  314,  315, \n           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, \n          326,  327,   44,   -1,   -1,  331,  332,  333,  334,   -1, \n           -1,   -1,   -1,   -1,   -1,  341,   -1,   59,   -1,   61, \n           -1,   63,  348,  349,   -1,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,   -1,   -1,  364,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  306,  307, \n          386,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,   -1,  331,  332,  333,  334,   -1,   -1,    0, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   10, \n          348,  349,   10,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   44,  326,  327,   44,   -1,  386,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   59,  341, \n           61,   -1,   63,   61,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           91,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  386,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1,  261, \n          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   -1,  280,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,  290,  291, \n          292,  293,  294,  295,  296,  297,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n          312,  313,  314,  315,  316,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,  337,   -1,   -1,  340,  341, \n          342,  343,  344,   -1,  346,   -1,  348,  349,  350,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          362,  363,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,  386,  387,  257,  258,  259,   -1, \n          261,  262,  263,  264,  265,  266,   -1,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,   -1,  280, \n           -1,  279,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,  293,  294,  295,  296,  297,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,  312,  313,  314,  315,  316,  317,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,  328,  329,  330, \n          328,   -1,  333,  334,  335,  336,  337,  335,  336,  340, \n          341,  342,  343,  344,  342,  346,   -1,  348,  349,  350, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,  362,  363,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,    0,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   10,  384,  385,  386,  387,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  306,  307,   -1,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   44,   -1,   -1,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, \n           -1,   59,   -1,   61,   -1,   63,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  306,  307,  386,   -1,  310,   -1,   -1,   -1, \n          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, \n           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, \n          334,   -1,   -1,    0,   -1,   -1,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   10,  348,  349,   10,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, \n          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   44,  326,  327, \n           44,   -1,  386,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   59,  341,   61,   -1,   63,   61,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,   -1,   -1,  364,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  386,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,  262,  263,  264,  265,  266,   -1, \n          268,  269,  270,  271,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,  290,  291,  292,  293,  294,  295,  296,  297, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,  312,  313,  314,  315,  316,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,  337, \n           -1,   -1,  340,  341,  342,  343,  344,   -1,  346,   -1, \n          348,  349,  350,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,   -1,  363,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,    0,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   10,  384,  385,  386,  387, \n          257,  258,  259,   -1,  261,  262,  263,  264,  265,  266, \n           -1,  268,  269,  270,  271,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,  279,  283,  284,  285,  286, \n          287,  288,  289,  290,  291,  292,  293,  294,  295,  296, \n          297,   -1,  299,   -1,   59,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,  328,   -1,  333,  334,  335,  336, \n          337,  335,  336,  340,  341,  342,  343,  344,  342,  346, \n           -1,  348,  349,  350,  351,  352,  353,  354,  355,  356, \n          357,  358,  359,  360,  361,   -1,  363,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,    0,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   10,  384,  385,  386, \n          387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63, \n           -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   61, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   91, \n           -1,   -1,  257,  258,  259,   -1,  261,  262,  263,  264, \n          265,  266,  267,  268,  269,  270,  271,  272,  273,  274, \n          275,  276,  277,  278,   91,  280,  281,   -1,  283,  284, \n          285,  286,  287,  288,  289,  290,  291,  292,  293,  294, \n          295,  296,  297,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,  312,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1, \n          335,  336,  337,   -1,   -1,  340,   -1,  342,  343,  344, \n           -1,  346,    0,  348,   -1,  350,   -1,  352,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,  360,   -1,  362,  363,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, \n          385,  386,  387,   -1,   -1,   -1,   44,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           58,   59,   -1,   61,   -1,   63,  280,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,   -1,   91,   -1,   -1,   -1,  279,  280,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,  280,    0,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,  328,  361,  362,  363, \n           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, \n          342,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,  328,   -1,  387,   -1,   -1,   -1,   -1,  335,  336, \n          362,   -1,   58,   59,  341,   61,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  359,   -1,   -1,  362,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,  262,  263,  264,   10,   59,  267, \n          268,  269,   -1,  271,   -1,   -1,   44,   -1,   -1,   61, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, \n           -1,   59,  290,  291,   -1,  293,  294,  295,  296,  297, \n           91,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   10,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n          338,  339,   -1,   -1,  342,   -1,   -1,  345,   91,  347, \n           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,   -1,  363,   58,   59,   -1,   61, \n           -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  387, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,  267,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, \n           -1,   61,   -1,   63,  262,  263,  264,  279,  280,  375, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,  267,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   10,   -1,  328,    0,   10, \n           -1,   -1,   -1,   -1,  335,  336,  328,   -1,   10,   -1, \n           -1,   -1,   -1,  335,  336,   -1,   -1,   -1,   -1,  341, \n          342,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, \n          262,  263,  264,   -1,  342,  267,  268,  269,   -1,  271, \n          362,   -1,   -1,   -1,   -1,  328,   61,   -1,   59,  281, \n          282,   -1,  335,  336,   -1,  363,   -1,   59,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,    0,   -1,   91,   -1,   -1,  387, \n           91,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           -1,  363,   58,   59,   -1,   61,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,  387,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   10,  363,   58,   59,  267,   61,   -1,   63, \n          262,  263,  264,   -1,  279,  375,  268,  269,   -1,  271, \n           10,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, \n           -1,  293,  294,  295,  296,   10,   -1,   -1,   -1,   -1, \n           -1,   59,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  328,   -1,   -1,   -1,  328,   -1,   59, \n          335,  336,   -1,   -1,  335,  336,   -1,  342,   -1,   44, \n           -1,   -1,   -1,   91,   -1,   -1,  262,  263,  264,   -1, \n          342,  267,  268,  269,   -1,  271,   61,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,   59,  281,  282,   -1,   -1,   -1, \n           -1,  363,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   91,   -1,   -1,  305, \n            0,   -1,   -1,   -1,   -1,  387,   91,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, \n           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,  387,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,  267, \n           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,  267,   -1,  333, \n          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, \n          280,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           58,   59,  267,   61,  279,   63,   -1,   -1,   -1,   -1, \n          328,  375,   -1,   -1,   -1,  280,   -1,  335,  336,   -1, \n           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,  328,   -1, \n           -1,   -1,   -1,   91,   -1,  335,  336,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, \n           -1,   10,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1, \n          335,  336,  362,  328,   -1,   -1,   -1,  342,   -1,   -1, \n          335,  336,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1, \n           -1,   44,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   -1,   -1,  362,   61,   -1, \n           59,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   91,   -1, \n           -1,   -1,   91,   -1,   -1,   -1,   10,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   10,  349, \n           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   58,   59,   -1,   61,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,  262,  263,  264,  387,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   91,   -1,   61, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n          338,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           10,  349,   44,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,   -1,  363,   58,   59,  267,   61, \n           -1,   63,   -1,   -1,   -1,   -1,  279,  375,   -1,   -1, \n           -1,  280,   -1,   -1,   44,   -1,   -1,   -1,   -1,  387, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, \n           -1,   61,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,  328, \n           -1,   91,  335,  336,   -1,   -1,  335,  336,   -1,  342, \n           -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,  362,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   -1,   -1,   -1,  279,   -1,   -1, \n           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,  328,  361,   -1,  363, \n           58,   59,   -1,  335,  336,   63,   -1,   -1,   -1,   -1, \n          342,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          262,  263,  264,  387,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,  279, \n           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,  328,  361, \n           -1,  363,   58,   59,   -1,  335,  336,   63,   -1,   -1, \n           -1,   -1,  342,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  280,  281,  282,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,  362,  363,   58,   59,   -1,   61, \n           -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  387, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,  280,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,  362,  363,   58,   59, \n           -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,  349,   44,  351, \n           -1,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           -1,  363,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,  387,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   58,   59,   -1,   -1,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, \n           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,  387,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   91,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,  349,   44,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,  317,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,  328,  329, \n          330,   -1,   -1,  333,  334,  335,  336,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           44,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   58,   59,   -1,   -1,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,  387,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,  349,   44,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,   -1,  363,   -1,   59,   -1,   -1, \n           -1,   63,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   44,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   59,   -1,   -1,   -1,   63,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   91,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,    0,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   10,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n          262,  263,  264,  387,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,   -1,   59,   -1,   -1,   -1,   63,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  317,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,  328,  329,  330,   -1, \n           -1,  333,  334,  335,  336,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,  349,   -1,  351, \n            0,  353,  354,  355,  356,  357,  358,  359,   -1,  361, \n           10,  363,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,  387,   -1,   -1,   -1,   -1, \n           -1,   -1,  290,  291,   44,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59, \n           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,   -1,   -1,  333,  334,  335,  336,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,  387, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n            0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           10,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  349,   44,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   58,   59, \n           -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n          290,  291,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,   -1,  329, \n          330,   58,   59,  333,  334,   -1,   63,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   -1,  306,  307,   -1,   -1,  310, \n           -1,   -1,   -1,  314,  315,  375,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,  387,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,    0, \n          341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   10, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   44,   -1,  386,   -1,   -1,   -1,   -1, \n           -1,  281,  282,   -1,   -1,   -1,   -1,   58,   59,   -1, \n          290,  291,   63,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318,  319, \n          320,  321,  322,  323,  324,  325,  326,  327,   -1,  329, \n          330,   -1,   -1,  333,  334,   -1,   -1,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1,  349, \n           -1,  351,   -1,  353,  354,  355,  356,  357,  358,  359, \n           -1,  361,   -1,  363,   -1,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,  375,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  281,  282,   10,  387,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           44,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,   -1,  329,  330,   58,   59,  333,  334,   -1,   63, \n           -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345,   -1, \n          347,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   -1,  361,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          387,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          281,  282,   10,   -1,   -1,   -1,   -1,   -1,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   44,  318,  319,  320, \n          321,  322,  323,  324,  325,  326,  327,   -1,  329,  330, \n           58,   59,  333,  334,   -1,   63,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345, \n      };\n   }\n\n   private static final short[] yyCheck3() {\n      return new short[] {\n\n           -1,  347,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  281,  282,   -1,   -1,   44,   -1,   -1,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   59,   -1,   61,   -1,   63,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, \n          329,  330,   -1,   91,  333,  334,   -1,   -1,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n          349,   -1,  351,    0,  353,  354,  355,  356,  357,  358, \n          359,   -1,  361,   10,  363,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   44,  271,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           -1,   -1,   59,   -1,   61,   -1,   63,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, \n          333,  334,   -1,   -1,   -1,    0,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   10,  349,   -1,  351,   -1, \n          353,  354,  355,  356,  357,  358,  359,   -1,  361,   -1, \n          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  375,   -1,  262,  263,  264,   -1,   -1,   44, \n          268,  269,   -1,  271,  387,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  280,   -1,   59,   -1,   61,   -1,   63,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  317, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n          328,  329,  330,    0,   -1,  333,  334,  335,  336,   -1, \n           -1,   -1,   -1,   10,  342,   -1,   -1,   -1,   -1,   -1, \n           -1,  349,   -1,  351,   -1,  353,  354,  355,  356,  357, \n          358,  359,   -1,  361,  362,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n           -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,  387, \n           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, \n           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, \n          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, \n           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, \n           -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1, \n          267,  268,  269,    0,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  387,   10,  281,   -1,   -1,   91,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  328,   59,   -1,   61,   -1,   63,   -1,  335,  336, \n           -1,   -1,   -1,   -1,   -1,  342,  262,  263,  264,   -1, \n           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, \n          387,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44, \n           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   59,  361,   61,  363,   63,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,  338,  262,  263,  264,  342,   -1, \n           -1,  268,  269,   -1,  271,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   59,  361,   -1,  363, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, \n           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, \n          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, \n           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262, \n          263,  264,   -1,    0,  267,  268,  269,   -1,  271,   -1, \n           -1,   -1,  387,   10,   -1,   -1,   -1,   91,  281,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   59,   -1,   61,   -1,   63,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  342, \n           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   -1, \n          363,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44, \n           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   59,  361,   61,  363,   63,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   10, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,  338,  262,  263,  264,  342,   -1, \n           -1,  268,  269,   -1,  271,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   59,  363, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  387,   10,   -1,   -1,   -1,   -1,   -1, \n          317,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,  328,  329,  330,   -1,   -1,  333,  334,  335,  336, \n           -1,  338,   -1,   -1,   -1,  342,   -1,   -1,   44,   -1, \n           -1,   -1,  349,   -1,  351,   -1,  353,  354,  355,  356, \n          357,  358,  359,   59,  361,   61,  363,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1, \n          387,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,  328,  329,  330,   -1,   -1,  333,  334, \n          335,  336,   -1,  338,   -1,   -1,   -1,  342,   -1,   -1, \n           44,   -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354, \n          355,  356,  357,  358,  359,   59,  361,   61,  363,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  262,  263,  264,   -1,   -1,  267,  268,  269,   -1, \n          271,   -1,  387,   -1,   -1,   -1,   -1,   91,   -1,   -1, \n          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,    0,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   10,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   44,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,  342,  268,  269,  345,  271,   58,   59,   -1,   -1, \n           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  363,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1, \n           -1,   -1,   -1,  349,   -1,  351,    0,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   10,  363,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263, \n          264,   -1,   -1,   -1,  268,  269,   -1,  271,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           44,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   58,   59,   -1,   -1,   -1,   63, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  317,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,  328,  329,  330,   -1,   -1,  333, \n          334,  335,  336,   -1,   -1,   -1,   -1,   -1,  342,   -1, \n           -1,   -1,   -1,   -1,   -1,  349,   -1,  351,   -1,  353, \n          354,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,  387,   -1,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, \n           -1,  333,  334,   -1,   -1,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   44,  351, \n           -1,   -1,   -1,  355,  356,  357,  358,  359,   -1,  361, \n           -1,  363,   -1,   59,   -1,   61,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  387,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   10,   -1,  318,  319,  320,  321,  322,  323, \n          324,  325,  326,  327,   -1,  329,  330,   -1,   -1,  333, \n          334,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,   -1,   44,  351,   -1,   -1, \n           -1,  355,  356,  357,  358,  359,   -1,  361,   -1,  363, \n           58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1, \n           -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1, \n           -1,   -1,  268,  269,   -1,  271,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   58,   59,   -1,   -1,   -1,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  317,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,  328,  329,  330,   -1,   -1,  333,  334,  335, \n          336,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,   -1, \n           -1,   -1,   -1,  349,   -1,  351,   -1,  353,  354,  355, \n          356,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, \n           -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,   44,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   58, \n           59,   -1,  290,  291,   63,  293,  294,  295,  296,  297, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          318,  319,  320,  321,  322,  323,  324,  325,  326,  327, \n           -1,  329,  330,   -1,   -1,  333,  334,   -1,   -1,   -1, \n           -1,  339,   -1,   -1,  342,   -1,   -1,  345,    0,  347, \n           -1,   -1,   -1,  351,   -1,   -1,   -1,   -1,   10,  357, \n          358,  359,   -1,  361,   -1,  363,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,  375,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,  387, \n           -1,   -1,   44,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   58,   59,   -1,  305, \n           -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,   -1,  329,  330,   -1,   -1,  333,  334,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,   -1,   -1,  351,   -1,   -1,   -1,   -1, \n           -1,  357,  358,  359,   -1,  361,   -1,  363,   -1,   -1, \n           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,  375, \n           -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n           -1,  387,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  281,  282,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,   58,   59,   -1,   -1,  305,   63,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  318, \n          319,  320,  321,  322,  323,  324,  325,  326,  327,   -1, \n          329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,    0,  347,   -1, \n           -1,   -1,  351,   -1,   -1,   -1,   -1,   10,  357,  358, \n          359,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,  387,  271, \n           -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   58,   59,   -1,  290,  291, \n           63,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321, \n          322,  323,  324,  325,  326,  327,   -1,  329,  330,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,    0,   -1,  357,  358,  359,   -1,  361, \n           -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  387,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   44,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1, \n           -1,   58,   59,   -1,  290,  291,   63,  293,  294,  295, \n          296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  318,  319,  320,  321,  322,  323,  324,  325, \n          326,  327,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,    0,  345, \n           -1,  347,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1, \n           -1,  357,  358,  359,   -1,  361,   -1,  363,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,  375, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           -1,  387,   44,   -1,   -1,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   58,   59,   -1,   -1, \n           -1,   63,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  318,  319,  320,  321,  322, \n          323,  324,  325,  326,  327,   -1,  329,  330,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,    0,   -1,  357,  358,   -1,   -1,   -1,   -1, \n          363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  375,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  387,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,   -1,   44,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, \n           58,   59,   -1,  290,  291,   63,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  318,  319,  320,  321,  322,  323,  324,  325,  326, \n          327,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  339,   -1,   -1,  342,   -1,    0,  345,   -1, \n          347,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1, \n          357,  358,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n          387,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,   -1,   58,   59,   -1,  290,  291, \n           63,  293,  294,  295,  296,  297,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  324,  325,   -1,   -1,   -1,  329,  330,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1, \n          342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  375,  262,  263,  264,   -1,   -1,  267, \n          268,  269,   -1,  271,   -1,  387,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  281,  282,   -1,   -1,   44,   -1,   -1, \n           -1,   -1,  290,  291,   -1,  293,  294,  295,  296,  297, \n           -1,   58,   59,   -1,   -1,   -1,   63,  305,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  324,  325,   -1,   -1, \n           -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  339,   -1,   -1,  342,   -1,    0,  345,   -1,  347, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  375,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,  387, \n           44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   58,   59,   -1,  290,  291,   63, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, \n           -1,  324,  325,   -1,   -1,   10,  329,  330,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44, \n          363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  375,   58,   59,   -1,   -1,   -1,   63,   -1, \n           -1,   -1,   -1,   -1,  387,  262,  263,  264,   -1,   -1, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  305,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   44,   -1,  324,  325,   -1, \n           -1,   -1,  329,  330,   -1,   -1,   -1,   -1,   -1,   58, \n           59,   -1,  339,   -1,   63,  342,   -1,   -1,  345,   -1, \n          347,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,  262,  263, \n          264,   -1,   -1,  267,  268,  269,   -1,  271,  375,    0, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   10, \n          387,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1, \n          324,  325,   -1,   -1,   -1,  329,  330,   58,   59,   -1, \n           -1,   -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1, \n           -1,  345,   -1,  347,   -1,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,    0,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,  281,  282,   10,   -1, \n           -1,  375,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,  387,   -1,   -1,   -1,   -1,   -1,   -1, \n          305,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, \n           -1,   -1,   44,   -1,   -1,   -1,   -1,   10,   -1,  324, \n          325,   -1,   -1,   -1,  329,  330,   58,   59,   -1,   -1, \n           -1,   63,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1, \n          345,   -1,  347,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   44,  271,   -1,   -1,   -1,   -1,   -1,  363,   -1, \n           -1,   -1,  281,  282,   -1,   58,   59,   -1,   -1,   -1, \n          375,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,   -1,  387,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   10,   -1,  325,   -1,   -1,   -1, \n          329,  330,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   44,   -1, \n           -1,  262,  263,  264,  363,   -1,  267,  268,  269,   -1, \n          271,   -1,   58,   59,   -1,   -1,  375,   -1,   -1,   -1, \n          281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  387,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,   -1, \n           -1,    0,   -1,   -1,  305,   -1,   -1,   -1,   -1,   -1, \n           -1,   10,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  339,   -1, \n           -1,  342,   -1,   -1,  345,   44,  347,   -1,   -1,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           59,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,  281, \n          282,   -1,   -1,   -1,  375,   -1,   -1,   -1,  290,  291, \n           -1,  293,  294,  295,  296,  297,  387,    0,   -1,  262, \n          263,  264,   -1,  305,  267,  268,  269,   10,  271,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,  339,   -1,   -1, \n          342,   44,  305,  345,   -1,  347,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1, \n           -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  375,   -1,   -1,  339,   -1,   -1,  342, \n           -1,   -1,  345,   -1,  347,  387,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1,    0, \n          363,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   10, \n           -1,   -1,  375,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,   -1,   -1,  387,   -1,   -1,   -1,   -1,  305, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,   -1, \n           -1,   -1,   -1,   44,   -1,   -1,   -1,   10,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1, \n           -1,   -1,   -1,  339,   -1,   -1,  342,   -1,   -1,  345, \n           -1,  347,   -1,  262,  263,  264,   -1,   -1,  267,  268, \n          269,   44,  271,   -1,   -1,   -1,   -1,  363,   -1,   -1, \n           -1,   -1,  281,  282,   -1,   -1,   59,   -1,   -1,  375, \n           -1,  290,  291,   -1,  293,  294,  295,  296,  297,   -1, \n           -1,  387,   -1,   -1,   -1,   -1,  305,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   10,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          339,   -1,   -1,  342,   -1,   -1,  345,   -1,  347,  262, \n          263,  264,   -1,    0,  267,  268,  269,   -1,  271,   -1, \n           -1,   -1,   -1,   10,  363,   -1,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   59,   -1,  375,  290,  291,   -1, \n          293,  294,  295,  296,   -1,   -1,   -1,   -1,  387,   -1, \n           -1,   -1,  305,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,    0,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  339,   -1,   10,  342, \n           -1,   -1,  345,   -1,  347,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          363,  262,  263,  264,   -1,    0,  267,  268,  269,   -1, \n          271,   -1,  375,   -1,   -1,   10,   -1,   -1,   -1,   -1, \n          281,  282,   -1,   -1,  387,   -1,   -1,   59,   -1,  290, \n          291,   -1,  293,  294,  295,  296,  297,   -1,   -1,  262, \n          263,  264,   -1,   -1,  267,  268,  269,   -1,  271,   -1, \n           -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,  281,  282, \n           -1,   -1,   -1,   -1,   59,   10,   -1,  290,  291,   -1, \n          293,  294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1, \n           -1,  342,   -1,   -1,  345,   -1,  347,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  363,   -1,   10,   -1,   -1,   -1,   -1,   -1, \n            0,   -1,   -1,   -1,   59,   10,   -1,   -1,   -1,  342, \n           10,   -1,  345,   -1,  347,   -1,  387,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   -1, \n          363,   -1,   -1,   -1,   -1,   -1,  281,  282,   -1,   -1, \n           -1,   -1,   -1,   59,   44,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,  387,  262,  263,  264,   63,   59, \n          267,  268,  269,   -1,  271,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  281,  282,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  290,  291,   -1,  293,  294,  295,  296, \n          297,   -1,   -1,   -1,   -1,   -1,   -1,  342,   -1,   -1, \n          345,   -1,  347,   -1,   -1,   -1,    0,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,  363,   -1, \n          262,  263,  264,   -1,   -1,  267,  268,  269,   -1,  271, \n           -1,   -1,   -1,   -1,   -1,  342,   -1,   -1,  345,  281, \n          282,   -1,  387,   -1,   -1,   -1,   -1,   -1,  290,  291, \n           44,  293,  294,  295,  296,  297,  363,  262,  263,  264, \n            0,   -1,  267,  268,  269,   59,  271,   -1,   -1,   -1, \n           10,   -1,   -1,   -1,   -1,   -1,  281,   -1,   -1,   -1, \n          387,   -1,   -1,   -1,   -1,  290,  291,   -1,  293,  294, \n          295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          342,   -1,   -1,  345,   44,   -1,   -1,  262,  263,  264, \n           -1,   -1,  267,  268,  269,   -1,  271,   -1,   -1,   59, \n           -1,  363,   -1,   -1,   -1,   -1,  281,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  290,  291,  342,  293,  294, \n          295,  296,  297,   -1,   -1,  387,  262,  263,  264,   -1, \n           -1,  267,  268,  269,   -1,  271,   -1,   -1,  363,   -1, \n           -1,   -1,  262,  263,  264,  281,   10,  267,  268,  269, \n           -1,  271,   -1,   -1,  290,  291,   -1,  293,  294,  295, \n          296,  297,  387,   -1,   -1,   -1,   -1,  342,   -1,   -1, \n           -1,   -1,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1, \n           -1,   -1,  317,  318,  319,  320,  321,  322,  323,  324, \n          325,  326,  327,   -1,  329,  330,  342,   -1,  333,  334, \n           -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,   -1,  339, \n           -1,   -1,  342,   -1,  349,   -1,  351,  363,  353,  354, \n          355,  356,  357,  358,  359,   -1,  361,   -1,   -1,   -1, \n           -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,  262,  263, \n          264,  387,   -1,  267,  268,  269,   -1,  271,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  387,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   10,   -1,  293, \n          294,  295,  296,  297,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  262,  263,  264,   -1,   -1,  267,  268,  269, \n           -1,  271,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  339,   59,   -1,  342,   -1, \n           -1,   -1,   -1,  293,  294,  295,  296,  297,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  387,   -1,   -1,   -1,   -1,   -1,  339, \n           -1,   -1,  342,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  257,  258,  259,   -1,  261,   -1,   -1, \n           -1,  265,  266,  363,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   10,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,  387,  292,   -1, \n           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,  312,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,  348,   -1,  350,   -1,  352,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  360,   91,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n          384,  385,  386,  256,  257,  258,  259,  260,  261,  262, \n          263,  264,  265,  266,   -1,   -1,  269,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,  280,   -1,   10, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   59,   -1, \n           -1,   -1,  335,  336,  337,   -1,   -1,  340,  341,   -1, \n          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, \n           -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1,  362, \n           91,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,  384,  385,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  256,  257,  258,  259,  260,  261,  262,  263, \n          264,  265,  266,   -1,   -1,  269,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,  280,   -1,   10,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  328,   -1,   -1,   59,   -1,   -1, \n           -1,  335,  336,  337,   -1,   -1,  340,  341,   -1,  343, \n          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, \n           -1,   -1,   -1,  357,   -1,   -1,  360,   -1,  362,   91, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n          384,  385,   -1,   -1,   -1,  256,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,   -1,   -1,  269,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,  280, \n           -1,   10,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1, \n          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1, \n           59,   -1,   -1,   -1,  335,  336,  337,   -1,   -1,  340, \n          341,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, \n           -1,  352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360, \n           -1,  362,   91,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,  384,  385,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,   -1,  269,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   10,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  328,   59,   -1,   -1, \n           -1,   -1,   -1,  335,  336,  337,   -1,   -1,  340,  341, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,  357,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,   -1,   -1,   -1,  256,  257,  258, \n          259,  260,  261,  262,  263,  264,  265,  266,   -1,   -1, \n          269,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   10,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, \n          299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328, \n           59,   -1,   -1,   -1,   -1,   -1,  335,  336,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,  357,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,  384,  385,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261, \n          262,  263,  264,  265,  266,   -1,  268,  269,  270,  271, \n          272,  273,  274,  275,  276,  277,  278,   10,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,  298,  299,   -1,  301, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,   -1,   -1,   -1,  256,  257,  258, \n          259,  260,  261,  262,  263,  264,  265,  266,   -1,   -1, \n          269,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           10,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, \n          299,   -1,  301,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,  362,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1, \n      };\n   }\n\n   private static final short[] yyCheck4() {\n      return new short[] {\n\n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,  384,  385,   -1,   -1,   -1,   -1,   -1,   -1,  256, \n          257,  258,  259,  260,  261,  262,  263,  264,  265,  266, \n           -1,   -1,  269,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   10,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,  298,  299,   -1,  301,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,   -1, \n           -1,   -1,  256,  257,  258,  259,  260,  261,  262,  263, \n          264,  265,  266,   -1,   -1,  269,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   10,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,  298,  299,   -1,  301,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n          384,  385,   -1,   -1,   -1,   -1,   -1,   -1,  256,  257, \n          258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   10,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,  363,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,   -1,   -1, \n           -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   10,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,  298,  299,   -1,  301,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,   -1,  342,  343,  344, \n           -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, \n          385,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258, \n          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   44,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,  384,  385,   -1,   -1,   -1, \n           -1,  257,  258,  259,   -1,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   44,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n           -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,   -1, \n          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, \n           59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,  384,  385,   -1,   -1,   -1,   -1,  257, \n          258,  259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,   -1,   -1,  316,   59, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, \n          259,  260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298, \n          299,  300,  301,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,  348, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,  384,  385,  257,  258,  259, \n          260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299, \n           -1,  301,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, \n           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, \n          341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,  308,   -1,  310, \n           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,  365,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,   -1,   -1,  310, \n           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,  365,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  386,  257,  258,  259,  260, \n          261,  262,  263,  264,  265,  266,  267,  268,  269,  270, \n          271,  272,  273,  274,  275,  276,  277,  278,  279,  280, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,  290, \n          291,  292,   -1,   -1,   -1,   -1,  297,  298,  299,  300, \n          301,  302,  303,  304,   -1,  306,  307,   -1,   -1,  310, \n           -1,   -1,   -1,  314,  315,   -1,  317,  318,  319,  320, \n          321,  322,  323,   -1,   -1,  326,  327,   -1,   -1,   -1, \n          331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1, \n          351,  352,  353,  354,  355,  356,  357,  358,  359,  360, \n          361,   -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1, \n          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   -1,  270,  386,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,  300,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          256,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,  298,  299,   -1,  301,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,   -1,   -1,  350,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,  312,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  386, \n          257,  258,  259,  260,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,  298,  299,  300,  301,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,  348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  257, \n          258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n          298,  299,   -1,  301,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n          348,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, \n          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,  341,   -1,  343,  344,   -1,  346,   -1,   -1, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,  384,  385,  257,  258,  259, \n           -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,  314,  315,  316,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1, \n           -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          360,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  257,  258,  259,   -1, \n          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1, \n           -1,  352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,  384,  385,  257,  258,  259,   -1,  261, \n           -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1, \n          352,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,  257,  258,  259,   -1,  261,   -1, \n           -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,  314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, \n          343,  344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1, \n           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,  384,  385,  257,  258,  259,   -1,  261,   -1,   -1, \n           -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n          314,  315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,  348,   -1,   -1,   -1,  352,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n          384,  385,  257,  258,  259,   -1,  261,   -1,   -1,   -1, \n          265,  266,   -1,   -1,   -1,  270,   -1,  272,  273,  274, \n          275,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284, \n          285,  286,  287,  288,  289,   -1,   -1,  292,   -1,   -1, \n           -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304, \n           -1,  306,  307,  308,  309,  310,  311,   -1,  313,  314, \n          315,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  337,   -1,   -1,  340,  341,   -1,  343,  344, \n           -1,  346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1, \n          365,  366,  367,  368,  369,  370,   -1,   -1,   -1,  374, \n           -1,  376,  377,   -1,  379,  380,  381,  382,   -1,  384, \n          385,  257,  258,  259,   -1,  261,   -1,   -1,   -1,  265, \n          266,   -1,   -1,   -1,  270,   -1,  272,  273,  274,  275, \n          276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285, \n          286,  287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1, \n           -1,   -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1, \n          306,  307,  308,  309,  310,  311,   -1,  313,  314,  315, \n          316,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1, \n          346,   -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365, \n          366,  367,  368,  369,  370,   -1,   -1,   -1,  374,   -1, \n          376,  377,   -1,  379,  380,  381,  382,   -1,  384,  385, \n          257,  258,  259,   -1,  261,   -1,   -1,   -1,  265,  266, \n           -1,   -1,   -1,  270,   -1,  272,  273,  274,  275,  276, \n          277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286, \n          287,  288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1, \n           -1,   -1,  299,   -1,   -1,  302,  303,  304,   -1,  306, \n          307,  308,  309,  310,  311,   -1,  313,  314,  315,  316, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n          337,   -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346, \n           -1,   -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366, \n          367,  368,  369,  370,   -1,   -1,   -1,  374,   -1,  376, \n          377,   -1,  379,  380,  381,  382,   -1,  384,  385,  257, \n          258,  259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1, \n           -1,   -1,  270,   -1,  272,  273,  274,  275,  276,  277, \n          278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287, \n          288,  289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1, \n           -1,  299,   -1,   -1,  302,  303,  304,   -1,  306,  307, \n          308,  309,  310,  311,   -1,  313,  314,  315,  316,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337, \n           -1,   -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1, \n           -1,   -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367, \n          368,  369,  370,   -1,   -1,   -1,  374,   -1,  376,  377, \n           -1,  379,  380,  381,  382,   -1,  384,  385,  257,  258, \n          259,   -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1, \n           -1,  270,   -1,  272,  273,  274,  275,  276,  277,  278, \n           -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288, \n          289,   -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1, \n          299,   -1,   -1,  302,  303,  304,   -1,  306,  307,  308, \n          309,  310,  311,   -1,  313,  314,  315,  316,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  337,   -1, \n           -1,  340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1, \n           -1,   -1,   -1,  352,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  360,   -1,   -1,   -1,   -1,  365,  366,  367,  368, \n          369,  370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1, \n          379,  380,  381,  382,   -1,  384,  385,  257,  258,  259, \n           -1,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1, \n          270,   -1,  272,  273,  274,  275,  276,  277,  278,   -1, \n           -1,   -1,   -1,  283,  284,  285,  286,  287,  288,  289, \n           -1,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299, \n           -1,   -1,  302,  303,  304,   -1,  306,  307,  308,  309, \n          310,  311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  333,   -1,   -1,   -1,  337,   -1,   -1, \n          340,   -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  365,  366,  367,  368,  369, \n          370,   -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379, \n          380,  381,  382,   -1,  384,  385,  257,  258,  259,   -1, \n          261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270, \n           -1,  272,  273,  274,  275,  276,  277,  278,   -1,   -1, \n           -1,   -1,  283,  284,  285,  286,  287,  288,  289,   -1, \n           -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1, \n           -1,  302,  303,  304,   -1,  306,  307,  308,  309,  310, \n          311,   -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340, \n           -1,   -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  365,  366,  367,  368,  369,  370, \n           -1,   -1,   -1,  374,   -1,  376,  377,   -1,  379,  380, \n          381,  382,   -1,  384,  385,  257,  258,  259,   -1,  261, \n           -1,   -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1, \n          272,  273,  274,  275,  276,  277,  278,   -1,   -1,   -1, \n           -1,  283,  284,  285,  286,  287,  288,  289,   -1,   -1, \n          292,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1, \n          302,  303,  304,   -1,  306,  307,  308,  309,  310,  311, \n           -1,  313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1, \n           -1,  343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  365,  366,  367,  368,  369,  370,   -1, \n           -1,   -1,  374,   -1,  376,  377,   -1,  379,  380,  381, \n          382,   -1,  384,  385,  257,  258,  259,   -1,  261,   -1, \n           -1,   -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272, \n          273,  274,  275,  276,  277,  278,   -1,   -1,   -1,   -1, \n          283,  284,  285,  286,  287,  288,  289,   -1,   -1,  292, \n           -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302, \n          303,  304,   -1,  306,  307,  308,  309,  310,  311,   -1, \n          313,   -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1, \n          343,  344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,  365,  366,  367,  368,  369,  370,   -1,   -1, \n           -1,  374,   -1,  376,  377,   -1,  379,  380,  381,  382, \n           -1,  384,  385,  257,  258,  259,   -1,  261,   -1,   -1, \n           -1,  265,  266,   -1,   -1,   -1,  270,   -1,  272,  273, \n          274,  275,  276,  277,  278,   -1,   -1,   -1,   -1,  283, \n          284,  285,  286,  287,  288,  289,   -1,   -1,  292,   -1, \n           -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,  302,  303, \n          304,   -1,  306,  307,  308,  309,  310,  311,   -1,  313, \n           -1,   -1,  316,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,  337,   -1,   -1,  340,   -1,   -1,  343, \n          344,   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,  365,  366,  367,  368,  369,  370,   -1,   -1,   -1, \n          374,   -1,  376,  377,   -1,  379,  380,  381,  382,   -1, \n          384,  385,  306,  307,   -1,   -1,  310,   -1,   -1,   -1, \n          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, \n           -1,   -1,  326,  327,   -1,   -1,   -1,  331,  332,  333, \n          334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, \n          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,  386,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   -1,   -1,  386,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,  341, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n          306,  307,  364,   -1,  310,   -1,   -1,   -1,  314,  315, \n           -1,  317,  318,  319,  320,  321,  322,  323,   -1,   -1, \n          326,  327,   -1,   -1,  386,  331,  332,  333,  334,   -1, \n           -1,   -1,   -1,   -1,   -1,  341,   -1,   -1,   -1,   -1, \n           -1,   -1,  348,  349,   -1,  351,  352,  353,  354,  355, \n          356,  357,  358,  359,  360,  361,  306,  307,  364,   -1, \n          310,   -1,   -1,   -1,  314,  315,   -1,  317,  318,  319, \n          320,  321,  322,  323,   -1,   -1,  326,  327,   -1,   -1, \n          386,  331,  332,  333,  334,   -1,   -1,   -1,   -1,   -1, \n           -1,  341,   -1,   -1,   -1,   -1,   -1,   -1,  348,  349, \n           -1,  351,  352,  353,  354,  355,  356,  357,  358,  359, \n          360,  361,  306,  307,  364,   -1,  310,   -1,   -1,   -1, \n          314,  315,   -1,  317,  318,  319,  320,  321,  322,  323, \n           -1,   -1,  326,  327,   -1,   -1,  386,  331,  332,  333, \n          334,   -1,   -1,   -1,   -1,   -1,   -1,  341,   -1,   -1, \n           -1,   -1,   -1,   -1,  348,  349,   -1,  351,  352,  353, \n          354,  355,  356,  357,  358,  359,  360,  361,  306,  307, \n          364,   -1,  310,   -1,   -1,   -1,  314,  315,   -1,  317, \n          318,  319,  320,  321,  322,  323,   -1,   -1,  326,  327, \n           -1,   -1,  386,  331,  332,  333,  334,   -1,   -1,   -1, \n           -1,   -1,   -1,  341,   -1,   -1,   -1,   -1,   -1,   -1, \n          348,  349,   -1,  351,  352,  353,  354,  355,  356,  357, \n          358,  359,  360,  361,  306,  307,  364,   -1,  310,   -1, \n           -1,   -1,  314,  315,   -1,  317,  318,  319,  320,  321, \n          322,  323,   -1,   -1,  326,  327,   -1,   -1,  386,  331, \n          332,  333,  334,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,  348,  349,   -1,  351, \n          352,  353,  354,  355,  356,  357,  358,  359,  360,  361, \n           -1,   -1,  364,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1, \n           -1,   -1,   -1,   -1,  386, \n      };\n   }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitOrCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitAndCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitAndCallSite extends MonomorphicCallSite {\n\n    public BitAndCallSite() {\n        super(\"&\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "50",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitOrCallSite extends MonomorphicCallSite {\n\n    public BitOrCallSite() {\n        super(\"|\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "91",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "96",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "91",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "91",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "91",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MinusCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LtCallSite extends BimorphicCallSite {\n\n    public LtCallSite() {\n        super(\"<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "96",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MinusCallSite extends BimorphicCallSite {\n\n    public MinusCallSite() {\n        super(\"-\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LtCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            }
        ],
        "SLOC": "91",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LtCallSite extends BimorphicCallSite {\n\n    public LtCallSite() {\n        super(\"<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MulCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MinusCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MinusCallSite extends BimorphicCallSite {\n\n    public MinusCallSite() {\n        super(\"-\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LtCallSite extends BimorphicCallSite {\n\n    public LtCallSite() {\n        super(\"<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ModCallSite.java",
                "SLOC": "86",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ModCallSite extends BimorphicCallSite {\n\n    public ModCallSite() {\n        super(\"%\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "96",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MulCallSite extends BimorphicCallSite {\n\n    public MulCallSite() {\n        super(\"*\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/PlusCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MinusCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MinusCallSite extends BimorphicCallSite {\n\n    public MinusCallSite() {\n        super(\"-\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MulCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MulCallSite extends BimorphicCallSite {\n\n    public MulCallSite() {\n        super(\"*\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mul(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mul(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LtCallSite extends BimorphicCallSite {\n\n    public LtCallSite() {\n        super(\"<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ModCallSite.java",
                "SLOC": "86",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ModCallSite extends BimorphicCallSite {\n\n    public ModCallSite() {\n        super(\"%\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            }
        ],
        "SLOC": "96",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class PlusCallSite extends BimorphicCallSite {\n\n    public PlusCallSite() {\n        super(\"+\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_plus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_plus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_plus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_plus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_plus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_plus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ModCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GtCallSite extends BimorphicCallSite {\n\n    public GtCallSite() {\n        super(\">\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_gt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_gt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/MinusCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class MinusCallSite extends BimorphicCallSite {\n\n    public MinusCallSite() {\n        super(\"-\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_minus(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_minus(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CmpCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class CmpCallSite extends BimorphicCallSite {\n\n    public CmpCallSite() {\n        super(\"<=>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_cmp(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LeCallSite extends BimorphicCallSite {\n\n    public LeCallSite() {\n        super(\"<=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_le(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_le(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/LtCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class LtCallSite extends BimorphicCallSite {\n\n    public LtCallSite() {\n        super(\"<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lt(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_lt(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/DivCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class DivCallSite extends BimorphicCallSite {\n\n    public DivCallSite() {\n        super(\"/\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_div(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_div(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/EqCallSite.java",
                "SLOC": "96",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class EqCallSite extends BimorphicCallSite {\n\n    public EqCallSite() {\n        super(\"==\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_equal(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_equal(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/GeCallSite.java",
                "SLOC": "91",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class GeCallSite extends BimorphicCallSite {\n\n    public GeCallSite() {\n        super(\">=\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_ge(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_ge(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n    \n}\n"
            }
        ],
        "SLOC": "86",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ModCallSite extends BimorphicCallSite {\n\n    public ModCallSite() {\n        super(\"%\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_mod(context, arg1);\n            }\n        } else if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double arg1) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache instanceof FloatEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFloat) self).op_mod(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    protected CacheEntry setSecondaryCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFloat && entry.method.isBuiltin()) {\n            return secondaryCache = new FloatEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return secondaryCache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    @Override\n    public boolean isSecondaryBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFloat) {\n            CacheEntry cache = this.secondaryCache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FloatEntry;\n        }\n        return super.isSecondaryBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n    private static class FloatEntry extends CacheEntry {\n\n        FloatEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ShiftRightCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ShiftLeftCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ShiftLeftCallSite extends MonomorphicCallSite {\n    public ShiftLeftCallSite() {\n        super(\"<<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitAndCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitAndCallSite extends MonomorphicCallSite {\n\n    public BitAndCallSite() {\n        super(\"&\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitOrCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitOrCallSite extends MonomorphicCallSite {\n\n    public BitOrCallSite() {\n        super(\"|\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "50",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ShiftRightCallSite extends MonomorphicCallSite {\n\n    public ShiftRightCallSite() {\n        super(\">>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_rshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_rshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/XorCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitAndCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitAndCallSite extends MonomorphicCallSite {\n\n    public BitAndCallSite() {\n        super(\"&\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitOrCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitOrCallSite extends MonomorphicCallSite {\n\n    public BitOrCallSite() {\n        super(\"|\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ShiftLeftCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ShiftLeftCallSite extends MonomorphicCallSite {\n    public ShiftLeftCallSite() {\n        super(\"<<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ShiftRightCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ShiftRightCallSite extends MonomorphicCallSite {\n\n    public ShiftRightCallSite() {\n        super(\">>\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_rshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_rshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "50",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class XorCallSite extends MonomorphicCallSite {\n    public XorCallSite() {\n        super(\"^\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_xor(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_xor(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/ShiftLeftCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitAndCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitAndCallSite extends MonomorphicCallSite {\n\n    public BitAndCallSite() {\n        super(\"&\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_and(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            },
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/BitOrCallSite.java",
                "SLOC": "50",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class BitOrCallSite extends MonomorphicCallSite {\n\n    public BitOrCallSite() {\n        super(\"|\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_or(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
            }
        ],
        "SLOC": "50",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic class ShiftLeftCallSite extends MonomorphicCallSite {\n    public ShiftLeftCallSite() {\n        super(\"<<\");\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache instanceof FixnumEntry && cache.typeOk(getMetaClass(self))) {\n                return ((RubyFixnum) self).op_lshift(context, arg1);\n            }\n        }\n        return super.call(context, caller, self, arg1);\n    }\n\n    @Override\n    protected CacheEntry setCache(final CacheEntry entry, final IRubyObject self) {\n        if (self instanceof RubyFixnum && entry.method.isBuiltin()) {\n            return cache = new FixnumEntry(entry); // tagged entry - do isBuiltin check once\n        }\n        return cache = entry;\n    }\n\n    @Override\n    public boolean isBuiltin(final IRubyObject self) {\n        if (self instanceof RubyFixnum) {\n            CacheEntry cache = this.cache;\n            if (cache.typeOk(getMetaClass(self))) return cache instanceof FixnumEntry;\n        }\n        return super.isBuiltin(self);\n    }\n\n    private static class FixnumEntry extends CacheEntry {\n\n        FixnumEntry(CacheEntry entry) {\n            super(entry.method, entry.sourceModule, entry.token);\n        }\n\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/SuperCallSite.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/callsite/CachingCallSite.java",
                "SLOC": "430",
                "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyClass;\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.internal.runtime.methods.DynamicMethod;\nimport org.jruby.runtime.Helpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.ClassIndex;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\nimport static org.jruby.RubyBasicObject.getMetaClass;\n\npublic abstract class CachingCallSite extends CallSite {\n\n    protected CacheEntry cache = CacheEntry.NULL_CACHE;\n    protected CacheEntry builtinCache = CacheEntry.NULL_CACHE;\n\n    public CachingCallSite(String methodName, CallType callType) {\n        super(methodName, callType);\n    }\n\n    public final CacheEntry getCache() {\n        return cache;\n    }\n\n    protected CacheEntry setCache(CacheEntry entry, IRubyObject self) {\n        return cache = entry;\n    }\n\n    public final boolean isOptimizable() {\n        return cache != CacheEntry.NULL_CACHE;\n    }\n\n    public final int getCachedClassIndex() {\n        CacheEntry cache = this.cache;\n        if (cache != CacheEntry.NULL_CACHE) {\n            return cache.method.getImplementationClass().getClassIndex().ordinal();\n        }\n        return ClassIndex.NO_INDEX.ordinal();\n    }\n\n    public final String getMethodName() {\n        return methodName;\n    }\n\n    public final long getCachedMethodSerial() {\n        CacheEntry cache = this.cache;\n        if (cache != CacheEntry.NULL_CACHE) {\n            return cache.method.getSerialNumber();\n        }\n        return -1;\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long fixnum) {\n        return call(context, caller, self, RubyFixnum.newFixnum(context.runtime, fixnum));\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double flote) {\n        return call(context, caller, self, RubyFloat.newFloat(context.runtime, flote));\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject... args) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, args);\n        }\n        return cacheAndCall(caller, selfType, args, context, self);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject[] args, Block block) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, args, block);\n        }\n        return cacheAndCall(caller, selfType, block, args, context, self);\n    }\n\n    @Override\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self,\n        IRubyObject[] args, Block block) {\n        try {\n            return call(context, caller, self, args, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    @Override\n    public final IRubyObject callVarargs(ThreadContext context, IRubyObject caller,\n        IRubyObject self, IRubyObject... args) {\n        switch (args.length) {\n            case 0: return call(context, caller, self);\n            case 1: return call(context, caller, self, args[0]);\n            case 2: return call(context, caller, self, args[0], args[1]);\n            case 3: return call(context, caller, self, args[0], args[1], args[2]);\n            default: return call(context, caller, self, args);\n        }\n    }\n\n    @Override\n    public final IRubyObject callVarargs(ThreadContext context, IRubyObject caller,\n        IRubyObject self, IRubyObject[] args, Block block) {\n        switch (args.length) {\n            case 0: return call(context, caller, self, block);\n            case 1: return call(context, caller, self, args[0], block);\n            case 2: return call(context, caller, self, args[0], args[1], block);\n            case 3: return call(context, caller, self, args[0], args[1], args[2], block);\n            default: return call(context, caller, self, args, block);\n        }\n    }\n\n    @Override\n    public final IRubyObject callVarargsIter(ThreadContext context, IRubyObject caller,\n        IRubyObject self, IRubyObject[] args, Block block) {\n        switch (args.length) {\n            case 0: return callIter(context, caller, self, block);\n            case 1: return callIter(context, caller, self, args[0], block);\n            case 2: return callIter(context, caller, self, args[0], args[1], block);\n            case 3: return callIter(context, caller, self, args[0], args[1], args[2], block);\n            default: return callIter(context, caller, self, args, block);\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName);\n        }\n        return cacheAndCall(caller, selfType, context, self);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, Block block) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self);\n    }\n\n    @Override\n    public final IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self,\n        Block block) {\n        try {\n            return call(context, caller, self, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1);\n        }\n        return cacheAndCall(caller, selfType, context, self, arg1);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, Block block) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, arg1);\n    }\n\n    @Override\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self,\n        IRubyObject arg1, Block block) {\n        try {\n            return call(context, caller, self, arg1, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1, arg2);\n        }\n        return cacheAndCall(caller, selfType, context, self, arg1, arg2);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, Block block) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1, arg2, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, arg1, arg2);\n    }\n\n    @Override\n    public final IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self,\n        IRubyObject arg1, IRubyObject arg2, Block block) {\n        try {\n            return call(context, caller, self, arg1, arg2, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1, arg2, arg3);\n        }\n        return cacheAndCall(caller, selfType, context, self, arg1, arg2, arg3);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.call(context, self, cache.sourceModule, methodName, arg1, arg2, arg3, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, arg1, arg2, arg3);\n    }\n\n    @Override\n    public final IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self,\n        IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        try {\n            return call(context, caller, self, arg1, arg2, arg3, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    public final CacheEntry retrieveCache(IRubyObject self) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache;\n        }\n        return cacheAndGet(self, selfType, methodName);\n    }\n\n    @Deprecated\n    public final CacheEntry retrieveCache(RubyClass selfType) {\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache;\n        }\n        return cacheAndGet(selfType, methodName);\n    }\n\n    @Deprecated\n    public final CacheEntry retrieveCache(RubyClass selfType, String methodName) {\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache;\n        }\n        return cacheAndGet(selfType, methodName);\n    }\n\n    public boolean isBuiltin(IRubyObject self) {\n        RubyClass selfType = getMetaClass(self);\n        // This must be retrieved *once* to avoid racing with other threads.\n        CacheEntry cache = this.builtinCache;\n        if (cache.typeOk(selfType)) {\n            return true;\n        }\n        return cacheAndGet(self, selfType, methodName).method.isBuiltin(); // false for method.isUndefined()\n    }\n\n    @Deprecated\n    public final boolean isBuiltin(RubyClass selfType) {\n        CacheEntry cache = this.cache;\n        if (cache.typeOk(selfType)) {\n            return cache.method.isBuiltin();\n        }\n        return cacheAndGet(selfType, methodName).method.isBuiltin();\n    }\n\n    @Deprecated\n    private CacheEntry cacheAndGet(RubyClass selfType, String methodName) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        if (!entry.method.isUndefined()) {\n            this.cache = entry;\n            if (entry.method.isBuiltin()) builtinCache = entry;\n        }\n        return entry;\n    }\n\n    private CacheEntry cacheAndGet(IRubyObject self, RubyClass selfType, String methodName) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        if (!entry.method.isUndefined()) entry = setCache(entry, self);\n        return entry;\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block,\n        IRubyObject[] args, ThreadContext context, IRubyObject self) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, args, block);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, args, block);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType,\n        IRubyObject[] args, ThreadContext context, IRubyObject self) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, args);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, args);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType,\n        ThreadContext context, IRubyObject self) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block,\n        ThreadContext context, IRubyObject self) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, block);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, IRubyObject arg) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block,\n        ThreadContext context, IRubyObject self, IRubyObject arg) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg, block);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, IRubyObject arg1, IRubyObject arg2) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg1, arg2);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg1, arg2);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block,\n        ThreadContext context, IRubyObject self, IRubyObject arg1, IRubyObject arg2) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg1, arg2, block);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg1, arg2, block);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType,\n        ThreadContext context, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg1, arg2, arg3);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg1, arg2, arg3);\n    }\n\n    private IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block,\n        ThreadContext context, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        CacheEntry entry = selfType.searchWithCache(methodName);\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, method, arg1, arg2, arg3, block);\n        }\n        entry = setCache(entry, self);\n        return method.call(context, self, entry.sourceModule, methodName, arg1, arg2, arg3, block);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject[] args) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, args, Block.NULL_BLOCK);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, Block.NULL_BLOCK);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, Block block) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, block);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, arg, Block.NULL_BLOCK);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject[] args, Block block) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, args, block);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg0, Block block) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, arg0, block);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg0, IRubyObject arg1) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, arg0, arg1, Block.NULL_BLOCK);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg0, IRubyObject arg1, Block block) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, arg0, arg1, block);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, selfType, methodName, arg0, arg1, arg2, Block.NULL_BLOCK);\n    }\n\n    protected final IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType,\n                                                  DynamicMethod method, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        return Helpers.selectMethodMissing(context, selfType, method.getVisibility(), methodName, callType).call(context, self, self.getMetaClass(), methodName, arg0, arg1, arg2, block);\n    }\n\n    protected boolean methodMissing(DynamicMethod method, IRubyObject caller) {\n        return method.isUndefined() || (!methodName.equals(\"method_missing\") && !method.isCallableFrom(caller, callType));\n    }\n\n    protected static RubyClass getClass(IRubyObject self) {\n        // the cast in the following line is necessary due to lacking optimizations in Hotspot\n        return getMetaClass(self);\n    }\n}\n"
            }
        ],
        "SLOC": "326",
        "content": "package org.jruby.runtime.callsite;\n\nimport org.jruby.RubyClass;\nimport org.jruby.RubyFixnum;\nimport org.jruby.RubyFloat;\nimport org.jruby.RubyModule;\nimport org.jruby.internal.runtime.methods.DynamicMethod;\nimport org.jruby.runtime.Helpers;\nimport org.jruby.runtime.Block;\nimport org.jruby.runtime.CallSite;\nimport org.jruby.runtime.CallType;\nimport org.jruby.runtime.ThreadContext;\nimport org.jruby.runtime.builtin.IRubyObject;\n\npublic class SuperCallSite extends CallSite {\n    protected volatile SuperTuple cache = SuperTuple.NULL_CACHE;\n\n    private static class SuperTuple {\n        static final SuperTuple NULL_CACHE = new SuperTuple(\"\", CacheEntry.NULL_CACHE);\n        public final String name;\n        public final CacheEntry cache;\n\n        public SuperTuple(String name, CacheEntry cache) {\n            this.name = name;\n            this.cache = cache;\n        }\n\n        public boolean cacheOk(String name, RubyClass klass) {\n            return this.name.equals(name) && cache.typeOk(klass);\n        }\n    }\n    \n    public SuperCallSite() {\n        super(\"super\", CallType.SUPER);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, long fixnum) {\n        return call(context, caller, self, RubyFixnum.newFixnum(context.runtime, fixnum));\n    }\n    \n    @Override\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, double flote) {\n        return call(context, caller, self, RubyFloat.newFloat(context.runtime, flote));\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject... args) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, args);\n        }\n        return cacheAndCall(caller, selfType, args, context, self, name);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject[] args, Block block) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, args, block);\n        }\n        return cacheAndCall(caller, selfType, block, args, context, self, name);\n    }\n\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject[] args, Block block) {\n        try {\n            return call(context, caller, self, args, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    public IRubyObject callVarargs(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject... args) {\n        switch (args.length) {\n            case 0: return call(context, caller, self);\n            case 1: return call(context, caller, self, args[0]);\n            case 2: return call(context, caller, self, args[0], args[1]);\n            case 3: return call(context, caller, self, args[0], args[1], args[2]);\n            default: return call(context, caller, self, args);\n        }\n    }\n\n    public IRubyObject callVarargs(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject[] args, Block block) {\n        switch (args.length) {\n            case 0: return call(context, caller, self, block);\n            case 1: return call(context, caller, self, args[0], block);\n            case 2: return call(context, caller, self, args[0], args[1], block);\n            case 3: return call(context, caller, self, args[0], args[1], args[2], block);\n            default: return call(context, caller, self, args, block);\n        }\n    }\n\n    public IRubyObject callVarargsIter(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject[] args, Block block) {\n        switch (args.length) {\n            case 0: return callIter(context, caller, self, block);\n            case 1: return callIter(context, caller, self, args[0], block);\n            case 2: return callIter(context, caller, self, args[0], args[1], block);\n            case 3: return callIter(context, caller, self, args[0], args[1], args[2], block);\n            default: return callIter(context, caller, self, args, block);\n        }\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name);\n        }\n        return cacheAndCall(caller, selfType, context, self, name);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, Block block) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, name);\n    }\n\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self, Block block) {\n        try {\n            return call(context, caller, self, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1);\n        }\n        return cacheAndCall(caller, selfType, context, self, name, arg1);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, Block block) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, name, arg1);\n    }\n\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, Block block) {\n        try {\n            return call(context, caller, self, arg1, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1, arg2);\n        }\n        return cacheAndCall(caller, selfType, context, self, name, arg1, arg2);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, Block block) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1, arg2, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, name, arg1, arg2);\n    }\n\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, Block block) {\n        try {\n            return call(context, caller, self, arg1, arg2, block);\n        } finally {\n            block.escape();\n        }\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1, arg2, arg3);\n        }\n        return cacheAndCall(caller, selfType, context, self, name, arg1, arg2, arg3);\n    }\n\n    public IRubyObject call(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        RubyModule klazz = context.getFrameKlazz();\n        String name = context.getFrameName();\n        RubyClass selfType = pollAndGetClass(context, self, klazz, name);\n\n        SuperTuple myCache = cache;\n        if (selfType != null && myCache.cacheOk(name, selfType)) {\n            return myCache.cache.method.call(context, self, cache.cache.sourceModule, name, arg1, arg2, arg3, block);\n        }\n        return cacheAndCall(caller, selfType, block, context, self, name, arg1, arg2, arg3);\n    }\n\n    public IRubyObject callIter(ThreadContext context, IRubyObject caller, IRubyObject self, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3, Block block) {\n        try {\n            return call(context, caller, self, arg1, arg2, arg3, block);\n        } finally {\n            block.escape();\n        }\n    }\n    \n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block, IRubyObject[] args, ThreadContext context, IRubyObject self, String name) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, args, block);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, args, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, IRubyObject[] args, ThreadContext context, IRubyObject self, String name) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, args);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, args);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, String name) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block, ThreadContext context, IRubyObject self, String name) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, block);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, String name, IRubyObject arg) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block, ThreadContext context, IRubyObject self, String name, IRubyObject arg) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg, block);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg1, arg2);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg1, arg2);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block, ThreadContext context, IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg1, arg2, block);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg1, arg2, block);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, ThreadContext context, IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg1, arg2, arg3);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg1, arg2, arg3);\n    }\n\n    protected IRubyObject cacheAndCall(IRubyObject caller, RubyClass selfType, Block block, ThreadContext context, IRubyObject self, String name, IRubyObject arg1, IRubyObject arg2, IRubyObject arg3) {\n        CacheEntry entry = selfType != null ? selfType.searchWithCache(name) : CacheEntry.NULL_CACHE;\n        DynamicMethod method = entry.method;\n        if (methodMissing(method, caller)) {\n            return callMethodMissing(context, self, selfType, name, method, arg1, arg2, arg3, block);\n        }\n        cache = new SuperTuple(name, entry);\n        return method.call(context, self, entry.sourceModule, name, arg1, arg2, arg3, block);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject[] args) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, args, Block.NULL_BLOCK);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, Block.NULL_BLOCK);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, Block block) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, block);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg, Block.NULL_BLOCK);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject[] args, Block block) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, args, block);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg0, Block block) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg0, block);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg0, IRubyObject arg1) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg0, arg1, Block.NULL_BLOCK);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg0, IRubyObject arg1, Block block) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg0, arg1, block);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg0, IRubyObject arg1, IRubyObject arg3) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg0, arg1, arg3, Block.NULL_BLOCK);\n    }\n\n    protected IRubyObject callMethodMissing(ThreadContext context, IRubyObject self, RubyClass selfType, String name, DynamicMethod method, IRubyObject arg0, IRubyObject arg1, IRubyObject arg2, Block block) {\n        return Helpers.callMethodMissing(context, self, selfType, method.getVisibility(), name, callType, arg0, arg1, arg2, block);\n    }\n\n    protected boolean methodMissing(DynamicMethod method, IRubyObject caller) {\n        return method.isUndefined();\n    }\n\n    protected static RubyClass pollAndGetClass(ThreadContext context, IRubyObject self, RubyModule frameClass, String frameName) {\n        Helpers.checkSuperDisabledOrOutOfMethod(context, frameClass, frameName);\n\n        return frameClass.getSuperClass();\n    }\n\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/ivars/StampedVariableAccessor.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/main/java/org/jruby/runtime/ivars/NonvolatileVariableAccessor.java",
                "SLOC": "144",
                "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.runtime.ivars;\n\nimport org.jruby.RubyBasicObject;\nimport org.jruby.RubyClass;\nimport org.jruby.util.ArraySupport;\nimport org.jruby.util.unsafe.UnsafeHolder;\n\n/**\n * A VariableAccessor that directly updates instance variables without an explicit memory fence\n * or synchronization.\n *\n * If the table itself must be created for the first time or grown to accommodate a new variable,\n * those operations will be done in a thread-safe (volatile, atomic) way. However updates of an\n * entry in an existing table will not have any explicit memory fence or synchronization.\n */\npublic class NonvolatileVariableAccessor extends VariableAccessor {\n    /**\n     * Construct a new NonvolatileVariableAccessor for the given \"real\" class,\n     * variable name, variable index, and class ID.\n     *\n     * @param realClass the \"real\" class\n     * @param name the variable's name\n     * @param index the variable's index\n     * @param classId the class's ID\n     */\n    public NonvolatileVariableAccessor(RubyClass realClass, String name, int index, int classId) {\n        super(realClass, name, index, classId);\n    }\n\n    /**\n     * Set this variable into the given object using Unsafe to ensure\n     * safe creation or growth of the variable table.\n     *\n     * @param object the object into which to set this variable\n     * @param value the variable's value\n     */\n    public void set(Object object, Object value) {\n        ((RubyBasicObject) object).ensureInstanceVariablesSettable();\n        setVariable((RubyBasicObject) object, realClass, index, value);\n    }\n\n    /**\n     * Set the given variable index into the specified object. The \"real\" class\n     * and index are pass in to provide functional access. This version checks\n     * if self has been frozen before proceeding to set the variable.\n     *\n     * @param self the object into which to set the variable\n     * @param realClass the \"real\" class for the object\n     * @param index the index of the variable\n     * @param value the variable's value\n     */\n    public static void setVariableChecked(RubyBasicObject self, RubyClass realClass, int index, Object value) {\n        self.ensureInstanceVariablesSettable();\n        setVariable(self, realClass, index, value);\n    }\n\n    /**\n     * Set the given variable index into the specified object. The \"real\" class\n     * and index are pass in to provide functional access.\n     *\n     * @param self the object into which to set the variable\n     * @param realClass the \"real\" class for the object\n     * @param index the index of the variable\n     * @param value the variable's value\n     */\n    public static void setVariable(RubyBasicObject self, RubyClass realClass, int index, Object value) {\n        while (true) {\n            int currentStamp = self.varTableStamp;\n            // spin-wait if odd\n            if((currentStamp & 0x01) != 0)\n                continue;\n\n            Object[] currentTable = (Object[]) UnsafeHolder.U.getObjectVolatile(self, RubyBasicObject.VAR_TABLE_OFFSET);\n\n            if (currentTable == null || index >= currentTable.length) {\n                if (!createTableUnsafe(self, currentStamp, realClass, currentTable, index, value)) continue;\n            } else {\n                if (!updateTable(self, currentStamp, currentTable, index, value)) continue;\n            }\n\n            break;\n        }\n    }\n\n    /**\n     * Create or exapand a table for the given object, using Unsafe CAS and\n     * ordering operations to ensure visibility.\n     *\n     * @param self the object into which to set the variable\n     * @param currentStamp the current variable table stamp\n     * @param realClass the \"real\" class for the object\n     * @param currentTable the current table\n     * @param index the index of the variable\n     * @param value the variable's value\n     * @return whether the update was successful, for CAS retrying\n     */\n    private static boolean createTableUnsafe(RubyBasicObject self, int currentStamp, RubyClass realClass, Object[] currentTable, int index, Object value) {\n        // try to acquire exclusive access to the varTable field\n        if (!UnsafeHolder.U.compareAndSwapInt(self, RubyBasicObject.STAMP_OFFSET, currentStamp, ++currentStamp)) {\n            return false;\n        }\n\n        Object[] newTable = new Object[realClass.getVariableTableSizeWithExtras()];\n\n        if (currentTable != null) {\n            ArraySupport.copy(currentTable, 0, newTable, 0, currentTable.length);\n        }\n\n        newTable[index] = value;\n\n        UnsafeHolder.U.putOrderedObject(self, RubyBasicObject.VAR_TABLE_OFFSET, newTable);\n\n        // release exclusive access\n        self.varTableStamp = currentStamp + 1;\n\n        return true;\n    }\n\n    /**\n     * Update the given table table directly.\n     *\n     * @param self the object into which to set the variable\n     * @param currentStamp the current variable table stamp\n     * @param currentTable the current table\n     * @param index the index of the variable\n     * @param value the variable's value\n     * @return whether the update was successful, for CAS retrying\n     */\n    private static boolean updateTable(RubyBasicObject self, int currentStamp, Object[] currentTable, int index, Object value) {\n        currentTable[index] = value;\n\n        // validate stamp. redo on concurrent modification\n        return self.varTableStamp == currentStamp;\n    }\n}\n"
            }
        ],
        "SLOC": "143",
        "content": "/*\n ***** BEGIN LICENSE BLOCK *****\n * Version: EPL 2.0/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Eclipse Public\n * License Version 2.0 (the \"License\"); you may not use this file\n * except in compliance with the License. You may obtain a copy of\n * the License at http://www.eclipse.org/legal/epl-v20.html\n *\n * Software distributed under the License is distributed on an \"AS\n * IS\" basis, WITHOUT WARRANTY OF ANY KIND, either express or\n * implied. See the License for the specific language governing\n * rights and limitations under the License.\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the EPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the EPL, the GPL or the LGPL.\n ***** END LICENSE BLOCK *****/\n\npackage org.jruby.runtime.ivars;\n\nimport org.jruby.RubyBasicObject;\nimport org.jruby.RubyClass;\nimport org.jruby.util.ArraySupport;\nimport org.jruby.util.unsafe.UnsafeHolder;\n\n/**\n * A variable accessor that uses a stamped volatile int and Unsafe methods to\n * ensure thread-friendly table updating.\n */\npublic class StampedVariableAccessor extends VariableAccessor {\n    /**\n     * Construct a new StampedVariableAccessor for the given \"real\" class,\n     * variable name, variable index, and class ID.\n     * \n     * @param realClass the \"real\" class\n     * @param name the variable's name\n     * @param index the variable's index\n     * @param classId the class's ID\n     */\n    public StampedVariableAccessor(RubyClass realClass, String name, int index, int classId) {\n        super(realClass, name, index, classId);\n    }\n\n    /**\n     * Set this variable into the given object using Unsafe to ensure\n     * safe updating of the variable table.\n     * \n     * @param object the object into which to set this variable\n     * @param value the variable's value\n     */\n    public void set(Object object, Object value) {\n        ((RubyBasicObject)object).ensureInstanceVariablesSettable();\n        setVariable((RubyBasicObject)object, realClass, index, value);\n    }\n    \n    /**\n     * Set the given variable index into the specified object. The \"real\" class\n     * and index are pass in to provide functional access. This version checks\n     * if self has been frozen before proceeding to set the variable.\n     * \n     * @param self the object into which to set the variable\n     * @param realClass the \"real\" class for the object\n     * @param index the index of the variable\n     * @param value the variable's value\n     */\n    public static void setVariableChecked(RubyBasicObject self, RubyClass realClass, int index, Object value) {\n        self.ensureInstanceVariablesSettable();\n        setVariable(self, realClass, index, value);\n    }\n    \n    /**\n     * Set the given variable index into the specified object. The \"real\" class\n     * and index are pass in to provide functional access.\n     * \n     * @param self the object into which to set the variable\n     * @param realClass the \"real\" class for the object\n     * @param index the index of the variable\n     * @param value the variable's value\n     */\n    public static void setVariable(RubyBasicObject self, RubyClass realClass, int index, Object value) {\n        while (true) {\n            int currentStamp = self.varTableStamp;\n            // spin-wait if odd\n            if((currentStamp & 0x01) != 0)\n               continue;\n            \n            Object[] currentTable = (Object[]) UnsafeHolder.U.getObjectVolatile(self, RubyBasicObject.VAR_TABLE_OFFSET);\n            \n            if (currentTable == null || index >= currentTable.length) {\n                if (!createTableUnsafe(self, currentStamp, realClass, currentTable, index, value)) continue;\n            } else {\n                if (!updateTableUnsafe(self, currentStamp, currentTable, index, value)) continue;\n            }\n            \n            break;\n        }\n    }\n\n    /**\n     * Create or exapand a table for the given object, using Unsafe CAS and\n     * ordering operations to ensure visibility.\n     * \n     * @param self the object into which to set the variable\n     * @param currentStamp the current variable table stamp\n     * @param realClass the \"real\" class for the object\n     * @param currentTable the current table\n     * @param index the index of the variable\n     * @param value the variable's value\n     * @return whether the update was successful, for CAS retrying\n     */\n    private static boolean createTableUnsafe(RubyBasicObject self, int currentStamp, RubyClass realClass, Object[] currentTable, int index, Object value) {\n        // try to acquire exclusive access to the varTable field\n        if (!UnsafeHolder.U.compareAndSwapInt(self, RubyBasicObject.STAMP_OFFSET, currentStamp, ++currentStamp)) {\n            return false;\n        }\n        \n        Object[] newTable = new Object[realClass.getVariableTableSizeWithExtras()];\n        \n        if (currentTable != null) {\n            ArraySupport.copy(currentTable, 0, newTable, 0, currentTable.length);\n        }\n        \n        newTable[index] = value;\n        \n        UnsafeHolder.U.putOrderedObject(self, RubyBasicObject.VAR_TABLE_OFFSET, newTable);\n        \n        // release exclusive access\n        self.varTableStamp = currentStamp + 1;\n        \n        return true;\n    }\n\n    /**\n     * Update the given table table for the given object, using Unsafe fence or\n     * volatile operations to ensure visibility.\n     * \n     * @param self the object into which to set the variable\n     * @param currentStamp the current variable table stamp\n     * @param currentTable the current table\n     * @param index the index of the variable\n     * @param value the variable's value\n     * @return whether the update was successful, for CAS retrying\n     */\n    private static boolean updateTableUnsafe(RubyBasicObject self, int currentStamp, Object[] currentTable, int index, Object value) {\n        // shared access to varTable field.\n        currentTable[index] = value;\n        UnsafeHolder.U.fullFence();\n\n        // validate stamp. redo on concurrent modification\n        return self.varTableStamp == currentStamp;\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/test/java/org/jruby/test/bench/BenchFloatFibRecursive.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/core/src/test/java/org/jruby/test/bench/BenchFixnumFibRecursive.java",
                "SLOC": "55",
                "content": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage org.jruby.test.bench;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyFixnum;\nimport org.jruby.runtime.ThreadContext;\n\n/**\n *\n * @author headius\n */\npublic class BenchFixnumFibRecursive {\n    private static Ruby ruby = Ruby.newInstance();\n    \n    public static void main(String[] args) {\n        int times = 5;\n        int n = 35;\n        if (args.length >= 1) {\n            times = Integer.parseInt(args[0]);\n            if (args.length >= 2) {\n                n = Integer.parseInt(args[1]);\n            }\n        }\n        \n        // bench fixnum-boxed fib\n        for (int j = 0; j < times; j++) {\n            benchFixnumFib(n);\n        }\n    }\n    \n    public static void benchFixnumFib(int n) {\n        long start = System.currentTimeMillis();\n        ThreadContext context = ruby.getCurrentContext();\n        RubyFixnum result = boxedFib(context, RubyFixnum.newFixnum(ruby, n));\n        System.out.println(\"Took \" + (System.currentTimeMillis() - start) + \"ms for boxedFib(\" + n + \") = \" + result);\n    }\n    \n    public static RubyFixnum[] FIXNUM_CACHE = {\n        RubyFixnum.newFixnum(ruby, 0),\n        RubyFixnum.newFixnum(ruby, 1),\n        RubyFixnum.newFixnum(ruby, 2)\n    };\n    \n    public static RubyFixnum boxedFib(ThreadContext context, RubyFixnum n) {\n        if (n.op_lt(context, 2).isTrue()) {\n            return n;\n        } else {\n            return (RubyFixnum)boxedFib(\n                    context,\n                    (RubyFixnum)n.op_minus(\n                        context,\n                        2)).op_plus(\n                            context,\n                            boxedFib(\n                                context,\n                                (RubyFixnum)n.op_minus(context, 1)));\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "55",
        "content": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage org.jruby.test.bench;\n\nimport org.jruby.Ruby;\nimport org.jruby.RubyFloat;\nimport org.jruby.runtime.ThreadContext;\n\n/**\n *\n * @author headius\n */\npublic class BenchFloatFibRecursive {\n    private static Ruby ruby = Ruby.newInstance();\n\n    public static void main(String[] args) {\n        int times = 5;\n        int n = 30;\n        if (args.length >= 1) {\n            times = Integer.parseInt(args[0]);\n            if (args.length >= 2) {\n                n = Integer.parseInt(args[1]);\n            }\n        }\n\n        // bench float-boxed fib\n        for (int j = 0; j < times; j++) {\n            benchFloatFib(n);\n        }\n    }\n\n    public static void benchFloatFib(int n) {\n        long start = System.currentTimeMillis();\n        ThreadContext context = ruby.getCurrentContext();\n        RubyFloat result = boxedFib(context, RubyFloat.newFloat(ruby, n));\n        System.out.println(\"Took \" + (System.currentTimeMillis() - start) + \"ms for boxedFib(\" + n + \") = \" + result);\n    }\n\n    public static RubyFloat[] FLOAT_CACHE = {\n        RubyFloat.newFloat(ruby, 0),\n        RubyFloat.newFloat(ruby, 1),\n        RubyFloat.newFloat(ruby, 2)\n    };\n\n    public static RubyFloat boxedFib(ThreadContext context, RubyFloat n) {\n        if (n.op_lt(context, 2.0).isTrue()) {\n            return n;\n        } else {\n            return (RubyFloat)boxedFib(\n                    context,\n                    (RubyFloat)n.op_minus(\n                        context,\n                        2.0)).op_plus(\n                            context,\n                            boxedFib(\n                                context,\n                                (RubyFloat)n.op_minus(context, 1.0)));\n        }\n    }\n}\n"
    },
    "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/maven/jruby/src/it/extended/src/test/java/org/example/BaseTest.java": {
        "clones": [
            {
                "file": "/home/kilgore/Documents/git/SourcererCC/sysc5105-project/jruby-dist-9.2.13.0-src.zip/jruby-9.2.13.0/maven/jruby-jars/src/it/extended/src/test/java/org/example/BaseTest.java",
                "SLOC": "77",
                "content": "package org.example;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.util.Arrays;\nimport java.io.File;\nimport java.io.StringWriter;\n\nimport org.jruby.embed.LocalContextScope;\nimport org.jruby.embed.ScriptingContainer;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class BaseTest {\n\n    private final String basedir = new File( System.getProperty(\"basedir\"), \"../../../../../\" ).getAbsolutePath();\n\n    private ScriptingContainer newScriptingContainer() {\n        ScriptingContainer container = new ScriptingContainer(LocalContextScope.SINGLETHREAD);\n        container.setCurrentDirectory(basedir);\n    \tcontainer.getProvider().getRubyInstanceConfig().setLoadPaths(Arrays.asList(\".\", \"test\", \"test/mri\", \"test/mri/ruby\"));\n        container.runScriptlet(\"ENV['GEM_PATH']='lib/ruby/gems/shared'\");\n        return container;\n    }\n\n    private void runTests(ScriptingContainer container) throws Exception {\n        container.getProvider().getRuntime().tearDown(true);\n        container.terminate();\n    }\n\n    private void collectTests(ScriptingContainer container, String index) throws Exception {\n        container.runScriptlet(\"File.open(File.join('test', '\" + index + \".index')) do |f|\\n\" +\n                               \"      f.each_line.each do |line|\\n\" +\n                               \"        next if line =~ /^#/ or line.strip.empty?\\n\" +\n                               \"        filename = \\\"test/mri/#{line.chomp}\\\"\\n\" +\n                               \"        filename = \\\"test/jruby/#{line.chomp}.rb\\\" unless File.exist? filename\\n\" +\n                               \"        filename = \\\"test/#{line.chomp}.rb\\\" unless File.exist? filename\\n\" +\n                               \"        next unless File.file? filename\\n\" +\n                               \"        next if filename =~ /mri\\\\/net\\\\/http\\\\//\\n\" +\n                               \"        next if filename =~ /mri\\\\/ruby\\\\/test_class/\\n\" +\n                               \"        next if filename =~ /mri\\\\/ruby\\\\/test_io/\\n\" +\n                               \"        next if filename =~ /mri\\\\/ruby\\\\/test_econv/\\n\" +\n                               // TODO find a way to obey the minitest/excludes and get those back\n                               \"        next if filename =~ /psych\\\\/test_encoding.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_parser.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_psych.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/visitors\\\\/test_yaml_tree.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_document.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_tree_builder.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_date_time.rb/\\n\" +\n                               \"        next if filename =~ /psych\\\\/test_nil.rb/\\n\" +\n                               // TODO file an issue or so\n                               \"        next if filename =~ /test_load_compiled_ruby.rb/\\n\" +\n                               \"        next if filename =~ /compiler\\\\/test_jrubyc.rb/\\n\" +\n                               // TODO remove the following after fix of #2215\n                               \"        next if filename =~ /test_jar_on_load_path.rb/\\n\" +\n                               \"        next if filename =~ /test_file.rb/\\n\" +\n                               \"        filename.sub!( /.*\\\\/test\\\\//, 'test/' )\\n\" +\n                               \"        puts filename\\n\" +\n                               \"        require filename\\n\" +\n                               \"      end\\n\" +\n                               \"    end\");\n    }\n\n    void runIt(String index) throws Exception {\n        runIt(index, null);\n    }\n\n    void runIt(String index, String script) throws Exception {\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        try {\n            //Thread.currentThread().setContextClassLoader();\n            System.err.println(\"\\n\\nrunning --------- \" + index + \"\\n\");\n            ScriptingContainer container = newScriptingContainer();\n            if (script != null) container.runScriptlet( script );\n            if (index != null) collectTests(container, index);\n            runTests(container);\n        }\n        finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }\n\n    // @Test\n    // public void test() throws Exception {\n    // \trunIt(null, \"require '/home/christian/projects/active/maven/jruby/test/jruby/test_command_line_switches.rb'\");\n    // }\n\n}\n"
            }
        ],
        "SLOC": "76",
        "content": "package org.example;\n\nimport java.util.Arrays;\nimport java.io.File;\nimport java.net.URL;\nimport java.net.URLClassLoader;\n\nimport org.jruby.embed.LocalContextScope;\nimport org.jruby.embed.ScriptingContainer;\n\npublic class BaseTest {\n\n    private final String basedir = new File( System.getProperty(\"basedir\"), \"../../../../../\" ).getAbsolutePath();\n\n    private ScriptingContainer newScriptingContainer() {\n        ScriptingContainer container = new ScriptingContainer(LocalContextScope.SINGLETHREAD);\n        container.setCurrentDirectory(basedir);\n    \tcontainer.getProvider().getRubyInstanceConfig().setLoadPaths(Arrays.asList(\".\", \"test\", \"test/mri\", \"test/mri/ruby\"));\n        container.runScriptlet(\"ENV['GEM_PATH']='lib/ruby/gems/shared'\");\n        return container;\n    }\n\n    private void runTests(ScriptingContainer container) throws Exception {\n        container.getProvider().getRuntime().tearDown(true);\n        container.terminate();\n    }\n\n    protected void collectTests(ScriptingContainer container, String index) throws Exception {\n        container.runScriptlet(\n            \"File.open(File.join('test', '\" + index + \".index')) do |f|\\n\" +\n            \"      f.each_line do |line|\\n\" +\n            \"        next if line =~ /^#/ or line.strip.empty?\\n\" +\n            \"        filename = \\\"test/mri/#{line.chomp}\\\"\\n\" +\n            \"        filename = \\\"test/jruby/#{line.chomp}.rb\\\" unless File.exist? filename\\n\" +\n            \"        filename = \\\"test/#{line.chomp}.rb\\\" unless File.exist? filename\\n\" +\n            \"        next unless File.file? filename\\n\" +\n            \"        next if filename =~ /mri\\\\/net\\\\/http\\\\//\\n\" +\n            \"        next if filename =~ /mri\\\\/ruby\\\\/test_class/\\n\" +\n            \"        next if filename =~ /mri\\\\/ruby\\\\/test_io/\\n\" +\n            \"        next if filename =~ /mri\\\\/ruby\\\\/test_econv/\\n\" +\n            // TODO find a way to obey the minitest/excludes and get those back\n            \"        next if filename =~ /psych\\\\/test_encoding.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_parser.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_psych.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/visitors\\\\/test_yaml_tree.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_document.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_tree_builder.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_date_time.rb/\\n\" +\n            \"        next if filename =~ /psych\\\\/test_nil.rb/\\n\" +\n            // TODO file an issue or so\n            \"        next if filename =~ /test_load_compiled_ruby.rb/\\n\" +\n            \"        next if filename =~ /compiler\\\\/test_jrubyc.rb/\\n\" +\n            // TODO remove the following after fix of #2215\n            \"        next if filename =~ /test_jar_on_load_path.rb/\\n\" +\n            \"        next if filename =~ /test_file.rb/\\n\" +\n            \"        filename.sub!( /.*\\\\/test\\\\//, 'test/' )\\n\" +\n            \"        puts filename\\n\" +\n            \"        require filename\\n\" +\n            \"      end\\n\" +\n            \"    end\" );\n    }\n\n    void runIt(String index) throws Exception {\n        runIt(index, null);\n    }\n\n    void runIt(String index, String script) throws Exception {\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        try {\n            Thread.currentThread().setContextClassLoader(new URLClassLoader( new URL[] {}, null ));\n            System.err.println(\"\\n\\nrunning --------- \" + index + \"\\n\");\n            ScriptingContainer container = newScriptingContainer();\n            if (script != null) container.runScriptlet( script );\n            if (index != null) collectTests(container, index);\n            runTests(container);\n        }\n        finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }\n\n    // @Test\n    // public void test() throws Exception {\n    // \trunIt(null, \"require '/home/christian/projects/active/maven/jruby/test/jruby/test_command_line_switches.rb'\");\n    // }\n}\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/macosx/panels/dialogs/VLCTextfieldPanelController.h": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/macosx/panels/dialogs/VLCPopupPanelController.h",
                "SLOC": "47",
                "content": "/*****************************************************************************\n * VLCPopupPanelController.m: MacOS X interface module\n *****************************************************************************\n * Copyright (C) 2012 Felix Paul K\u00fchne\n *\n * Authors: Felix Paul K\u00fchne <fkuehne -at- videolan -dot- org>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#import <Cocoa/Cocoa.h>\n\n@interface VLCPopupPanelController : NSWindowController\n\n@property (weak) IBOutlet NSTextField *titleLabel;\n@property (weak) IBOutlet NSTextField *subtitleLabel;\n@property (weak) IBOutlet NSPopUpButton *popupButton;\n@property (weak) IBOutlet NSButton *cancelButton;\n@property (weak) IBOutlet NSButton *okButton;\n\n@property (readwrite) NSString *titleString;\n@property (readwrite) NSString *subTitleString;\n@property (readwrite) NSString *okButtonString;\n@property (readwrite) NSString *cancelButtonString;\n@property (readwrite) NSArray *popupButtonContent;\n\n/**\n * Completion handler for popup panel\n * \\param returnCode Result from panel. Can be NSModalResponseOK or NSModalResponseCancel.\n * \\param selectedIndex Selected index of the popup in panel.\n */\ntypedef void(^PopupPanelCompletionBlock)(NSInteger returnCode, NSInteger selectedIndex);\n\n/**\n * Shows the panel as a modal dialog with window as its owner.\n * \\param window Parent window for the dialog.\n * \\param handler Completion block.\n */\n- (void)runModalForWindow:(NSWindow *)window completionHandler:(PopupPanelCompletionBlock)handler;\n\n- (IBAction)windowElementAction:(id)sender;\n\n@end\n"
            }
        ],
        "SLOC": "46",
        "content": "/*****************************************************************************\n * VLCTextfieldPanelController.h: MacOS X interface module\n *****************************************************************************\n * Copyright (C) 2012 Felix Paul K\u00fchne\n *\n * Authors: Felix Paul K\u00fchne <fkuehne -at- videolan -dot- org>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#import <Cocoa/Cocoa.h>\n\n@interface VLCTextfieldPanelController : NSWindowController\n\n@property (weak) IBOutlet NSTextField *titleLabel;\n@property (weak) IBOutlet NSTextField *subtitleLabel;\n@property (weak) IBOutlet NSTextField *textField;\n@property (weak) IBOutlet NSButton *cancelButton;\n@property (weak) IBOutlet NSButton *okButton;\n\n@property (readwrite) NSString *titleString;\n@property (readwrite) NSString *subTitleString;\n@property (readwrite) NSString *okButtonString;\n@property (readwrite) NSString *cancelButtonString;\n\n/**\n * Completion handler for textfield panel\n * \\param returnCode Result from panel. Can be NSModalResponseOK or NSModalResponseCancel.\n * \\param resultingText Resulting text string entered in panel.\n */\ntypedef void(^TextfieldPanelCompletionBlock)(NSInteger returnCode, NSString *resultingText);\n\n/**\n * Shows the panel as a modal dialog with window as its owner.\n * \\param window Parent window for the dialog.\n * \\param handler Completion block.\n */\n- (void)runModalForWindow:(NSWindow *)window completionHandler:(TextfieldPanelCompletionBlock)handler;\n\n- (IBAction)windowElementAction:(id)sender;\n\n@end\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/qt/medialibrary/mlartistmodel.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/qt/medialibrary/mlalbumtrackmodel.hpp",
                "SLOC": "64",
                "content": "/*****************************************************************************\n * Copyright (C) 2019 VLC authors and VideoLAN\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * ( at your option ) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef MLTRACKMODEL_HPP\n#define MLTRACKMODEL_HPP\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <QObject>\n#include \"mlbasemodel.hpp\"\n#include \"mlalbumtrack.hpp\"\n\n\nclass MLAlbumTrackModel : public MLSlidingWindowModel<MLAlbumTrack>\n{\n    Q_OBJECT\n\npublic:\n    enum Roles {\n        TRACK_ID = Qt::UserRole + 1,\n        TRACK_TITLE,\n        TRACK_COVER,\n        TRACK_NUMBER,\n        TRACK_DISC_NUMBER,\n        TRACK_DURATION,\n        TRACK_DURATION_SHORT,\n        TRACK_ALBUM,\n        TRACK_ARTIST,\n\n        TRACK_TITLE_FIRST_SYMBOL,\n        TRACK_ALBUM_FIRST_SYMBOL,\n        TRACK_ARTIST_FIRST_SYMBOL,\n    };\n\npublic:\n    explicit MLAlbumTrackModel(QObject *parent = nullptr);\n\n    virtual ~MLAlbumTrackModel() = default;\n\n    QVariant data(const QModelIndex &index, int role) const override;\n    QHash<int, QByteArray> roleNames() const override;\n\nprotected:\n    ListCacheLoader<std::unique_ptr<MLAlbumTrack>> *createLoader() const override;\n\nprivate:\n    vlc_ml_sorting_criteria_t roleToCriteria(int role) const override;\n    vlc_ml_sorting_criteria_t nameToCriteria(QByteArray name) const override;\n    QByteArray criteriaToName(vlc_ml_sorting_criteria_t criteria) const override;\n    virtual void onVlcMlEvent( const MLEvent &event ) override;\n\n    static QHash<QByteArray, vlc_ml_sorting_criteria_t> M_names_to_criteria;\n\n    struct Loader : public BaseLoader\n    {\n        Loader(const MLAlbumTrackModel &model) : BaseLoader(model) {}\n        size_t count() const override;\n        std::vector<std::unique_ptr<MLAlbumTrack>> load(size_t index, size_t count) const override;\n    };\n};\n#endif // MLTRACKMODEL_HPP\n"
            }
        ],
        "SLOC": "60",
        "content": "/*****************************************************************************\n * Copyright (C) 2019 VLC authors and VideoLAN\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * ( at your option ) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef MLARTISTMODEL_HPP\n#define MLARTISTMODEL_HPP\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <QObject>\n#include \"mlbasemodel.hpp\"\n#include \"mlartist.hpp\"\n\nclass MLArtistModel : public MLSlidingWindowModel<MLArtist>\n{\n    Q_OBJECT\npublic:\n    enum Roles\n    {\n        ARTIST_ID = Qt::UserRole + 1,\n        ARTIST_NAME,\n        ARTIST_SHORT_BIO,\n        ARTIST_COVER,\n        ARTIST_NB_ALBUMS,\n        ARTIST_NB_TRACKS\n    };\n\npublic:\n    explicit MLArtistModel(QObject *parent = nullptr);\n    virtual ~MLArtistModel() = default;\n\n    QVariant data(const QModelIndex &index, int role) const override;\n    QHash<int, QByteArray> roleNames() const override;\n\nprotected:\n    ListCacheLoader<std::unique_ptr<MLArtist>> *createLoader() const override;\n\nprivate:\n    vlc_ml_sorting_criteria_t roleToCriteria(int role) const override;\n    vlc_ml_sorting_criteria_t nameToCriteria(QByteArray name) const override;\n    QByteArray criteriaToName(vlc_ml_sorting_criteria_t criteria) const override;\n    virtual void onVlcMlEvent(const MLEvent &event) override;\n    void thumbnailUpdated(int idx) override;\n\n    static QHash<QByteArray, vlc_ml_sorting_criteria_t> M_names_to_criteria;\n\n    struct Loader : public BaseLoader\n    {\n        Loader(const MLArtistModel &model) : BaseLoader(model) {}\n        size_t count() const override;\n        std::vector<std::unique_ptr<MLArtist>> load(size_t index, size_t count) const override;\n    };\n};\n\n#endif // MLARTISTMODEL_HPP\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/qt/medialibrary/mlgenremodel.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/qt/medialibrary/mlartistmodel.hpp",
                "SLOC": "60",
                "content": "/*****************************************************************************\n * Copyright (C) 2019 VLC authors and VideoLAN\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * ( at your option ) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef MLARTISTMODEL_HPP\n#define MLARTISTMODEL_HPP\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <QObject>\n#include \"mlbasemodel.hpp\"\n#include \"mlartist.hpp\"\n\nclass MLArtistModel : public MLSlidingWindowModel<MLArtist>\n{\n    Q_OBJECT\npublic:\n    enum Roles\n    {\n        ARTIST_ID = Qt::UserRole + 1,\n        ARTIST_NAME,\n        ARTIST_SHORT_BIO,\n        ARTIST_COVER,\n        ARTIST_NB_ALBUMS,\n        ARTIST_NB_TRACKS\n    };\n\npublic:\n    explicit MLArtistModel(QObject *parent = nullptr);\n    virtual ~MLArtistModel() = default;\n\n    QVariant data(const QModelIndex &index, int role) const override;\n    QHash<int, QByteArray> roleNames() const override;\n\nprotected:\n    ListCacheLoader<std::unique_ptr<MLArtist>> *createLoader() const override;\n\nprivate:\n    vlc_ml_sorting_criteria_t roleToCriteria(int role) const override;\n    vlc_ml_sorting_criteria_t nameToCriteria(QByteArray name) const override;\n    QByteArray criteriaToName(vlc_ml_sorting_criteria_t criteria) const override;\n    virtual void onVlcMlEvent(const MLEvent &event) override;\n    void thumbnailUpdated(int idx) override;\n\n    static QHash<QByteArray, vlc_ml_sorting_criteria_t> M_names_to_criteria;\n\n    struct Loader : public BaseLoader\n    {\n        Loader(const MLArtistModel &model) : BaseLoader(model) {}\n        size_t count() const override;\n        std::vector<std::unique_ptr<MLArtist>> load(size_t index, size_t count) const override;\n    };\n};\n\n#endif // MLARTISTMODEL_HPP\n"
            }
        ],
        "SLOC": "61",
        "content": "/*****************************************************************************\n * Copyright (C) 2019 VLC authors and VideoLAN\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * ( at your option ) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef MLGENREMODEL_HPP\n#define MLGENREMODEL_HPP\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <memory>\n#include <QObject>\n#include \"mlbasemodel.hpp\"\n#include \"mlgenre.hpp\"\n\nclass MLGenreModel : public MLSlidingWindowModel<MLGenre>\n{\n    Q_OBJECT\n\npublic:\n    enum Roles\n    {\n        GENRE_ID = Qt::UserRole + 1,\n        GENRE_NAME,\n        GENRE_NB_TRACKS,\n        GENRE_ARTISTS,\n        GENRE_TRACKS,\n        GENRE_ALBUMS,\n        GENRE_COVER\n    };\n\npublic:\n    explicit MLGenreModel(QObject *parent = nullptr);\n    virtual ~MLGenreModel() = default;\n\n    QHash<int, QByteArray> roleNames() const override;\n    QVariant data(const QModelIndex &index, int role) const override;\n\nprotected:\n    ListCacheLoader<std::unique_ptr<MLGenre>> *createLoader() const override;\n\nprivate:\n    void onVlcMlEvent(const MLEvent &event) override;\n    void thumbnailUpdated(int idx) override;\n    vlc_ml_sorting_criteria_t roleToCriteria(int role) const override;\n    vlc_ml_sorting_criteria_t nameToCriteria(QByteArray name) const override;\n\n\n    static QHash<QByteArray, vlc_ml_sorting_criteria_t> M_names_to_criteria;\n\n    struct Loader : public BaseLoader\n    {\n        Loader(const MLGenreModel &model) : BaseLoader(model) {}\n        size_t count() const override;\n        std::vector<std::unique_ptr<MLGenre>> load(size_t index, size_t count) const override;\n    };\n};\n\n\n#endif // MLGENREMODEL_HPP\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/win32/win32_factory.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/os2/os2_factory.hpp",
                "SLOC": "123",
                "content": "/*****************************************************************************\n * os2_factory.hpp\n *****************************************************************************\n * Copyright (C) 2003, 2013 the VideoLAN team\n *\n * Authors: Cyril Deguet      <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *          KO Myung-Hun      <komh@chollian.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef OS2_FACTORY_HPP\n#define OS2_FACTORY_HPP\n\n#ifdef HAVE_CONFIG_H\n# include \"config.h\"\n#endif\n\n#include \"../src/os_factory.hpp\"\n#include \"../src/generic_window.hpp\"\n\n#include <map>\n\n\n/// Class used to instanciate OS2 specific objects\nclass OS2Factory: public OSFactory\n{\npublic:\n    OS2Factory( intf_thread_t *pIntf );\n    virtual ~OS2Factory();\n\n    /// Initialization method\n    virtual bool init();\n\n    /// Instantiate an object OSGraphics\n    virtual OSGraphics *createOSGraphics( int width, int height );\n\n    /// Get the instance of the singleton OSLoop\n    virtual OSLoop *getOSLoop();\n\n    /// Destroy the instance of OSLoop\n    virtual void destroyOSLoop();\n\n    /// Minimize all the windows\n    virtual void minimize();\n\n    /// Restore the minimized windows\n    virtual void restore();\n\n    /// Add an icon in the system tray\n    virtual void addInTray();\n\n    /// Remove the icon from the system tray\n    virtual void removeFromTray();\n\n    /// Show the task in the task bar\n    virtual void addInTaskBar();\n\n    /// Remove the task from the task bar\n    virtual void removeFromTaskBar();\n\n    /// Instantiate an OSTimer with the given command\n    virtual OSTimer *createOSTimer( CmdGeneric &rCmd );\n\n    /// Instantiate an OSWindow object\n    virtual OSWindow *createOSWindow( GenericWindow &rWindow,\n                                      bool dragDrop, bool playOnDrop,\n                                      OSWindow *pParent,\n                                      GenericWindow::WindowType_t type );\n\n    /// Instantiate an object OSTooltip\n    virtual OSTooltip *createOSTooltip();\n\n    /// Instantiate an object OSPopup\n    virtual OSPopup *createOSPopup();\n\n    /// Get the directory separator\n    virtual const std::string &getDirSeparator() const { return m_dirSep; }\n\n    /// Get the resource path\n    virtual const std::list<std::string> &getResourcePath() const\n        { return m_resourcePath; }\n\n    /// Get the screen size\n    virtual int getScreenWidth() const;\n    virtual int getScreenHeight() const;\n\n    /// Get Monitor Information\n    virtual void getMonitorInfo( OSWindow* pWindow,\n                                 int* x, int* y,\n                                 int* width, int* height ) const;\n    virtual void getMonitorInfo( int numScreen,\n                                 int* x, int* y,\n                                 int* width, int* height ) const;\n\n    /// Get the work area (screen area without taskbars)\n    virtual SkinsRect getWorkArea() const;\n\n    /// Get the position of the mouse\n    virtual void getMousePos( int &rXPos, int &rYPos ) const;\n\n    /// Change the cursor\n    virtual void changeCursor( CursorType_t type ) const;\n\n    /// Delete a directory recursively\n    virtual void rmDir( const std::string &rPath );\n\n    /// Map to find the GenericWindow associated with a OS2Window\n    std::map<HWND, GenericWindow*> m_windowMap;\n\n    /// Get the parent window handle\n    HWND getParentWindow() { return m_hParentClientWindow; }\n\n    /// Get the m_cursorType\n    CursorType_t getCursorType() const { return m_cursorType; }\n\n    /// Callback function (Windows Procedure)\n    static MRESULT EXPENTRY OS2FrameProc( HWND hwnd, ULONG msg,\n                                          MPARAM mp1, MPARAM Mp2 );\n    static MRESULT EXPENTRY OS2Proc( HWND hwnd, ULONG msg,\n                                     MPARAM mp1, MPARAM Mp2 );\n\nprivate:\n    /// Handle of the instance\n    HMODULE m_hInst;\n    /// Handle of anchor-block\n    HAB m_hab;\n    /// Handle of message queue\n    HMQ m_hmq;\n    /// Handle of the parent window\n    HWND m_hParentWindow;\n    /// Handle of the client window of the parent window\n    HWND m_hParentClientWindow;\n    /// Window procedure of the old frame window\n    PFNWP m_pfnwpOldFrameProc;\n    /// Cursor type\n    mutable CursorType_t m_cursorType;\n    /// Directory separator\n    const std::string m_dirSep;\n    /// Resource path\n    std::list<std::string> m_resourcePath;\n};\n\n\n#endif\n"
            }
        ],
        "SLOC": "121",
        "content": "/*****************************************************************************\n * win32_factory.hpp\n *****************************************************************************\n * Copyright (C) 2003 the VideoLAN team\n *\n * Authors: Cyril Deguet     <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef WIN32_FACTORY_HPP\n#define WIN32_FACTORY_HPP\n\n#ifdef HAVE_CONFIG_H\n# include \"config.h\"\n#endif\n\n#include <windows.h>\n#include <shellapi.h>\n// #include <wingdi.h>\n#include \"../src/os_factory.hpp\"\n#include \"../src/generic_window.hpp\"\n\n#include <map>\n\n\n/// Class used to instanciate Win32 specific objects\nclass Win32Factory: public OSFactory\n{\npublic:\n    Win32Factory( intf_thread_t *pIntf );\n    virtual ~Win32Factory();\n\n    /// Initialization method\n    virtual bool init();\n\n    /// Instantiate an object OSGraphics\n    virtual OSGraphics *createOSGraphics( int width, int height );\n\n    /// Get the instance of the singleton OSLoop\n    virtual OSLoop *getOSLoop();\n\n    /// Destroy the instance of OSLoop\n    virtual void destroyOSLoop();\n\n    /// Minimize all the windows\n    virtual void minimize();\n\n    /// Restore the minimized windows\n    virtual void restore();\n\n    /// Add an icon in the system tray\n    virtual void addInTray();\n\n    /// Remove the icon from the system tray\n    virtual void removeFromTray();\n\n    /// Show the task in the task bar\n    virtual void addInTaskBar();\n\n    /// Remove the task from the task bar\n    virtual void removeFromTaskBar();\n\n    /// Instantiate an OSTimer with the given command\n    virtual OSTimer *createOSTimer( CmdGeneric &rCmd );\n\n    /// Instantiate an OSWindow object\n    virtual OSWindow *createOSWindow( GenericWindow &rWindow,\n                                      bool dragDrop, bool playOnDrop,\n                                      OSWindow *pParent,\n                                      GenericWindow::WindowType_t type );\n\n    /// Instantiate an object OSTooltip\n    virtual OSTooltip *createOSTooltip();\n\n    /// Instantiate an object OSPopup\n    virtual OSPopup *createOSPopup();\n\n    /// Get the directory separator\n    virtual const std::string &getDirSeparator() const { return m_dirSep; }\n\n    /// Get the resource path\n    virtual const std::list<std::string> &getResourcePath() const\n        { return m_resourcePath; }\n\n    /// Get the screen size\n    virtual int getScreenWidth() const;\n    virtual int getScreenHeight() const;\n\n    /// Get Monitor Information\n    virtual void getMonitorInfo( OSWindow *pWindow,\n                                 int* x, int* y,\n                                 int* width, int* height ) const;\n    virtual void getMonitorInfo( int numScreen,\n                                 int* x, int* y,\n                                 int* width, int* height ) const;\n\n    /// Get the work area (screen area without taskbars)\n    virtual SkinsRect getWorkArea() const;\n\n    /// Get the position of the mouse\n    virtual void getMousePos( int &rXPos, int &rYPos ) const;\n\n    /// Change the cursor\n    virtual void changeCursor( CursorType_t type ) const;\n\n    /// Delete a directory recursively\n    virtual void rmDir( const std::string &rPath );\n\n    /// Map to find the GenericWindow associated with a Win32Window\n    std::map<HWND, GenericWindow*> m_windowMap;\n\n    HWND getParentWindow() { return m_hParentWindow; }\n\n    /// Callback function (Windows Procedure)\n    static LRESULT CALLBACK Win32Proc( HWND hwnd, UINT uMsg,\n                                       WPARAM wParam, LPARAM lParam );\n\n    /// Callback (enumerate multiple screens)\n    static BOOL CALLBACK MonitorEnumProc( HMONITOR hMonitor, HDC hdcMonitor,\n                                          LPRECT lprcMonitor, LPARAM dwData );\nprivate:\n    /// Handle of the instance\n    HINSTANCE m_hInst;\n    /// Handle of the parent window\n    HWND m_hParentWindow;\n    /// Structure for the system tray\n    NOTIFYICONDATA m_trayIcon;\n    /// Handle on msimg32.dll (for TransparentBlt)\n    HINSTANCE m_hMsimg32;\n    /// Handle on user32.dll (for SetLayeredWindowAttributes)\n    HINSTANCE m_hUser32;\n    /// Directory separator\n    const std::string m_dirSep;\n    /// Resource path\n    std::list<std::string> m_resourcePath;\n    /// Monitors detected\n    std::list<HMONITOR> m_monitorList;\n};\n\n\n#endif\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/win32/win32_popup.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/os2/os2_popup.hpp",
                "SLOC": "55",
                "content": "/*****************************************************************************\n * os2_popup.hpp\n *****************************************************************************\n * Copyright (C) 2003, 2013 the VideoLAN team\n *\n * Authors: Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *          KO Myung-Hun      <komh@chollian.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef OS2_POPUP_HPP\n#define OS2_POPUP_HPP\n\n#include \"../src/os_popup.hpp\"\n\n\n/// OS2 implementation of OSPopup\nclass OS2Popup: public OSPopup\n{\npublic:\n    OS2Popup( intf_thread_t *pIntf, HWND hAssociatedWindow );\n\n    virtual ~OS2Popup();\n\n    /// Show the popup menu at the given (absolute) corrdinates\n    virtual void show( int xPos, int yPos );\n\n    /// Hide the popup menu\n    virtual void hide();\n\n    /// Append a new menu item with the given label to the popup menu\n    virtual void addItem( const std::string &rLabel, int pos );\n\n    /// Create a dummy menu item to separate sections\n    virtual void addSeparator( int pos );\n\n    /// Return the position of the item identified by the given id\n    virtual int getPosFromId( int id ) const { return id; }\n\nprivate:\n    /// Menu handle\n    HWND m_hMenu;\n    /// Handle of the window which will receive the menu events\n    HWND m_hWnd;\n\n    /**\n     * Find the item before which to insert another item so that the\n     * newly added item is at the position pos _when the whole menu has\n     * been built_ (no assumption is made for the order of insertion of\n     * the items)\n     */\n    unsigned int findInsertionPoint( unsigned int pos ) const;\n};\n\n\n#endif\n"
            }
        ],
        "SLOC": "55",
        "content": "/*****************************************************************************\n * win32_popup.hpp\n *****************************************************************************\n * Copyright (C) 2003 the VideoLAN team\n *\n * Authors: Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef WIN32_POPUP_HPP\n#define WIN32_POPUP_HPP\n\n#include \"../src/os_popup.hpp\"\n#include <windows.h>\n\n\n/// Win32 implementation of OSPopup\nclass Win32Popup: public OSPopup\n{\npublic:\n    Win32Popup( intf_thread_t *pIntf, HWND hAssociatedWindow );\n\n    virtual ~Win32Popup();\n\n    /// Show the popup menu at the given (absolute) corrdinates\n    virtual void show( int xPos, int yPos );\n\n    /// Hide the popup menu\n    virtual void hide();\n\n    /// Append a new menu item with the given label to the popup menu\n    virtual void addItem( const std::string &rLabel, int pos );\n\n    /// Create a dummy menu item to separate sections\n    virtual void addSeparator( int pos );\n\n    /// Return the position of the item identified by the given id\n    virtual int getPosFromId( int id ) const { return id; }\n\nprivate:\n    /// Menu handle\n    HMENU m_hMenu;\n    /// Handle of the window which will receive the menu events\n    HWND m_hWnd;\n\n    /**\n     * Find the item before which to insert another item so that the\n     * newly added item is at the position pos _when the whole menu has\n     * been built_ (no assumption is made for the order of insertion of\n     * the items)\n     */\n    unsigned int findInsertionPoint( unsigned int pos ) const;\n};\n\n\n#endif\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/win32/win32_window.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/os2/os2_window.hpp",
                "SLOC": "78",
                "content": "/*****************************************************************************\n * os2_window.hpp\n *****************************************************************************\n * Copyright (C) 2003, 2013 the VideoLAN team\n *\n * Authors: Cyril Deguet      <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *          KO Myung-Hun      <komh@chollian.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef OS2_WINDOW_HPP\n#define OS2_WINDOW_HPP\n\n#include \"../src/generic_window.hpp\"\n#include \"../src/os_window.hpp\"\n\n#include <vlc_vout_window.h>\n\n\n/// OS2 implementation of OSWindow\nclass OS2Window: public OSWindow\n{\npublic:\n    OS2Window( intf_thread_t *pIntf, GenericWindow &rWindow,\n               HMODULE hInst, HWND hParentWindow,\n               bool dragDrop, bool playOnDrop,\n               OS2Window *pParentWindow, GenericWindow::WindowType_t );\n    virtual ~OS2Window();\n\n    // Show the window\n    virtual void show() const;\n\n    // Hide the window\n    virtual void hide() const;\n\n    /// Move and resize the window\n    virtual void moveResize( int left, int top, int width, int height ) const;\n\n    /// Bring the window on top\n    virtual void raise() const;\n\n    /// Set the opacity of the window (0 = transparent, 255 = opaque)\n    virtual void setOpacity( uint8_t value ) const;\n\n    /// Toggle the window on top\n    virtual void toggleOnTop( bool onTop ) const;\n\n    /// Getter for the window handle\n    HWND getHandle() const { return m_hWndClient; }\n\n    /// Set the window handler\n    void setOSHandle( vout_window_t *pWnd ) const {\n        pWnd->type = VOUT_WINDOW_TYPE_HWND;\n        pWnd->info.has_double_click = true;\n        pWnd->handle.hwnd = ( void * )getHandle();\n    }\n\n    /// reparent the window\n    void reparent( OSWindow *parent, int x, int y, int w, int h );\n\n    /// invalidate a window surface\n    bool invalidateRect( int x, int y, int w, int h ) const;\n\nprivate:\n    /// Window handle\n    HWND m_hWnd;\n    /// Client window handle\n    HWND m_hWndClient;\n    /// Window parent's handle\n    HWND m_hWnd_parent;\n    /// Indicates whether the window handles drag&drop events\n    bool m_dragDrop;\n    /// Indicates whether the window is layered\n    mutable bool m_isLayered;\n    /// Parent window\n    OS2Window *m_pParent;\n    /// window type\n    GenericWindow::WindowType_t m_type;\n};\n\n\n#endif\n"
            }
        ],
        "SLOC": "79",
        "content": "/*****************************************************************************\n * win32_window.hpp\n *****************************************************************************\n * Copyright (C) 2003 the VideoLAN team\n *\n * Authors: Cyril Deguet     <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef WIN32_WINDOW_HPP\n#define WIN32_WINDOW_HPP\n\n#include \"../src/generic_window.hpp\"\n#include \"../src/os_window.hpp\"\n\n#include <vlc_vout_window.h>\n\n#include <windows.h>\n#include <ole2.h>   // LPDROPTARGET\n\n\n/// Win32 implementation of OSWindow\nclass Win32Window: public OSWindow\n{\npublic:\n    Win32Window( intf_thread_t *pIntf, GenericWindow &rWindow,\n                 HINSTANCE hInst, HWND hParentWindow,\n                 bool dragDrop, bool playOnDrop,\n                 Win32Window *pParentWindow, GenericWindow::WindowType_t );\n    virtual ~Win32Window();\n\n    // Show the window\n    virtual void show() const;\n\n    // Hide the window\n    virtual void hide() const;\n\n    /// Move and resize the window\n    virtual void moveResize( int left, int top, int width, int height ) const;\n\n    /// Bring the window on top\n    virtual void raise() const;\n\n    /// Set the opacity of the window (0 = transparent, 255 = opaque)\n    virtual void setOpacity( uint8_t value ) const;\n\n    /// Toggle the window on top\n    virtual void toggleOnTop( bool onTop ) const;\n\n    /// Set the window handler\n    void setOSHandle( vout_window_t *pWnd ) const {\n        pWnd->type = VOUT_WINDOW_TYPE_HWND;\n        pWnd->info.has_double_click = true;\n        pWnd->handle.hwnd = m_hWnd;\n    }\n\n    /// Getter for the window handle\n    HWND getHandle() const { return m_hWnd; }\n\n    /// reparent the window\n    void reparent( OSWindow* parent, int x, int y, int w, int h );\n\n    /// invalidate a window surface\n    bool invalidateRect( int x, int y, int w, int h ) const;\n\nprivate:\n    /// Window handle\n    HWND m_hWnd;\n    /// Window parent's handle\n    HWND m_hWnd_parent;\n    /// Indicates whether the window handles drag&drop events\n    bool m_dragDrop;\n    /// Drop target\n    LPDROPTARGET m_pDropTarget;\n    /// Indicates whether the window is layered\n    mutable bool m_isLayered;\n    /// Parent window\n    Win32Window *m_pParent;\n    /// window type\n    GenericWindow::WindowType_t m_type;\n\n};\n\n\n#endif\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/x11/x11_graphics.hpp": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/gui/skins2/win32/win32_graphics.hpp",
                "SLOC": "81",
                "content": "/*****************************************************************************\n * win32_graphics.hpp\n *****************************************************************************\n * Copyright (C) 2003 the VideoLAN team\n *\n * Authors: Cyril Deguet     <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef WIN32_GRAPHICS_HPP\n#define WIN32_GRAPHICS_HPP\n\n#include \"../src/os_graphics.hpp\"\n#include <windows.h>\n\n\nclass GenericBitmap;\n\n/// Win32 implementation of OSGraphics\nclass Win32Graphics: public OSGraphics\n{\npublic:\n    Win32Graphics( intf_thread_t *pIntf, int width, int height );\n    virtual ~Win32Graphics();\n\n    /// Clear the graphics\n    virtual void clear( int xDest = 0, int yDest = 0,\n                        int width = -1, int height = -1 );\n\n    /// Render a bitmap on this graphics\n    virtual void drawBitmap( const GenericBitmap &rBitmap, int xSrc = 0,\n                             int ySrc = 0, int xDest = 0, int yDest = 0,\n                             int width = -1, int height = -1,\n                             bool blend = false );\n\n    /// Draw another graphics on this one\n    virtual void drawGraphics( const OSGraphics &rGraphics, int xSrc = 0,\n                               int ySrc = 0, int xDest = 0, int yDest = 0,\n                               int width = -1, int height = -1 );\n\n    /// Draw an empty rectangle on the grahics (color is #RRGGBB)\n    virtual void drawRect( int left, int top, int width, int height,\n                           uint32_t color );\n\n\n    /// Draw a filled rectangle on the grahics (color is #RRGGBB)\n    virtual void fillRect( int left, int top, int width, int height,\n                           uint32_t color );\n\n    /// Set the shape of a window with the mask of this graphics.\n    virtual void applyMaskToWindow( OSWindow &rWindow );\n\n    /// Copy the graphics on a window\n    virtual void copyToWindow( OSWindow &rWindow, int xSrc,\n                               int ySrc, int width, int height,\n                               int xDest, int yDest );\n\n    /// Tell whether the pixel at the given position is visible\n    virtual bool hit( int x, int y ) const;\n\n    /// Getters for the size\n    virtual int getWidth() const { return m_width; }\n    virtual int getHeight() const { return m_height; }\n\n    /// Get the device context handler\n    virtual HDC getDC() const { return m_hDC; }\n\n    /// Get the mask\n    virtual HRGN getMask() const { return m_mask; }\n\nprivate:\n    /// Size of the image\n    int m_width, m_height;\n\n    /// Device context\n    HDC m_hDC;\n\n    /// Transparency mask\n    HRGN m_mask;\n\n    /// Add a segment in a region\n    void addSegmentInRegion( HRGN &rMask, int start, int end, int line );\n\n    /// check boundaries for graphics and bitmaps\n    bool checkBoundaries( int x_src, int y_src, int w_src, int h_src,\n                          int& x_target, int& y_target,\n                          int& w_target, int& h_target );\n};\n\n\n#endif\n"
            }
        ],
        "SLOC": "91",
        "content": "/*****************************************************************************\n * x11_graphics.hpp\n *****************************************************************************\n * Copyright (C) 2003 the VideoLAN team\n *\n * Authors: Cyril Deguet     <asmax@via.ecp.fr>\n *          Olivier Teuli\u00e8re <ipkiss@via.ecp.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write to the Free Software Foundation, Inc.,\n * 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n#ifndef X11_GRAPHICS_HPP\n#define X11_GRAPHICS_HPP\n\n#include <X11/Xlib.h>\n#include <X11/Xutil.h>\n\n#include \"../src/os_graphics.hpp\"\n\nclass X11Display;\nclass GenericWindow;\nclass GenericBitmap;\n\n/// X11 implementation of OSGraphics\nclass X11Graphics: public OSGraphics\n{\npublic:\n    X11Graphics( intf_thread_t *pIntf, X11Display &rDisplay, int width,\n                 int height);\n\n    virtual ~X11Graphics();\n\n    /// Clear the graphics\n    virtual void clear( int xDest = 0, int yDest = 0,\n                        int width = -1, int height = -1 );\n\n    /// Draw another graphics on this one\n    virtual void drawGraphics( const OSGraphics &rGraphics, int xSrc = 0,\n                               int ySrc = 0, int xDest = 0, int yDest = 0,\n                               int width = -1, int height = -1 );\n\n    /// Render a bitmap on this graphics\n    virtual void drawBitmap( const GenericBitmap &rBitmap, int xSrc = 0,\n                             int ySrc = 0, int xDest = 0, int yDest = 0,\n                             int width = -1, int height = -1,\n                             bool blend = false );\n\n    /// Draw a filled rectangle on the grahics (color is #RRGGBB)\n    virtual void fillRect( int left, int top, int width, int height,\n                           uint32_t color );\n\n    /// Draw an empty rectangle on the grahics (color is #RRGGBB)\n    virtual void drawRect( int left, int top, int width, int height,\n                           uint32_t color );\n\n    /// Set the shape of a window with the mask of this graphics.\n    virtual void applyMaskToWindow( OSWindow &rWindow );\n\n    /// Copy the graphics on a window\n    virtual void copyToWindow( OSWindow &rWindow, int xSrc,\n                               int ySrc, int width, int height,\n                               int xDest, int yDest );\n\n    /// Tell whether the pixel at the given position is visible\n    virtual bool hit( int x, int y ) const;\n\n    /// Getters\n    virtual int getWidth() const { return m_width; }\n    virtual int getHeight() const { return m_height; }\n\n    /// Get the pixmap ID\n    Pixmap getDrawable() const { return m_pixmap; }\n    /// Get the transparency mask\n    Region getMask() const { return m_mask; }\n\nprivate:\n    /// X11 display\n    X11Display &m_rDisplay;\n    /// Size of the image\n    int m_width, m_height;\n    /// Pixmap\n    Pixmap m_pixmap;\n    /// Transparency mask\n    Region m_mask;\n    /// Graphics context\n    GC m_gc;\n\n    /// Add an horizontal segment in a region\n    void addHSegmentInRegion( Region &rMask, int xStart, int xEnd, int y );\n    /// Add a vertical segment in a region\n    void addVSegmentInRegion( Region &rMask, int yStart, int yEnd, int x );\n    /// check boundaries for graphics and bitmaps\n    bool checkBoundaries( int x_src, int y_src, int w_src, int h_src,\n                          int& x_target, int& y_target,\n                          int& w_target, int& h_target );\n};\n\n\n#endif\n"
    },
    "sysc5105-project/vlc-master/tree/master/modules/video_filter/wave.c": {
        "clones": [
            {
                "file": "sysc5105-project/vlc-master/tree/master/modules/video_filter/ripple.c",
                "SLOC": "180",
                "content": "/*****************************************************************************\n * ripple.c : Ripple video effect plugin for vlc\n *****************************************************************************\n * Copyright (C) 2000-2006 VLC authors and VideoLAN\n *\n * Authors: Samuel Hocevar <sam@zoy.org>\n *          Antoine Cellerier <dionoea -at- videolan -dot- org>\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n/*****************************************************************************\n * Preamble\n *****************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n# include \"config.h\"\n#endif\n\n#include <math.h>                                            /* sin(), cos() */\n\n#include <vlc_common.h>\n#include <vlc_plugin.h>\n#include <vlc_filter.h>\n#include <vlc_picture.h>\n#include \"filter_picture.h\"\n\n/*****************************************************************************\n * Local prototypes\n *****************************************************************************/\nstatic int  Create    ( filter_t * );\n\nVIDEO_FILTER_WRAPPER(Filter)\n\n/*****************************************************************************\n * Module descriptor\n *****************************************************************************/\nvlc_module_begin ()\n    set_description( N_(\"Ripple video filter\") )\n    set_shortname( N_( \"Ripple\" ))\n    set_category( CAT_VIDEO )\n    set_subcategory( SUBCAT_VIDEO_VFILTER )\n\n    add_shortcut( \"ripple\" )\n    set_callback_video_filter( Create )\nvlc_module_end ()\n\n/*****************************************************************************\n * filter_sys_t: Distort video output method descriptor\n *****************************************************************************\n * This structure is part of the video output thread descriptor.\n * It describes the Distort specific properties of an output thread.\n *****************************************************************************/\ntypedef struct\n{\n    double  f_angle;\n    vlc_tick_t last_date;\n} filter_sys_t;\n\n/*****************************************************************************\n * Create: allocates Distort video thread output method\n *****************************************************************************\n * This function allocates and initializes a Distort vout method.\n *****************************************************************************/\nstatic int Create( filter_t *p_filter )\n{\n    const vlc_chroma_description_t *p_chroma =\n        vlc_fourcc_GetChromaDescription( p_filter->fmt_in.video.i_chroma );\n    if( p_chroma == NULL || p_chroma->plane_count == 0 )\n        return VLC_EGENERIC;\n\n    /* Allocate structure */\n    filter_sys_t *p_sys = vlc_obj_malloc( VLC_OBJECT(p_filter), sizeof( filter_sys_t ) );\n    if( unlikely(p_sys == NULL) )\n        return VLC_ENOMEM;\n    p_filter->p_sys = p_sys;\n\n    p_filter->ops = &Filter_ops;\n\n    p_sys->f_angle = 0.0;\n    p_sys->last_date = 0;\n\n    return VLC_SUCCESS;\n}\n\n/*****************************************************************************\n * Render: displays previously rendered output\n *****************************************************************************\n * This function send the currently rendered image to Distort image, waits\n * until it is displayed and switch the two rendering buffers, preparing next\n * frame.\n *****************************************************************************/\nstatic void Filter( filter_t *p_filter, picture_t *p_pic, picture_t *p_outpic )\n{\n    double f_angle;\n    vlc_tick_t new_date = vlc_tick_now();\n\n    filter_sys_t *p_sys = p_filter->p_sys;\n\n    p_sys->f_angle -= 10.0f * secf_from_vlc_tick(p_sys->last_date - new_date);\n    p_sys->last_date = new_date;\n    f_angle = p_sys->f_angle;\n\n    for( int i_index = 0; i_index < p_pic->i_planes; i_index++ )\n    {\n        int i_first_line, i_visible_pitch, i_num_lines, i_offset, i_pixel_pitch,\n            i_visible_pixels;\n        uint16_t black_pixel;\n        uint8_t *p_in, *p_out;\n\n        black_pixel = ( p_pic->i_planes > 1 && i_index == Y_PLANE ) ? 0x00\n                                                                    : 0x80;\n\n        i_num_lines = p_pic->p[i_index].i_visible_lines;\n        i_visible_pitch = p_pic->p[i_index].i_visible_pitch;\n        i_pixel_pitch = p_pic->p[i_index].i_pixel_pitch;\n\n        switch( p_filter->fmt_in.video.i_chroma )\n        {\n            CASE_PLANAR_YUV10\n                black_pixel = ( p_pic->i_planes > 1 && i_index == Y_PLANE ) ? 0x00\n                                                                            : 0x200;\n                break;\n            CASE_PACKED_YUV_422\n                // Quick hack to fix u/v inversion occuring with 2 byte pixel pitch\n                i_pixel_pitch *= 2;\n                /* fallthrough */\n            CASE_PLANAR_YUV\n                black_pixel = ( p_pic->i_planes > 1 && i_index == Y_PLANE ) ? 0x00\n                                                                            : 0x80;\n                break;\n            default:\n                black_pixel = 0x00;\n        }\n\n        i_visible_pixels = i_visible_pitch/i_pixel_pitch;\n\n        i_first_line = i_num_lines * 4 / 5;\n\n        p_in = p_pic->p[i_index].p_pixels;\n        p_out = p_outpic->p[i_index].p_pixels;\n\n        for( int i_line = 0; i_line < i_first_line; i_line++ )\n        {\n            memcpy( p_out, p_in, i_visible_pitch );\n            p_in += p_pic->p[i_index].i_pitch;\n            p_out += p_outpic->p[i_index].i_pitch;\n        }\n\n        /* Ok, we do 3 times the sin() calculation for each line. So what ? */\n        for( int i_line = i_first_line; i_line < i_num_lines; i_line++ )\n        {\n            /* Calculate today's offset, don't go above 1/20th of the screen */\n            i_offset = (int)( (double)(i_visible_pixels)\n                         * sin( f_angle + 2.0 * (double)i_line\n                                              / (double)( 1 + i_line\n                                                            - i_first_line) )\n                         * (double)(i_line - i_first_line)\n                         / (double)i_num_lines\n                         / 8.0 )*i_pixel_pitch;\n\n            if( i_offset )\n            {\n                void *p_black_out;\n                if( i_offset < 0 )\n                {\n                    memcpy( p_out, p_in - i_offset,\n                                i_visible_pitch + i_offset );\n                    p_black_out = &p_out[i_visible_pitch + i_offset];\n                    i_offset = -i_offset;\n                }\n                else\n                {\n                    memcpy( p_out + i_offset, p_in,\n                                i_visible_pitch - i_offset );\n                    p_black_out = p_out;\n                }\n                if (black_pixel > 0xFF)\n                {\n                    uint16_t *p_out16 = p_black_out;\n                    for (int x = 0; x < i_offset; x += 2)\n                        *p_out16++ = black_pixel;\n                }\n                else\n                    memset( p_black_out, black_pixel, i_offset );\n            }\n            else\n            {\n                memcpy( p_out, p_in, i_visible_pitch );\n            }\n            p_in -= p_pic->p[i_index].i_pitch;\n            p_out += p_outpic->p[i_index].i_pitch;\n        }\n    }\n}\n"
            }
        ],
        "SLOC": "168",
        "content": "/*****************************************************************************\n * wave.c : Wave video effect plugin for vlc\n *****************************************************************************\n * Copyright (C) 2000-2008 VLC authors and VideoLAN\n *\n * Authors: Samuel Hocevar <sam@zoy.org>\n *          Antoine Cellerier <dionoea -at- videolan -dot- org>\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.\n *****************************************************************************/\n\n/*****************************************************************************\n * Preamble\n *****************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n# include \"config.h\"\n#endif\n\n#include <math.h>                                            /* sin(), cos() */\n\n#include <vlc_common.h>\n#include <vlc_plugin.h>\n#include <vlc_filter.h>\n#include <vlc_picture.h>\n#include \"filter_picture.h\"\n\n/*****************************************************************************\n * Local prototypes\n *****************************************************************************/\nstatic int  Create    ( filter_t * );\n\n/*****************************************************************************\n * Module descriptor\n *****************************************************************************/\nvlc_module_begin ()\n    set_description( N_(\"Wave video filter\") )\n    set_shortname( N_( \"Wave\" ))\n    set_category( CAT_VIDEO )\n    set_subcategory( SUBCAT_VIDEO_VFILTER )\n\n    add_shortcut( \"wave\" )\n    set_callback_video_filter( Create )\nvlc_module_end ()\n\nVIDEO_FILTER_WRAPPER(Filter)\n\n/*****************************************************************************\n * filter_sys_t: Distort video output method descriptor\n *****************************************************************************\n * This structure is part of the video output thread descriptor.\n * It describes the Distort specific properties of an output thread.\n *****************************************************************************/\ntypedef struct\n{\n    double  f_angle;\n    vlc_tick_t last_date;\n} filter_sys_t;\n\n/*****************************************************************************\n * Create: allocates Distort video thread output method\n *****************************************************************************\n * This function allocates and initializes a Distort vout method.\n *****************************************************************************/\nstatic int Create( filter_t *p_filter )\n{\n    const vlc_chroma_description_t *p_chroma =\n        vlc_fourcc_GetChromaDescription( p_filter->fmt_in.video.i_chroma );\n    if( p_chroma == NULL || p_chroma->plane_count == 0 )\n        return VLC_EGENERIC;\n\n    /* Allocate structure */\n    filter_sys_t *p_sys = p_filter->p_sys =\n        vlc_obj_malloc( VLC_OBJECT(p_filter), sizeof(*p_sys) );\n    if( !p_sys )\n        return VLC_ENOMEM;\n\n    p_filter->ops = &Filter_ops;\n\n    p_sys->f_angle = 0.0;\n    p_sys->last_date = 0;\n\n    return VLC_SUCCESS;\n}\n\n/*****************************************************************************\n * Render: displays previously rendered output\n *****************************************************************************\n * This function send the currently rendered image to Distort image, waits\n * until it is displayed and switch the two rendering buffers, preparing next\n * frame.\n *****************************************************************************/\nstatic void Filter( filter_t *p_filter, picture_t *p_pic, picture_t *p_outpic )\n{\n    double f_angle;\n    vlc_tick_t new_date = vlc_tick_now();\n\n    filter_sys_t *p_sys = p_filter->p_sys;\n\n    p_sys->f_angle += 5.0f * secf_from_vlc_tick(new_date - p_sys->last_date);\n    p_sys->last_date = new_date;\n    f_angle = p_sys->f_angle;\n\n    for( int i_index = 0 ; i_index < p_pic->i_planes ; i_index++ )\n    {\n        int i_num_lines, i_visible_pitch, i_pixel_pitch, i_offset,\n            i_visible_pixels;\n        uint16_t black_pixel;\n        uint8_t *p_in, *p_out;\n\n        p_in = p_pic->p[i_index].p_pixels;\n        p_out = p_outpic->p[i_index].p_pixels;\n\n        i_num_lines = p_pic->p[i_index].i_visible_lines;\n        i_visible_pitch = p_pic->p[i_index].i_visible_pitch;\n        i_pixel_pitch = p_pic->p[i_index].i_pixel_pitch;\n\n        switch( p_filter->fmt_in.video.i_chroma )\n        {\n            CASE_PLANAR_YUV10\n                black_pixel = ( p_pic->i_planes > 1 && i_index == Y_PLANE ) ? 0x00\n                                                                            : 0x200;\n                break;\n            CASE_PACKED_YUV_422\n                // Quick hack to fix u/v inversion occuring with 2 byte pixel pitch\n                i_pixel_pitch *= 2;\n                /* fallthrough */\n            CASE_PLANAR_YUV\n                black_pixel = ( p_pic->i_planes > 1 && i_index == Y_PLANE ) ? 0x00\n                                                                            : 0x80;\n                break;\n            default:\n                black_pixel = 0x00;\n        }\n\n        i_visible_pixels = i_visible_pitch/i_pixel_pitch;\n\n        /* Ok, we do 3 times the sin() calculation for each line. So what ? */\n        for( int i_line = 0 ; i_line < i_num_lines ; i_line++ )\n        {\n            /* Calculate today's offset, don't go above 1/20th of the screen */\n            i_offset = (int)( (double)(i_visible_pixels)\n                         * sin( f_angle + 10.0 * (double)i_line\n                                               / (double)i_num_lines )\n                         / 20.0 )*i_pixel_pitch;\n\n            if( i_offset )\n            {\n                void *p_black_out;\n                if( i_offset < 0 )\n                {\n                    memcpy( p_out, p_in - i_offset,\n                                i_visible_pitch + i_offset );\n                    p_black_out = &p_out[i_visible_pitch + i_offset];\n                    i_offset = -i_offset;\n                }\n                else\n                {\n                    memcpy( p_out + i_offset, p_in,\n                                i_visible_pitch - i_offset );\n                    p_black_out = p_out;\n                }\n                if (black_pixel > 0xFF)\n                {\n                    uint16_t *p_out16 = p_black_out;\n                    for (int x = 0; x < i_offset; x += 2)\n                        *p_out16++ = black_pixel;\n                }\n                else\n                    memset( p_black_out, black_pixel, i_offset );\n            }\n            else\n            {\n                memcpy( p_out, p_in, i_visible_pitch );\n            }\n            p_in += p_pic->p[i_index].i_pitch;\n            p_out += p_outpic->p[i_index].i_pitch;\n        }\n    }\n}\n"
    }
}
Processed printing in 0:03:40.513553
